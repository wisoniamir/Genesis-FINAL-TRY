{
  "genesis_eventbus_metadata": {
    "version": "v3.0_institutional",
    "generation_timestamp": "2025-06-20T17:14:24.760196",
    "architect_mode": true,
    "institutional_compliance": true,
    "target_directory": "c:\\Users\\patra\\Genesis FINAL TRY\\GENESIS_HIGH_ARCHITECTURE_STATUS_20250620_165419",
    "institutional_routing": true
  },
  "active_routes": {
    "advanced_signal_optimization_engine.py": {
      "module": "advanced_signal_optimization_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"SignalConfidenceRated\", self._handle_signal_telemetry)",
        "event_bus.subscribe(\"LiveTradeExecuted\", self._handle_trade_outcome)",
        "event_bus.subscribe(\"TradeJournalEntry\", self._handle_journal_entry)",
        "event_bus.subscribe(\"PatternDetected\", self._handle_pattern_signal)",
        "event_bus.subscribe(\"ASIOEvaluateSignal\", self._handle_signal_evaluation)",
        "event_bus.subscribe(\"ASIOOptimizeStrategy\", self._handle_strategy_optimization)",
        "emit_telemetry(\"MODULE_INITIALIZED\", {\n            \"model_type\": \"RandomForestClassifier\",\n            \"max_history\": 1000,\n            \"features_tracked\": 8\n        })",
        "emit_telemetry(\"SIGNAL_TELEMETRY_COLLECTED\", {\n                        \"signal_id\": event_data.get(\"signal_id\", \"unknown\")",
        "emit_telemetry(\"ERROR\", {\"error\": str(e)",
        "emit_telemetry(\"TRADE_OUTCOME_RECORDED\", {\n                        \"signal_id\": signal_id,\n                        \"outcome\": outcome,\n                        \"pnl\": pnl,\n                        \"outcomes_collected\": len(self.outcome_history)",
        "emit_telemetry(\"ERROR\", {\"error\": str(e)",
        "emit_telemetry(\"JOURNAL_CONTEXT_EXTRACTED\", context_features)",
        "emit_telemetry(\"PATTERN_SIGNAL_PROCESSED\", pattern_data)",
        "emit_telemetry(\"SIGNAL_CONFIDENCE_PREDICTED\", {\n                        \"signal_id\": event_data.get(\"signal_id\")",
        "emit_telemetry(\"ERROR\", {\"error\": str(e)",
        "emit_telemetry(\"STRATEGY_OPTIMIZATION_GENERATED\", {\n                    \"win_rate\": win_rate,\n                    \"recommendations_count\": len(optimization_advice)",
        "emit_telemetry(\"MODEL_TRAINING_COMPLETED\", {\n                \"accuracy\": self.model_accuracy,\n                \"precision\": self.model_precision,\n                \"recall\": self.model_recall,\n                \"training_samples\": len(X_train)",
        "emit_telemetry(\"ERROR\", {\"error\": str(e)",
        "emit_telemetry(self, event_type: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "autonomous_order_executor.py": {
      "module": "autonomous_order_executor",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": dt.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"MT5MarketUpdate\", self._handle_market_update)",
        "event_bus.subscribe(\"PlaybookGenerated\", self._handle_playbook_update)",
        "event_bus.subscribe(\"KillSwitchTriggered\", self._handle_kill_switch)",
        "event_bus.subscribe(\"MacroBlackoutAlert\", self._handle_macro_blackout)",
        "event_bus.subscribe(\"TelemetryUpdate\", self._handle_telemetry_update)",
        "event_bus.subscribe(\"ValidatedSniperSignal\", self._handle_sniper_signal)",
        "EventBus()",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "auto_execution_manager_quarantined.py": {
      "module": "auto_execution_manager_quarantined",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "backtest_dashboard_module.py": {
      "module": "backtest_dashboard_module",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"backtest:completed\", self._on_backtest_completed)",
        "event_bus.subscribe(\"backtest:progress\", self._on_backtest_progress)",
        "event_bus.subscribe(\"backtest:error\", self._on_backtest_error)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "broker_rule_sync_telemetry_widget.py": {
      "module": "broker_rule_sync_telemetry_widget",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"WIDGET_INITIALIZED\", {\n            \"widget_id\": self.widget_config[\"widget_id\"],\n            \"update_interval\": self.widget_config[\"update_interval_seconds\"],\n            \"timestamp\": datetime.utcnow()",
        "emit_telemetry(self, event_type: str, data: Dict[str, Any])",
        "emit_telemetry(\"WIDGET_STOPPED\", {\n            \"widget_id\": self.widget_config[\"widget_id\"],\n            \"timestamp\": datetime.utcnow()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "build_status_updater.py": {
      "module": "build_status_updater",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "build_tracker_logger.py": {
      "module": "build_tracker_logger",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "dashboard.py": {
      "module": "dashboard",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "dashboard_engine.py": {
      "module": "dashboard_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "dashboard_frontend.py": {
      "module": "dashboard_frontend",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "dashboard_linkage_patch.py": {
      "module": "dashboard_linkage_patch",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "dashboard_widgets.py": {
      "module": "dashboard_widgets",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "debug_telemetry_events.py": {
      "module": "debug_telemetry_events",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "emergency_architect_compliance_enforcer.py": {
      "module": "emergency_architect_compliance_enforcer",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "eventbus_compliance_fingerprint_sync.py": {
      "module": "eventbus_compliance_fingerprint_sync",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_control_core.py": {
      "module": "execution_control_core",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_dashboard.py": {
      "module": "execution_dashboard",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_dispatcher.py": {
      "module": "execution_dispatcher",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_engine.py": {
      "module": "execution_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(signal_type, data)",
        "event_bus.subscribe(signal_type, handler)",
        "emit_signal(self, signal_type, data)",
        "emit_telemetry(\"mt5_connection_established\", self._get_account_info()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_engine_orchestrator.py": {
      "module": "execution_engine_orchestrator",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_engine_v3_phase66.py": {
      "module": "execution_engine_v3_phase66",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "execution_flow_controller.py": {
      "module": "execution_flow_controller",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"PrioritizedSignal\", self._handle_prioritized_signal, self.module_name)",
        "event_bus.subscribe(\"ExecutionSequenceRequest\", self._handle_execution_sequence_request, self.module_name)",
        "event_bus.subscribe(\"ResourceRequest\", self._handle_resource_request, self.module_name)",
        "event_bus.subscribe(\"FlowStatusQuery\", self._handle_flow_status_query, self.module_name)",
        "event_bus.subscribe(\"CircuitBreakerTrigger\", self._handle_circuit_breaker_trigger, self.module_name)",
        "event_bus.subscribe(\"EmergencyStop\", self._handle_emergency_stop, self.module_name)",
        "event_bus.subscribe(\"OptimizationRequest\", self._handle_optimization_request, self.module_name)",
        "EventBus()",
        "emit_telemetry(\"controller_started\", {\"status\": \"active\", \"timestamp\": time.time()",
        "emit_telemetry(\"controller_stopped\", {\"status\": \"stopped\", \"timestamp\": time.time()",
        "emit_telemetry(\"prioritized_signal_received\", {\n                \"flow_id\": flow.flow_id,\n                \"priority\": priority,\n                \"signal_id\": signal_id\n            })",
        "emit_telemetry(\"execution_sequence_received\", {\n                \"flow_id\": flow.flow_id,\n                \"sequence_id\": sequence_id,\n                \"steps_count\": len(steps)",
        "emit_telemetry(\"resource_allocation\", {\n                \"request_id\": request_id,\n                \"allocated\": allocated,\n                \"resources_requested\": required_resources\n            })",
        "emit_telemetry(\"circuit_breaker_triggered\", {\n                \"reason\": trigger_reason,\n                \"severity\": severity,\n                \"active_flows_paused\": len(self.active_flows)",
        "emit_telemetry(\"emergency_stop_activated\", {\n                \"reason\": stop_reason,\n                \"flows_stopped\": len(self.active_flows)",
        "emit_telemetry(\"optimization_applied\", {\n                \"type\": optimization_type,\n                \"improvements\": optimization_results\n            })",
        "emit_telemetry(\"flow_completed\", {\n                            \"flow_id\": flow.flow_id,\n                            \"duration\": time.time()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_advanced_tkinter_ui.py": {
      "module": "genesis_advanced_tkinter_ui",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('telemetry:heartbeat', {\n                            'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('system:kill_switch', {\n                    'active': True,\n                    'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('system:kill_switch', {\n                    'active': False,\n                    'timestamp': datetime.now(timezone.utc)",
        "event_bus.subscribe('execution:fill', self._handle_execution_fill)",
        "event_bus.subscribe('execution:cancel', self._handle_execution_cancel)",
        "event_bus.subscribe('system:kill_switch', self._handle_kill_switch)",
        "event_bus.subscribe('telemetry:heartbeat', self._handle_telemetry)",
        "event_bus.subscribe('risk:breach', self._handle_risk_breach)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_architect_agent.py": {
      "module": "genesis_architect_agent",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "genesis_boot_test.py": {
      "module": "genesis_boot_test",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_cleanup_engine_v3.py": {
      "module": "genesis_cleanup_engine_v3",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"module_initialized\", {\"engine_id\": self.engine_id})",
        "emit_telemetry(self, event_type: str, data: Dict[str, Any])",
        "emit_telemetry(\"cleanup_skip_critical\", {\"path\": path, \"reason\": \"critical_folder\"})",
        "emit_telemetry(\"folder_deleted\", {\"path\": path})",
        "emit_telemetry(\"cleanup_error\", {\"path\": path, \"error\": str(e)",
        "emit_telemetry(\"cleanup_skip_critical\", {\"path\": path, \"reason\": \"critical_file\"})",
        "emit_telemetry(\"file_deleted\", {\"path\": path})",
        "emit_telemetry(\"cleanup_error\", {\"path\": path, \"error\": str(e)",
        "emit_telemetry(\"process_kill\", {\"target\": \"node.exe\", \"result\": result})",
        "emit_telemetry(\"process_kill\", {\"target\": \"node\", \"result\": result})",
        "emit_telemetry(\"process_kill_error\", {\"error\": str(e)",
        "emit_telemetry(\"build_status_updated\", {\"actions\": len(self.cleanup_log)",
        "emit_telemetry(\"build_tracker_updated\", {\"entries\": len(self.cleanup_log)",
        "emit_telemetry(\"integrity_check\", {\n            \"files_present\": present,\n            \"files_missing\": missing,\n            \"total_required\": len(required_files)",
        "emit_telemetry(\"cleanup_complete\", {\n            \"actions_performed\": len(self.cleanup_log)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_compliance_core.py": {
      "module": "genesis_compliance_core",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry()",
        "emit_telemetry(self)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_dashboard_ui_live_sync.py": {
      "module": "genesis_dashboard_ui_live_sync",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_dependency_validator.py": {
      "module": "genesis_dependency_validator",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_final_system_validation.py": {
      "module": "genesis_final_system_validation",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_gui_launcher.py": {
      "module": "genesis_gui_launcher",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_installer_builder.py": {
      "module": "genesis_installer_builder",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_integrity_auditor.py": {
      "module": "genesis_integrity_auditor",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_launcher.py": {
      "module": "genesis_launcher",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "genesis_production_dashboard.py": {
      "module": "genesis_production_dashboard",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "genesis_trade_engine.py": {
      "module": "genesis_trade_engine",
      "routes": [
        "emit_telemetry(\"signal_processing_error\", {\"error\": str(e)",
        "emit_telemetry(\"trade_execution_error\", {\"error\": str(e)",
        "emit_telemetry(self, event_type: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "hardened_event_bus.py": {
      "module": "hardened_event_bus",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "institutional_signal_validator.py": {
      "module": "institutional_signal_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "kill_switch_compliance.py": {
      "module": "kill_switch_compliance",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "launch_dashboard.py": {
      "module": "launch_dashboard",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "launch_genesis.py": {
      "module": "launch_genesis",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "module_recovery_engine.py": {
      "module": "module_recovery_engine",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"module.recovery\", self.handle_recovery_request)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "mt5_adapter.py": {
      "module": "mt5_adapter",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "mt5_bridge_test.py": {
      "module": "mt5_bridge_test",
      "routes": [
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "mt5_connection_bridge.py": {
      "module": "mt5_connection_bridge",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "mt5_connector_stub.py": {
      "module": "mt5_connector_stub",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "mt5_sync_adapter.py": {
      "module": "mt5_sync_adapter",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "pattern_meta_strategy_engine.py": {
      "module": "pattern_meta_strategy_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"TradeJournalEntry\", self._handle_trade_journal_entry, self.module_name)",
        "event_bus.subscribe(\"MACD_CrossEvent\", self._handle_macd_cross_event, self.module_name)",
        "event_bus.subscribe(\"StochRSI_PeakCross\", self._handle_stochrsi_peak_cross, self.module_name)",
        "event_bus.subscribe(\"ExecutionSnapshot\", self._handle_execution_snapshot, self.module_name)",
        "event_bus.subscribe(\"PriceActionPattern\", self._handle_price_action_pattern, self.module_name)",
        "event_bus.subscribe(\"SL_HitEvent\", self._handle_sl_hit_event, self.module_name)",
        "event_bus.subscribe(\"TP_HitEvent\", self._handle_tp_hit_event, self.module_name)",
        "event_bus.subscribe(\"ValidatedSignal\", self._handle_validated_signal, self.module_name)",
        "event_bus.subscribe(\"StrategyMutationEvent\", self._handle_strategy_mutation, self.module_name)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self._handle_alpha_decay, self.module_name)",
        "event_bus.subscribe(\"MetaStrategyUpdate\", self._handle_meta_strategy_update, self.module_name)",
        "emit_telemetry(\"initialization\", {\"status\": \"active\"})",
        "emit_telemetry(self, action: str, data: Dict)",
        "emit_telemetry(\"trade_journal_processed\", {\"trade_id\": event_data.get('trade_id', 'unknown')",
        "emit_telemetry(\"validated_signal_processed\", {\"signal_id\": event_data.get('signal_id', 'unknown')",
        "emit_telemetry(\"macd_cross_processed\", {\"event\": event_data.get('cross_type', 'unknown')",
        "emit_telemetry(\"stochrsi_cross_processed\", {\"event\": event_data.get('cross_type', 'unknown')",
        "emit_telemetry(\"execution_snapshot_processed\", {\"snapshot_id\": event_data.get('snapshot_id', 'unknown')",
        "emit_telemetry(\"price_action_processed\", {\"pattern_type\": event_data.get('pattern_type', 'unknown')",
        "emit_telemetry(\"sl_hit_processed\", {\"trade_id\": event_data.get('trade_id', 'unknown')",
        "emit_telemetry(\"tp_hit_processed\", {\"trade_id\": event_data.get('trade_id', 'unknown')",
        "emit_telemetry(\"meta_bias_analysis_complete\", analysis_result)",
        "emit_telemetry(\"meta_bias_analysis_error\", {\"error\": str(e)",
        "emit_telemetry(\"strategy_mutation_applied\", {\n                \"mutation_id\": mutation_id,\n                \"strategy_id\": strategy_id,\n                \"mutation_type\": mutation_type,\n                \"justification\": justification,\n                \"parameters\": mutation_params\n            })",
        "emit_telemetry(\"alpha_decay_detected\", {\n                \"strategy_id\": strategy_id,\n                \"decay_score\": decay_score,\n                \"affected_patterns\": affected_patterns,\n                \"action_taken\": \"weight_reduction\" if affected_patterns else \"monitoring\"\n            })",
        "emit_telemetry(\"meta_strategy_updated\", {\n                \"strategy_id\": strategy_id,\n                \"update_type\": update_type,\n                \"parameters\": parameters\n            })",
        "emit_telemetry(\"phase_11_ready\", pipeline_status)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "phase34_telemetry_dashboard_panel.py": {
      "module": "phase34_telemetry_dashboard_panel",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"SUBSCRIPTION_ERROR\", {\"error\": str(e)",
        "emit_telemetry(self, event_type: str, data: Dict[str, Any])",
        "emit_telemetry(\"DASHBOARD_INITIALIZED\", {\n            \"version\": self.version,\n            \"subscriptions_count\": 4,\n            \"auto_refresh_enabled\": True\n        })"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "phase51_eventbus_compliance_fingerprint_sync.py": {
      "module": "phase51_eventbus_compliance_fingerprint_sync",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "phase61_compliance_validation_engine.py": {
      "module": "phase61_compliance_validation_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "phase_50_execution_loop_telemetry.py": {
      "module": "phase_50_execution_loop_telemetry",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "phase_65_compliance_healing.py": {
      "module": "phase_65_compliance_healing",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "phase_91_telemetry_wiring_enforcer.py": {
      "module": "phase_91_telemetry_wiring_enforcer",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "phase_92a_complete_dashboard.py": {
      "module": "phase_92a_complete_dashboard",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "phase_92a_live_dashboard.py": {
      "module": "phase_92a_live_dashboard",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "phase_93_telemetry_enforcer.py": {
      "module": "phase_93_telemetry_enforcer",
      "routes": [
        "event_bus.emit(\"telemetry\", {                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "self_healing_strategy_engine.py": {
      "module": "self_healing_strategy_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "signal_bias_dashboard.py": {
      "module": "signal_bias_dashboard",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\", \"Module initialized successfully\")",
        "emit_telemetry(\"signal_feedback_processed\", \n                                    f\"Processed signal feedback for {signal_type}, new avg score: {signal_data['avg_score']:.2f}\")",
        "emit_telemetry(\"strategy_score_processed\", \n                                    f\"Processed strategy score for {signal_type}, score: {strategy_score:.2f}, win rate: {win_rate:.2f}\")",
        "emit_telemetry(\"invalid_pattern_logged\", \n                                    f\"Logged invalid pattern {pattern_type}, reason: {reason}\")",
        "emit_telemetry(self, action, message=None)",
        "emit_telemetry(\"startup\", \"SignalBiasDashboard service started\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "signal_confidence_rating_engine.py": {
      "module": "signal_confidence_rating_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"MODULE_INITIALIZED\")",
        "emit_telemetry(\"SCORE_PROCESSING_UPDATE\")"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "signal_engine.py": {
      "module": "signal_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"MODULE_INITIALIZED\")",
        "emit_telemetry(\"TICK_PROCESSING_UPDATE\")"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "signal_fusion_matrix.py": {
      "module": "signal_fusion_matrix",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"MultiStrategySignal\", self._handle_multi_strategy_signal)",
        "event_bus.subscribe(\"SignalFusionRequest\", self._handle_fusion_request)",
        "event_bus.subscribe(\"WeightRecalculationRequest\", self._handle_weight_recalculation)",
        "event_bus.subscribe(\"FusionParameterUpdate\", self._handle_parameter_update)",
        "event_bus.subscribe(\"SignalQualityUpdate\", self._handle_quality_update)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "signal_historical_telemetry_linker.py": {
      "module": "signal_historical_telemetry_linker",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "signal_loop_reinforcement_engine.py": {
      "module": "signal_loop_reinforcement_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"ExecutionLog\", self.handle_execution_log, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"TradeJournalEntry\", self.handle_trade_journal_entry, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"BacktestResults\", self.handle_backtest_results, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"StrategyFeedback\", self.handle_strategy_feedback, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"PatternDetected\", self.handle_pattern_detected, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"TradeOutcomeFeedback\", self.handle_trade_outcome_feedback, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"ReinforceSignalMemory\", self.handle_reinforce_signal_memory, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"PnLScoreUpdate\", self.handle_pnl_score_update, \"SignalLoopReinforcementEngine\")",
        "emit_telemetry(\"initialization\", \"STEP 8 Enhanced module initialized successfully\")",
        "emit_telemetry(self, action, message=None)",
        "emit_telemetry(\"startup\", \"SignalLoopReinforcementEngine STEP 8 service started\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "signal_loop_reinforcement_engine_step8.py": {
      "module": "signal_loop_reinforcement_engine_step8",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"DecayDetectedEvent\", decay_event)",
        "event_bus.emit(\"SignalFeedbackScore\", feedback_score)",
        "event_bus.emit(\"ReinforcementLearningLog\", learning_log)",
        "event_bus.emit(\"SignalLoopTelemetry\", telemetry_data)",
        "event_bus.emit(\"SignalLoopError\", error_data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"ExecutionLog\", self.handle_execution_log, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"TradeJournalEntry\", self.handle_trade_journal_entry, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"BacktestResults\", self.handle_backtest_results, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"StrategyFeedback\", self.handle_strategy_feedback, \"SignalLoopReinforcementEngine\")",
        "event_bus.subscribe(\"PatternDetected\", self.handle_pattern_detected, \"SignalLoopReinforcementEngine\")",
        "emit_telemetry(\"initialization\", \"STEP 8 Enhanced module initialized successfully\")",
        "emit_telemetry(self, action, message=None)",
        "emit_telemetry(\"startup\", \"SignalLoopReinforcementEngine STEP 8 service started\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "signal_validator.py": {
      "module": "signal_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\")",
        "emit_telemetry(\"confluence_added\", {\"type\": \"MACD_divergence\", \"score\": 2})",
        "emit_telemetry(\"confluence_added\", {\"type\": \"Stoch_RSI_reversal\", \"score\": 2})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "simple_event_bus.py": {
      "module": "simple_event_bus",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "strategy_mutation_logic_engine.py": {
      "module": "strategy_mutation_logic_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry()",
        "emit_telemetry(self, metric_name: Optional[str] = None, additional_data: Optional[Dict[str, Any]] = None)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "strategy_recalibration_engine.py": {
      "module": "strategy_recalibration_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "strategy_recommender_engine.py": {
      "module": "strategy_recommender_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\", {\"status\": \"initialized\"})",
        "emit_telemetry(\"signal_rejected\", {\n                        \"symbol\": symbol,\n                        \"reason\": result[\"rejection_reason\"]\n                    })",
        "emit_telemetry(\"macro_state_updated\", {\"risk_sentiment\": self.macro_state[\"risk_sentiment\"]})",
        "emit_telemetry(\"risk_state_updated\", {\n                    \"portfolio_heat\": self.risk_state[\"portfolio_heat\"],\n                    \"risk_limits_ok\": self.risk_state[\"risk_limits_ok\"]\n                })",
        "emit_telemetry(\"ml_model_updated\", {\n                \"new_version\": new_version,\n                \"performance_scores\": performance_scores,\n                \"timestamp\": event_data.get(\"timestamp\")",
        "emit_telemetry(\"pattern_recommendations_processed\", {\n                \"patterns_received\": len(top_patterns)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "strategy_sentiment_fusion_engine.py": {
      "module": "strategy_sentiment_fusion_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "telemetry_dashboard.py": {
      "module": "telemetry_dashboard",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"KillSwitchTrigger\", self.handle_kill_switch_event, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"RecalibrationRequest\", self.handle_recalibration_event, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"SmartLogSync\", self.handle_log_sync_event, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"ExecutionDeviationAlert\", self.handle_deviation_alert, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"TerminateMonitorLoop\", self.handle_termination_event, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"ModuleTelemetry\", self.handle_module_telemetry, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"ModuleError\", self.handle_module_error, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"LiveTradeExecuted\", self.handle_live_trade, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"LoopHealthMetric\", self.handle_health_metric, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"UnifiedExecutionSignal\", self.handle_unified_signal, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"SignalConflictDetected\", self.handle_signal_conflict, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"orchestration_telemetry\", self.handle_orchestration_telemetry, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"orchestrated_signal\", self.handle_orchestrated_signal, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"broker_discovery_telemetry\", self.handle_broker_discovery_telemetry, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"AccountTypeDetected\", self.handle_account_type_detection, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"PatternSignatureDetected\", self.handle_pattern_signature_detected, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"SignalPatternMapped\", self.handle_signal_pattern_mapped, \"SmartTelemetryDashboard\")",
        "event_bus.subscribe(\"PatternTelemetry\", self.handle_pattern_telemetry, \"SmartTelemetryDashboard\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "telemetry_validation_engine_phase67.py": {
      "module": "telemetry_validation_engine_phase67",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "validate_build_status_reconstruction.py": {
      "module": "validate_build_status_reconstruction",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "validate_dashboard_engine.py": {
      "module": "validate_dashboard_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "validate_system_compliance.py": {
      "module": "validate_system_compliance",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_backtest_engine.py": {
      "module": "DUPLICATE_backtest_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_emergency_json_repair.py": {
      "module": "DUPLICATE_emergency_json_repair",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_indicator_scanner.py": {
      "module": "DUPLICATE_indicator_scanner",
      "routes": [
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_indicator_scanner_fixed.py": {
      "module": "DUPLICATE_indicator_scanner_fixed",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n            \"module\": \"indicator_scanner_fixed\",\n            \"status\": \"initialized\",\n            \"timestamp\": datetime.now()",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_kill_switch_integrity_monitor.py": {
      "module": "DUPLICATE_kill_switch_integrity_monitor",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_phase92a_system_repair_engine.py": {
      "module": "DUPLICATE_phase92a_system_repair_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('method:executed', {'method': self.__class__.__name__})",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_signal_refinement_engine.py": {
      "module": "DUPLICATE_signal_refinement_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"ssr_engine.initialized\", {\n            \"timestamp\": datetime.datetime.utcnow()",
        "emit_telemetry(\"ssr_engine.started\", {\n            \"timestamp\": datetime.datetime.utcnow()",
        "emit_telemetry(\"ssr_engine.stopped\", {\n            \"timestamp\": datetime.datetime.utcnow()",
        "emit_telemetry(\"ssr_engine.error\", {\n                    \"error\": str(e)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer.py": {
      "module": "DUPLICATE_strategy_adaptive_context_synthesizer",
      "routes": [
        "event_bus.subscribe(\"macro_update_event\", self._handle_macro_update)",
        "event_bus.subscribe(\"execution_feedback_received\", self._handle_execution_feedback)",
        "event_bus.subscribe(\"signal_context_change\", self._handle_signal_context_change)",
        "event_bus.subscribe(\"pattern_cluster_detected\", self._handle_pattern_cluster_detected)",
        "event_bus.subscribe(\"system_command\", self._handle_system_command)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer_fixed.py": {
      "module": "DUPLICATE_strategy_adaptive_context_synthesizer_fixed",
      "routes": [
        "event_bus.subscribe(\"macro_update_event\", self._handle_macro_update)",
        "event_bus.subscribe(\"execution_feedback_received\", self._handle_execution_feedback)",
        "event_bus.subscribe(\"signal_context_change\", self._handle_signal_context_change)",
        "event_bus.subscribe(\"pattern_cluster_detected\", self._handle_pattern_cluster_detected)",
        "event_bus.subscribe(\"system_command\", self._handle_system_command)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_mutation_logic_engine.py": {
      "module": "DUPLICATE_strategy_mutation_logic_engine",
      "routes": [
        "emit_telemetry()",
        "emit_telemetry(self, metric_name: Optional[str] = None, additional_data: Optional[Dict[str, Any]] = None)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_DUPLICATES\\indicator_scanner_fixed_corrupted.py": {
      "module": "indicator_scanner_fixed_corrupted",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "QUARANTINE_DUPLICATES\\signal_refinement_engine_v2.py": {
      "module": "signal_refinement_engine_v2",
      "routes": [
        "emit_telemetry(\"ssr_engine.initialized\", {\n            \"timestamp\": datetime.datetime.utcnow()",
        "emit_telemetry(\"ssr_engine.started\", {\n            \"timestamp\": datetime.datetime.utcnow()",
        "emit_telemetry(\"ssr_engine.stopped\", {\n            \"timestamp\": datetime.datetime.utcnow()",
        "emit_telemetry(\"ssr_engine.error\", {\n                    \"error\": str(e)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "ui_components\\telemetry_logs.py": {
      "module": "telemetry_logs",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backtest_explorer.py": {
      "module": "backtest_explorer",
      "routes": [
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backtest_visualizer.py": {
      "module": "backtest_visualizer",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\demo_kill_switch.py": {
      "module": "demo_kill_switch",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\launch_phase18_production.py": {
      "module": "launch_phase18_production",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\live_backtest_comparison_engine.py": {
      "module": "live_backtest_comparison_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"backtest:completed\", self._on_backtest_completed)",
        "event_bus.subscribe(\"execution:filled\", self._on_execution_filled)",
        "event_bus.subscribe(\"trade:closed\", self._on_trade_closed)",
        "event_bus.subscribe(\"data:update:execution_log\", self._on_execution_log_update)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\module_template_with_validation.py": {
      "module": "module_template_with_validation",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase13_event_subscriber.py": {
      "module": "phase13_event_subscriber",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self._handle_alpha_decay, self.module_name)",
        "event_bus.subscribe(\"StrategyMutationEvent\", self._handle_strategy_mutation, self.module_name)",
        "event_bus.subscribe(\"MutationLogAppend\", self._handle_mutation_log, self.module_name)",
        "event_bus.subscribe(\"MetaStrategyUpdate\", self._handle_meta_strategy_update, self.module_name)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_final_validation.py": {
      "module": "phase20_final_validation",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_signal_pipeline_stress_tester.py": {
      "module": "phase20_signal_pipeline_stress_tester",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase47_live_feed_sync_integration.py": {
      "module": "phase47_live_feed_sync_integration",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"portfolio_weights_updated\", {\n                    \"weights\": throttled_weights,\n                    \"original_weights\": weights,\n                    \"trigger\": trigger,\n                    \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"strategy_weight_adjustment\", {\n                        \"weights\": throttled_weights,\n                        \"trigger\": trigger,\n                        \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"throttle_strategy_execution\", {\n                    \"reason\": \"ftmo_compliance\",\n                    \"original_exposure\": total_exposure,\n                    \"throttled_exposure\": sum(abs(w)",
        "event_bus.emit(\"telemetry_metric\", telemetry_data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"trade_filled\", self._handle_trade_filled)",
        "event_bus.subscribe(\"stoploss_triggered\", self._handle_stoploss_triggered)",
        "event_bus.subscribe(\"portfolio_imbalance_detected\", self._handle_portfolio_imbalance)",
        "event_bus.subscribe(\"portfolio_rebalanced\", self._handle_portfolio_rebalanced)",
        "event_bus.subscribe(\"portfolio_weights_updated\", self._inject_weights_to_mutation_engine)",
        "EventBus()",
        "emit_telemetry(\"component_initialization_error\", {\"error\": str(e)",
        "emit_telemetry(\"eventbus_binding_error\", {\"error\": str(e)",
        "emit_telemetry(\"phase47_routes_registered\", {\"routes_count\": routes_added})",
        "emit_telemetry(\"phase47_trade_fill_sync\", {\n                \"trigger\": \"trade_filled\",\n                \"sync_latency_ms\": sync_latency,\n                \"trade_data\": data\n            })",
        "emit_telemetry(\"phase47_stoploss_sync\", {\n                \"trigger\": \"stoploss_triggered\",\n                \"strategy_id\": strategy_id,\n                \"sync_latency_ms\": sync_latency\n            })",
        "emit_telemetry(\"phase47_imbalance_sync\", {\n                \"trigger\": \"portfolio_imbalance\",\n                \"sync_latency_ms\": sync_latency,\n                \"imbalance_data\": data\n            })",
        "emit_telemetry(\"phase47_weights_injected\", {\n                    \"trigger\": trigger,\n                    \"weights_count\": len(throttled_weights)",
        "emit_telemetry(\"phase47_ftmo_throttling\", {\n                    \"throttle_factor\": throttle_factor,\n                    \"original_exposure\": total_exposure,\n                    \"throttled_exposure\": sum(abs(w)",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])",
        "emit_telemetry(\"phase47_sync_started\", {\"status\": \"active\"})",
        "emit_telemetry(\"phase47_sync_stopped\", {\"status\": \"stopped\"})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase47_portfolio_optimizer_integration.py": {
      "module": "phase47_portfolio_optimizer_integration",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"trade_filled\", self._handle_trade_filled)",
        "event_bus.subscribe(\"stoploss_triggered\", self._handle_stoploss_triggered)",
        "event_bus.subscribe(\"portfolio_imbalance_detected\", self._handle_portfolio_imbalance)",
        "event_bus.subscribe(\"portfolio_rebalanced\", self._handle_portfolio_rebalanced)",
        "event_bus.subscribe(\"portfolio_weights_updated\", self._inject_weights_to_mutation_engine)",
        "emit_telemetry(\"phase47_integration_started\", {\n                \"timestamp\": datetime.now(timezone.utc)",
        "emit_telemetry(\"phase47_integration_error\", {\n                \"error\": str(e)",
        "emit_telemetry(\"trade_filled_processed\", {\n                \"data\": data,\n                \"timestamp\": datetime.now(timezone.utc)",
        "emit_telemetry(\"stoploss_processed\", {\n                \"data\": data,\n                \"timestamp\": datetime.now(timezone.utc)",
        "emit_telemetry(\"portfolio_imbalance_processed\", {\n                \"data\": data,\n                \"timestamp\": datetime.now(timezone.utc)",
        "emit_telemetry(\"portfolio_rebalanced_processed\", {\n                \"weights\": weights,\n                \"timestamp\": datetime.now(timezone.utc)",
        "emit_telemetry(\"weights_injected\", injection_data)",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])",
        "emit_telemetry(\"phase47_integration_stopped\", {\n                \"final_metrics\": self.metrics,\n                \"timestamp\": datetime.now(timezone.utc)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase53_54_test.py": {
      "module": "phase53_54_test",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase59_60_test.py": {
      "module": "phase59_60_test",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase61_62_test_suite.py": {
      "module": "phase61_62_test_suite",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase62_audit_resilience_engine.py": {
      "module": "phase62_audit_resilience_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\resolve_phase13_validation.py": {
      "module": "resolve_phase13_validation",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self._handle_alpha_decay, self.module_name)",
        "event_bus.subscribe(\"StrategyMutationEvent\", self._handle_strategy_mutation, self.module_name)",
        "event_bus.subscribe(\"MutationLogAppend\", self._handle_mutation_log, self.module_name)",
        "event_bus.subscribe(\"MetaStrategyUpdate\", self._handle_meta_strategy_update, self.module_name)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self._handle_alpha_decay, \"phase13_resolver\")",
        "event_bus.subscribe(\"StrategyMutationEvent\", self._handle_strategy_mutation, \"phase13_resolver\")",
        "event_bus.subscribe(\"MutationLogAppend\", self._handle_mutation_log, \"phase13_resolver\")",
        "event_bus.subscribe(\"MetaStrategyUpdate\", self._handle_meta_strategy_update, \"phase13_resolver\")",
        "event_bus.subscribe(\"EnrichedTradeOutcome\", self._handle_enriched_trade, \"phase13_resolver\")",
        "event_bus.subscribe(\"TradeClusterAnalysis\", self._handle_cluster_analysis, \"phase13_resolver\")",
        "event_bus.subscribe(\"SymbolPerformanceUpdate\", self._handle_symbol_update, \"phase13_resolver\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_auto_repair_engine.py": {
      "module": "simple_auto_repair_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_smart_monitor_test.py": {
      "module": "simple_smart_monitor_test",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_architect_compliant_validator.py": {
      "module": "step7_architect_compliant_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_comprehensive_smart_monitor_validator.py": {
      "module": "step7_comprehensive_smart_monitor_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_deadlock_debugger.py": {
      "module": "step7_deadlock_debugger",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_smart_monitor_validator.py": {
      "module": "step7_smart_monitor_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"ExecutionDeviationAlert\", self.capture_deviation_alert, \"Step7Validator\")",
        "event_bus.subscribe(\"KillSwitchTrigger\", self.capture_kill_switch, \"Step7Validator\")",
        "event_bus.subscribe(\"RecalibrationRequest\", self.capture_recalibration, \"Step7Validator\")",
        "event_bus.subscribe(\"SmartLogSync\", self.capture_smart_log, \"Step7Validator\")",
        "event_bus.subscribe(\"ModuleTelemetry\", self.capture_telemetry, \"Step7Validator\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_adaptiveexecutionresolver.py": {
      "module": "test_adaptiveexecutionresolver",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_advancedpatternminer.py": {
      "module": "test_advancedpatternminer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_architect_compliant_broker_discovery.py": {
      "module": "test_architect_compliant_broker_discovery",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_BacktestEngine.py": {
      "module": "test_BacktestEngine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_brokerdiscoveryengine.py": {
      "module": "test_brokerdiscoveryengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dsrstrategymutator.py": {
      "module": "test_dsrstrategymutator",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionengine.py": {
      "module": "test_executionengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionenvelopeengine.py": {
      "module": "test_executionenvelopeengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionenvelopeharmonizer.py": {
      "module": "test_executionenvelopeharmonizer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionflowtest.py": {
      "module": "test_executionflowtest",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionloopresponder.py": {
      "module": "test_executionloopresponder",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ExecutionPrioritizationEngine.py": {
      "module": "test_ExecutionPrioritizationEngine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionrisksentinel.py": {
      "module": "test_executionrisksentinel",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionselector.py": {
      "module": "test_executionselector",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_envelope_engine.py": {
      "module": "test_execution_envelope_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_envelope_engine_v2.py": {
      "module": "test_execution_envelope_engine_v2",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_feedback_mutator.py": {
      "module": "test_execution_feedback_mutator",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_prioritization_engine.py": {
      "module": "test_execution_prioritization_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_selector.py": {
      "module": "test_execution_selector",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_feedback_injection_phase12.py": {
      "module": "test_feedback_injection_phase12",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"TradeOutcomeFeedback\", self._handle_trade_outcome_feedback, self.test_name)",
        "event_bus.subscribe(\"ReinforceSignalMemory\", self._handle_reinforce_signal_memory, self.test_name)",
        "event_bus.subscribe(\"PnLScoreUpdate\", self._handle_pnl_score_update, self.test_name)",
        "event_bus.subscribe(\"TradeMetaLogEntry\", self._handle_trade_meta_log, self.test_name)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kill_switch_integrity_monitor.py": {
      "module": "test_kill_switch_integrity_monitor",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livealertbridge.py": {
      "module": "test_livealertbridge",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livefeedbackadapter.py": {
      "module": "test_livefeedbackadapter",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livetradefeedbackinjector.py": {
      "module": "test_livetradefeedbackinjector",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_market_data_feed_manager.py": {
      "module": "test_market_data_feed_manager",
      "routes": [
        "event_bus.subscribe(\"TestTopic\", test_callback, \"TestConsumer\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metasignalharmonizer.py": {
      "module": "test_metasignalharmonizer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_meta_signal_harmonizer.py": {
      "module": "test_meta_signal_harmonizer",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"UnifiedExecutionSignal\", capture_unified_signal, \"TestMetaSignalHarmonizer\")",
        "event_bus.subscribe(\"MetaSignalAuditTrail\", capture_audit_trail, \"TestMetaSignalHarmonizer\")",
        "event_bus.subscribe(\"SignalConflictDetected\", capture_conflict, \"TestMetaSignalHarmonizer\")",
        "event_bus.subscribe(\"SignalHarmonyMetric\", capture_harmony_metric, \"TestMetaSignalHarmonizer\")",
        "event_bus.subscribe(\"ModuleTelemetry\", capture_telemetry, \"TestMetaSignalHarmonizer\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ml_retraining_loop_phase57.py": {
      "module": "test_ml_retraining_loop_phase57",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_MultiAccountSplitter.py": {
      "module": "test_MultiAccountSplitter",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multiagentcoordinationengine.py": {
      "module": "test_multiagentcoordinationengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_account_splitter.py": {
      "module": "test_multi_account_splitter",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_account_splitter_integration.py": {
      "module": "test_multi_account_splitter_integration",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_agent_coordination_engine.py": {
      "module": "test_multi_agent_coordination_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutationsignaladapter.py": {
      "module": "test_mutationsignaladapter",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutation_refinement_phase14.py": {
      "module": "test_mutation_refinement_phase14",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_order_audit_logger.py": {
      "module": "test_order_audit_logger",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternengine.py": {
      "module": "test_patternengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternminer.py": {
      "module": "test_patternminer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternsignalharmonizer.py": {
      "module": "test_patternsignalharmonizer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_aggregator_engine.py": {
      "module": "test_pattern_aggregator_engine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_confidence_overlay.py": {
      "module": "test_pattern_confidence_overlay",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_learning_engine_phase58.py": {
      "module": "test_pattern_learning_engine_phase58",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_miner_realdata.py": {
      "module": "test_pattern_miner_realdata",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_mining_engine.py": {
      "module": "test_pattern_mining_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"PatternDetected\", track_pattern_detected, \"PatternTestListener\")",
        "event_bus.subscribe(\"MetaStrategyMap\", track_meta_strategy_map, \"PatternTestListener\")",
        "event_bus.subscribe(\"BiasOverrideIssued\", track_bias_override, \"PatternTestListener\")",
        "event_bus.subscribe(\"ModuleTelemetry\", track_telemetry, \"PatternTestListener\")",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_signal_harmonizer.py": {
      "module": "test_pattern_signal_harmonizer",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"SignalHarmonized\", self._validate_harmonized_signal)",
        "event_bus.subscribe(\"PatternScoreUpdate\", self._validate_pattern_score_update)",
        "event_bus.subscribe(\"HarmonicFeedback\", self._validate_harmonic_feedback)",
        "event_bus.subscribe(\"ModuleTelemetry\", self._validate_module_telemetry)",
        "event_bus.subscribe(\"ModuleError\", self._handle_test_error)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase18_reactive_execution.py": {
      "module": "test_phase18_reactive_execution",
      "routes": [
        "event_bus.subscribe(event_type, self._capture_event, \"Phase18ReactiveTest\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase18_reactive_execution_fixed.py": {
      "module": "test_phase18_reactive_execution_fixed",
      "routes": [
        "event_bus.subscribe(event_type, self._capture_event, \"Phase18ReactiveTest\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase19_adaptive_signal_flow.py": {
      "module": "test_phase19_adaptive_signal_flow",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"ModulePing\", ping_event)",
        "event_bus.emit(\"SignalReadyEvent\", {\n                \"signal_data\": test_signal,\n                \"symbol\": symbol,\n                \"timestamp\": datetime.datetime.now()",
        "event_bus.emit(\"SignalReadyEvent\", {\n                \"signal_data\": test_signal,\n                \"symbol\": symbol,\n                \"timestamp\": datetime.datetime.now()",
        "event_bus.emit(\"SignalReadyEvent\", edge_case)",
        "event_bus.emit(\"TelemetryRequest\", telemetry_request)",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase20signalpipelinestresstester.py": {
      "module": "test_phase20signalpipelinestresstester",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase22_signal_refinement.py": {
      "module": "test_phase22_signal_refinement",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"test.telemetry\", self.event_bus.request('data:live_feed')"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase23_strategy_mutator.py": {
      "module": "test_phase23_strategy_mutator",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"SignalRejected\", rejection_listener, \"TestDSRStrategyMutator\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase31_execution_prioritization.py": {
      "module": "test_phase31_execution_prioritization",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase34_broker_discovery_final.py": {
      "module": "test_phase34_broker_discovery_final",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_broker_discovery.py": {
      "module": "test_phase35_broker_discovery",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_broker_discovery_v2.py": {
      "module": "test_phase35_broker_discovery_v2",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_execution_prioritization.py": {
      "module": "test_phase35_execution_prioritization",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase42_context_synthesizer.py": {
      "module": "test_phase42_context_synthesizer",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase42_macro_sync.py": {
      "module": "test_phase42_macro_sync",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase43_sentiment_fusion_engine.py": {
      "module": "test_phase43_sentiment_fusion_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase44_priority_score_mutation.py": {
      "module": "test_phase44_priority_score_mutation",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase45_strategy_self_healing.py": {
      "module": "test_phase45_strategy_self_healing",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase47portfoliooptimizerintegration.py": {
      "module": "test_phase47portfoliooptimizerintegration",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase47_portfolio_optimizer_integration.py": {
      "module": "test_phase47_portfolio_optimizer_integration",
      "routes": [
        "emit_telemetry(test_metric, self.event_bus.request('data:live_feed')"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase55_56_ml_control_integration.py": {
      "module": "test_phase55_56_ml_control_integration",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase74_75.py": {
      "module": "test_phase74_75",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()",
        "EventBus()",
        "EventBus()",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase80_83_fixed.py": {
      "module": "test_phase80_83_fixed",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase80_fixed.py": {
      "module": "test_phase80_fixed",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase81.py": {
      "module": "test_phase81",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase82.py": {
      "module": "test_phase82",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase82_83_comprehensive.py": {
      "module": "test_phase82_83_comprehensive",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase83.py": {
      "module": "test_phase83",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase_92_93_validation.py": {
      "module": "test_phase_92_93_validation",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.TELEMETRY"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_portfolio_optimizer.py": {
      "module": "test_portfolio_optimizer",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_post_trade_feedback_collector.py": {
      "module": "test_post_trade_feedback_collector",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_priority_score_patch_phase37.py": {
      "module": "test_priority_score_patch_phase37",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactivesignalautopilot.py": {
      "module": "test_reactivesignalautopilot",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactive_signal_autopilot.py": {
      "module": "test_reactive_signal_autopilot",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "emit_telemetry(\"test_event\", self.event_bus.request('data:live_feed')"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_riskengine.py": {
      "module": "test_riskengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalpatternmapper.py": {
      "module": "test_signalpatternmapper",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalqualityamplifier.py": {
      "module": "test_signalqualityamplifier",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_confidence_phase15.py": {
      "module": "test_signal_confidence_phase15",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_execution_router.py": {
      "module": "test_signal_execution_router",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_loop_reinforcement_step8.py": {
      "module": "test_signal_loop_reinforcement_step8",
      "routes": [
        "event_bus.subscribe(\"SignalFeedbackScore\", on_signal_feedback_score, \"TestStep8\")",
        "event_bus.subscribe(\"DecayDetectedEvent\", on_decay_detected_event, \"TestStep8\")",
        "event_bus.subscribe(\"ReinforcementLearningLog\", on_reinforcement_learning_log, \"TestStep8\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_pattern_mapper_realdata.py": {
      "module": "test_signal_pattern_mapper_realdata",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_quality_amplifier.py": {
      "module": "test_signal_quality_amplifier",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(test_metric, self.event_bus.request('data:live_feed')"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionliveloop.py": {
      "module": "test_smartexecutionliveloop",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionmonitor.py": {
      "module": "test_smartexecutionmonitor",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionreactor.py": {
      "module": "test_smartexecutionreactor",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartfeedbacksync.py": {
      "module": "test_smartfeedbacksync",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartsignalexecutionlinker.py": {
      "module": "test_smartsignalexecutionlinker",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_execution_liveloop.py": {
      "module": "test_smart_execution_liveloop",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(event_type, self._event_handler, \"TestSmartExecutionLiveLoop\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_execution_monitor.py": {
      "module": "test_smart_execution_monitor",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_monitor_safe.py": {
      "module": "test_smart_monitor_safe",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_signal_execution_linker.py": {
      "module": "test_smart_signal_execution_linker",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategicsignalorchestrator.py": {
      "module": "test_strategicsignalorchestrator",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator.py": {
      "module": "test_strategic_signal_orchestrator",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator_v2.py": {
      "module": "test_strategic_signal_orchestrator_v2",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategyfeedbackjournal.py": {
      "module": "test_strategyfeedbackjournal",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategymutator.py": {
      "module": "test_strategymutator",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsignalqualityamplifier.py": {
      "module": "test_testsignalqualityamplifier",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsmartexecutionmonitor.py": {
      "module": "test_testsmartexecutionmonitor",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsmartmonitor.py": {
      "module": "test_testsmartmonitor",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradeauditor.py": {
      "module": "test_tradeauditor",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradejournalengine.py": {
      "module": "test_tradejournalengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_TradeMemoryFeedbackEngine.py": {
      "module": "test_TradeMemoryFeedbackEngine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradepriorityresolver.py": {
      "module": "test_tradepriorityresolver",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_memory_feedback_engine.py": {
      "module": "test_trade_memory_feedback_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_priority_resolver.py": {
      "module": "test_trade_priority_resolver",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"priority_signals_ready\", capture_priority_signals, \"TestModule\")",
        "event_bus.subscribe(\"signal_scoring_complete\", capture_scoring_results, \"TestModule\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_recommendation_engine.py": {
      "module": "test_trade_recommendation_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_unknown.py": {
      "module": "test_unknown",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\ultra_minimal_test.py": {
      "module": "ultra_minimal_test",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_backtest_engine.py": {
      "module": "validate_backtest_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_ers.py": {
      "module": "validate_ers",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_institutional_system.py": {
      "module": "validate_institutional_system",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_module_hashes.py": {
      "module": "validate_module_hashes",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.TELEMETRY"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase13.py": {
      "module": "validate_phase13",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self._handle_alpha_decay, \"phase13_validator\")",
        "event_bus.subscribe(\"StrategyMutationEvent\", self._handle_strategy_mutation, \"phase13_validator\")",
        "event_bus.subscribe(\"MutationLogAppend\", self._handle_mutation_log, \"phase13_validator\")",
        "event_bus.subscribe(\"MetaStrategyUpdate\", self._handle_meta_strategy_update, \"phase13_validator\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase23.py": {
      "module": "validate_phase23",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"StrategyRecommendation\", test_listener, \"Phase23Validator\")",
        "event_bus.subscribe(\"ModuleTelemetry\", test_listener, \"Phase23Validator\")",
        "event_bus.subscribe(\"ModuleTelemetry\", telemetry_listener, \"Phase23Validator\")",
        "event_bus.subscribe(\"ModuleError\", error_listener, \"Phase23Validator\")",
        "event_bus.subscribe(\"SignalRejected\", rejection_listener, \"Phase23Validator\")",
        "event_bus.subscribe(event_type, comprehensive_listener, \"Phase23Validator\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase35_completion.py": {
      "module": "validate_phase35_completion",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_49.py": {
      "module": "validate_phase_49",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_50.py": {
      "module": "validate_phase_50",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_recovery.py": {
      "module": "validate_recovery",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\activate_architect_mode.py": {
      "module": "activate_architect_mode",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\activate_phase_91c_lockdown.py": {
      "module": "activate_phase_91c_lockdown",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\active_trades.py": {
      "module": "active_trades",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adaptive_execution_resolver.py": {
      "module": "adaptive_execution_resolver",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adaptive_filter_engine.py": {
      "module": "adaptive_filter_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_auto_repair_engine.py": {
      "module": "advanced_auto_repair_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_pattern_miner.py": {
      "module": "advanced_pattern_miner",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_activation_v600.py": {
      "module": "architect_mode_activation_v600",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_repair_enforcer_v7.py": {
      "module": "architect_mode_repair_enforcer_v7",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_v600_hardlock.py": {
      "module": "architect_mode_v600_hardlock",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\", \"log_metric(\", \"update_latency(\"],\n            \"eventbus_required\": [\"emit(\", \"subscribe_to_event(\", \"register_route(\"],\n            \"mt5_only\": [\"from mt5_adapter\", \"mt5.symbol_info_tick\"]\n        }\n        \n        # File types to scan\n        self.scan_file_types = [\".py\", \".json\", \".md\", \".yaml\", \".ini\"]\n        \n        # Compliance standards\n        self.compliance_standards = [\n            \"event_driven\", \"mt5_live_data\", \"real_time_telemetry\",\n            \"compliance_checks\", \"performance_metrics\", \"error_handling\",\n            \"module_documentation\", \"module_tests\", \"system_tree_structure\",\n            \"event_bus_structure\", \"telemetry_hooks_connected\",\n            \"registered_in_system_tree\", \"registered_in_module_registry\",\n            \"test_scaffolds_present\", \"logged_errors_enabled\", \"real_data_only\"\n        ]\n        \n        # Initialize violation tracking\n        self.violations = []\n        self.quarantined_files = []\n        \n    \n        # GENESIS Phase 91 Telemetry Injection\n        if hasattr(self, 'event_bus')"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_v610_activator.py": {
      "module": "architect_mode_v610_activator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_surveillance_daemon.py": {
      "module": "architect_surveillance_daemon",
      "routes": [
        "event_bus.emit(\"telemetry\", telemetry_data)",
        "event_bus.emit(\"architect_validation_result\", result)",
        "event_bus.emit(\"architect_validation_error\", {\n                \"module\": self.module_id,\n                \"error\": error_msg,\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"repair_request\", {\n                    \"file\": \"module_registry.json\",\n                    \"issue\": \"empty_modules\",\n                    \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"repair_request\", {\n                    \"file\": \"telemetry.json\",\n                    \"issue\": \"missing_config\",\n                    \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"connectivity_test\", test_payload)",
        "event_bus.emit(\"architect_violation\", {\n                    \"type\": \"MOCK_DATA_DETECTED\",\n                    \"file\": \"mock_data.json\",\n                    \"data\": mock_sources,\n                    \"severity\": \"CRITICAL\",\n                    \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"fingerprint_verification_request\", fingerprint_request)",
        "event_bus.emit(\"system_scan_complete\", scan_results)",
        "event_bus.emit(\"integrity_verification_complete\", integrity_result)",
        "event_bus.emit(\"surveillance_started\", {\n            \"module\": self.module_id,\n            \"initial_validation\": initial_validation,\n            \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.subscribe(\"architect.validate\", self.run_architect_validation)",
        "event_bus.subscribe(\"surveillance.scan\", self.run_system_scan)",
        "event_bus.subscribe(\"integrity.check\", self.verify_system_integrity)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auto_execution_sync_engine.py": {
      "module": "auto_execution_sync_engine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine.py": {
      "module": "broker_discovery_engine",
      "routes": [
        "emit_telemetry(\"MODULE_INITIALIZED\", {\n            \"account_type_patterns\": len(self.account_type_patterns)",
        "emit_telemetry(\"ACCOUNT_TYPE_FORCED\", {\n                    \"forced_type\": forced_type,\n                    \"actual_broker\": account_info.get(\"broker\")",
        "emit_telemetry(\"ACCOUNT_TYPE_DETECTED\", {\n                    \"account_type\": detected_type,\n                    \"broker\": account_info.get(\"broker\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine_fixed.py": {
      "module": "broker_discovery_engine_fixed",
      "routes": [
        "emit_telemetry(\"MODULE_INITIALIZED\", {\n            \"account_type_patterns\": len(self.account_type_patterns)",
        "emit_telemetry(\"ACCOUNT_TYPE_FORCED\", {\n                    \"forced_type\": forced_type,\n                    \"actual_broker\": account_info.get(\"broker\")",
        "emit_telemetry(\"ACCOUNT_TYPE_DETECTED\", {\n                    \"account_type\": detected_type,\n                    \"broker\": account_info.get(\"broker\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine_fixed_restored.py": {
      "module": "broker_discovery_engine_fixed_restored",
      "routes": [
        "emit_telemetry(\"MODULE_INITIALIZED\", {\n            \"account_type_patterns\": len(self.account_type_patterns)",
        "emit_telemetry(\"ACCOUNT_TYPE_FORCED\", {\n                    \"forced_type\": forced_type,\n                    \"actual_broker\": account_info.get(\"broker\")",
        "emit_telemetry(\"ACCOUNT_TYPE_DETECTED\", {\n                    \"account_type\": detected_type,\n                    \"broker\": account_info.get(\"broker\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_panel.py": {
      "module": "broker_discovery_panel",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bulk_violation_eliminator.py": {
      "module": "bulk_violation_eliminator",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\comprehensive_violation_eliminator.py": {
      "module": "comprehensive_violation_eliminator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\contextual_execution_router.py": {
      "module": "contextual_execution_router",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\deep_patch_engine.py": {
      "module": "deep_patch_engine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dsr_strategy_mutator.py": {
      "module": "dsr_strategy_mutator",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"RefinedSignal\", self._handle_refined_signal)",
        "event_bus.subscribe(\"StrategyExecutionFeedback\", self._handle_execution_feedback)",
        "event_bus.subscribe(\"HTFAlignmentUpdate\", self._handle_htf_update)",
        "event_bus.subscribe(\"SystemStatusCheck\", self._handle_status_check)",
        "event_bus.subscribe(\"PerformanceMetricsRequest\", self._handle_metrics_request)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_bulk_repair.py": {
      "module": "emergency_bulk_repair",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_eventbus_deduplication.py": {
      "module": "emergency_eventbus_deduplication",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_eventbus_migration.py": {
      "module": "emergency_eventbus_migration",
      "routes": [
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ers_test.py": {
      "module": "ers_test",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\example_prompt_with_hook.py": {
      "module": "example_prompt_with_hook",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execute_phase_92a_patch.py": {
      "module": "execute_phase_92a_patch",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_envelope_engine.py": {
      "module": "execution_envelope_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"StrategyRecommendation\", self._handle_strategy_recommendation, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"MT5DataUpdate\", self._handle_mt5_data_update, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"MT5SpreadUpdate\", self._handle_mt5_spread_update, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"KillSwitchTrigger\", self._handle_kill_switch, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"ComplianceAlert\", self._handle_compliance_alert, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"RiskLimitUpdate\", self._handle_risk_limit_update, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"DrawdownAlert\", self._handle_drawdown_alert, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"SystemStatusCheck\", self._handle_status_check, \"ExecutionEnvelopeEngine\")",
        "event_bus.subscribe(\"PerformanceMetricsRequest\", self._handle_metrics_request, \"ExecutionEnvelopeEngine\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_feedback_mutator.py": {
      "module": "execution_feedback_mutator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"strategy_mutation_applied\", event_data)",
        "event_bus.emit(\"telemetry_execution_feedback_mutator\", telemetry_data)",
        "event_bus.subscribe(\"execution_feedback_received\", self.handle_execution_feedback)",
        "event_bus.subscribe(\"trade_completed\", self.handle_trade_completion)",
        "event_bus.subscribe(\"execution_latency_measured\", self.handle_latency_feedback)",
        "event_bus.subscribe(\"slippage_detected\", self.handle_slippage_feedback)",
        "event_bus.subscribe(\"fill_rate_updated\", self.handle_fill_rate_update)",
        "EventBus()",
        "emit_telemetry()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_harmonizer.py": {
      "module": "execution_harmonizer",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"SignalWindowGenerated\", self._handle_signal_window_generated)",
        "event_bus.subscribe(\"ExecutionWindowConflict\", self._handle_execution_window_conflict)",
        "event_bus.subscribe(\"TimingSynchronizationRequest\", self._handle_timing_sync_request)",
        "event_bus.subscribe(\"EnvelopeHarmonizationRequest\", self._handle_harmonization_request)",
        "event_bus.subscribe(\"PrecisionOptimizationRequest\", self._handle_precision_optimization)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_loop_responder.py": {
      "module": "execution_loop_responder",
      "routes": [
        "event_bus.emit(\"TradeAdjustmentExecuted\", execution_event)",
        "event_bus.emit(\"StrategyFreezeConfirmed\", freeze_event)",
        "event_bus.emit(\"MacroSyncCompleted\", sync_event)",
        "event_bus.emit(\"TradeAdjustmentExecuted\", {\n                **termination_event,\n                \"adjustment_type\": \"termination_cleanup\"\n            })",
        "event_bus.emit(\"StrategyFreezeConfirmed\", {\n                **termination_event,\n                \"freeze_reason\": \"responder_shutdown\"\n            })",
        "event_bus.emit(\"MacroSyncCompleted\", {\n                **termination_event,\n                \"sync_reason\": \"safe_termination\"\n            })",
        "event_bus.subscribe(\"TradeAdjustmentInitiated\", self.on_trade_adjustment_initiated)",
        "event_bus.subscribe(\"StrategyFreezeLock\", self.on_strategy_freeze_lock)",
        "event_bus.subscribe(\"MacroSyncReboot\", self.on_macro_sync_reboot)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_playbook_generator.py": {
      "module": "execution_playbook_generator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"PatternRecommendationUpdate\", self._handle_pattern_update)",
        "event_bus.subscribe(\"PlaybookValidationRequest\", self._handle_validation_request)",
        "event_bus.subscribe(\"TelemetryUpdate\", self._handle_telemetry_update)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_prioritization_engine.py": {
      "module": "execution_prioritization_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_risk_sentinel.py": {
      "module": "execution_risk_sentinel",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"ERSAlert\", {\n            \"type\": \"emergency_killswitch\",\n            \"source\": \"ExecutionRiskSentinel\",\n            \"severity\": \"critical\",\n            \"details\": alert\n        })",
        "event_bus.emit(\"FallbackActivationRequest\", {\n            \"source\": \"ExecutionRiskSentinel\",\n            \"risk_score\": risk_score,\n            \"activation_time\": now.isoformat()",
        "event_bus.emit(\"ERSAlert\", {\n            \"type\": \"fallback_activation\",\n            \"source\": \"ExecutionRiskSentinel\",\n            \"severity\": \"high\",\n            \"risk_score\": risk_score,\n            \"details\": alert\n        })",
        "event_bus.emit(\"KillSwitchTrigger\", {\n            \"source\": \"ExecutionRiskSentinel\",\n            \"risk_score\": risk_score,\n            \"reason\": \"Critical systemic risk detected\",\n            \"timestamp\": datetime.now()",
        "event_bus.emit(\"ERSAlert\", {\n            \"type\": \"killswitch_activation\",\n            \"source\": \"ExecutionRiskSentinel\",\n            \"severity\": \"critical\",\n            \"risk_score\": risk_score,\n            \"details\": alert\n        })",
        "event_bus.emit(\"TelemetryEvent\", {\n            \"metric\": metric_path,\n            \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"ExecutionLog\", self.handle_execution_log)",
        "event_bus.subscribe(\"KillSwitchTrigger\", self.handle_killswitch_trigger)",
        "event_bus.subscribe(\"LatencySpike\", self.handle_latency_spike)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self.handle_alpha_decay)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_selector.py": {
      "module": "execution_selector",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor.py": {
      "module": "execution_supervisor",
      "routes": [
        "emit_telemetry()",
        "emit_telemetry(self)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_new.py": {
      "module": "execution_supervisor_new",
      "routes": [
        "emit_telemetry()",
        "emit_telemetry(self)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_new_restored.py": {
      "module": "execution_supervisor_new_restored",
      "routes": [
        "emit_telemetry()",
        "emit_telemetry(self)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_recovered.py": {
      "module": "execution_supervisor_recovered",
      "routes": [
        "emit_telemetry()",
        "emit_telemetry(self)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_reconstructor.py": {
      "module": "final_system_reconstructor",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_validator.py": {
      "module": "final_system_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fixed_monitor_test.py": {
      "module": "fixed_monitor_test",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\", \"SmartExecutionMonitor started successfully\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fix_alpha_decay_subscribers.py": {
      "module": "fix_alpha_decay_subscribers",
      "routes": [
        "event_bus.subscribe(\"AlphaDecayDetected\", alpha_decay_handler, subscriber_id)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fix_eventbus_integration.py": {
      "module": "fix_eventbus_integration",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hardlock_recovery_engine.py": {
      "module": "hardlock_recovery_engine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hardlock_recovery_full_patch.py": {
      "module": "hardlock_recovery_full_patch",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\indicator_scanner_fixed.py": {
      "module": "indicator_scanner_fixed",
      "routes": [
        "event_bus.emit(\"telemetry\", telemetry_data)",
        "event_bus.emit(\"error\", {\n                \"module\": \"indicator_scanner_fixed\",\n                \"error\": \"MT5_import_failed\",\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"indicator_discovered\", {\n                        \"indicator\": indicator_id,\n                        \"symbol\": symbol,\n                        \"value\": validation_result[\"live_value\"],\n                        \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"indicator_validation_failed\", {\n                        \"indicator\": indicator_id,\n                        \"symbol\": symbol,\n                        \"error\": validation_result.get('error', 'Unknown error')",
        "event_bus.emit(\"indicator_error\", {\n                    \"indicator\": indicator_id,\n                    \"symbol\": symbol,\n                    \"error\": str(e)",
        "event_bus.emit(\"indicator_discovery_complete\", {\n            \"total_discovered\": len(self.available_indicators)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kill_switch_integrity_monitor_v2.py": {
      "module": "kill_switch_integrity_monitor_v2",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, hook: str, value: Any)",
        "emit_telemetry(\"monitoring_startup\", {\n            \"timestamp\": time.time()",
        "emit_telemetry(\"kill_switch_uptime_percent\", self.metrics[\"uptime_percent\"])",
        "emit_telemetry(\"kill_switch_latency_ms\", self.metrics[\"average_latency_ms\"])",
        "emit_telemetry(\"system_health_score\", self.metrics[\"system_health_score\"])",
        "emit_telemetry(\"heartbeat_frequency\", len(self.heartbeat_history)",
        "emit_telemetry(\"watchdog_response_time\", time.time()",
        "emit_telemetry(\"last_trigger_time\", trigger_time)",
        "emit_telemetry(\"kill_switch_activation\", trigger_data)",
        "emit_telemetry(\"alert_response_time_ms\", time.time()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lightweight_validation_hook.py": {
      "module": "lightweight_validation_hook",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\liquidity_sweep_validator.py": {
      "module": "liquidity_sweep_validator",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_alert_bridge.py": {
      "module": "live_alert_bridge",
      "routes": [
        "event_bus.subscribe(\"StrategyFreezeConfirmed\", self.on_strategy_freeze_confirmed)",
        "event_bus.subscribe(\"MacroSyncCompleted\", self.on_macro_sync_completed)",
        "event_bus.subscribe(\"TradeAdjustmentExecuted\", self.on_trade_adjustment_executed)",
        "event_bus.subscribe(\"EmergencyAlert\", self.on_emergency_alert)",
        "event_bus.subscribe(\"KillSwitchTrigger\", self.on_kill_switch_alert)",
        "event_bus.subscribe(\"ExecutionDeviationAlert\", self.on_execution_deviation_alert)",
        "event_bus.subscribe(\"ResponderTerminationComplete\", self.on_responder_termination)",
        "event_bus.subscribe(\"ReactorShutdown\", self.on_reactor_shutdown)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_feedback_adapter.py": {
      "module": "live_feedback_adapter",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"TradeOutcomeFeedback\", self._handle_trade_outcome, self.module_name)",
        "event_bus.subscribe(\"ExecutionSnapshot\", self._handle_execution_snapshot, self.module_name)",
        "event_bus.subscribe(\"PnLScoreUpdate\", self._handle_pnl_update, self.module_name)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_risk_governor.py": {
      "module": "live_risk_governor",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_trade_analyzer.py": {
      "module": "live_trade_analyzer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_trade_feedback_injector.py": {
      "module": "live_trade_feedback_injector",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"ExecutionSnapshot\", self._handle_execution_snapshot, self.module_name)",
        "event_bus.subscribe(\"SL_HitEvent\", self._handle_sl_hit, self.module_name)",
        "event_bus.subscribe(\"TP_HitEvent\", self._handle_tp_hit, self.module_name)",
        "event_bus.subscribe(\"TradeFillEvent\", self._handle_trade_fill, self.module_name)",
        "emit_telemetry(\"execution_snapshot_processed\", {\"execution_id\": execution_id, \"signal_id\": signal_id})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_event_sync_engine_92c.py": {
      "module": "macro_event_sync_engine_92c",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_sync_engine.py": {
      "module": "macro_sync_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_sync_guard.py": {
      "module": "macro_sync_guard",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.TELEMETRY"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\market_data_feed_manager.py": {
      "module": "market_data_feed_manager",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\master_recovery_directive.py": {
      "module": "master_recovery_directive",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\meta_signal_harmonizer.py": {
      "module": "meta_signal_harmonizer",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"SignalConfidenceRated\", self._on_signal_confidence_rated)",
        "event_bus.subscribe(\"PatternSignalDetected\", self._on_pattern_signal_detected)",
        "event_bus.subscribe(\"LiveExecutionFeedback\", self._on_live_execution_feedback)",
        "event_bus.subscribe(\"TradeJournalEntry\", self._on_trade_journal_entry)",
        "emit_telemetry(\"MODULE_INITIALIZED\", {\n            \"signal_weights\": self.SIGNAL_WEIGHTS,\n            \"thresholds\": {\n                \"unified\": self.UNIFIED_THRESHOLD,\n                \"audit\": self.AUDIT_THRESHOLD,\n                \"conflict_divergence\": self.CONFLICT_DIVERGENCE_THRESHOLD\n            }\n        })"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_execution_signal_loop.py": {
      "module": "ml_execution_signal_loop",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_model_bootstrap.py": {
      "module": "ml_model_bootstrap",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_pattern_engine.py": {
      "module": "ml_pattern_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_retraining_loop_phase57.py": {
      "module": "ml_retraining_loop_phase57",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\", {\"status\": \"initialized\"})",
        "emit_telemetry(\"execution_processed\", {\n                    \"data_points\": len(self.execution_data)",
        "emit_telemetry(\"prediction_processed\", {\n                    \"model_type\": prediction_data[\"model_type\"],\n                    \"accuracy\": prediction_data[\"accuracy\"]\n                })",
        "emit_telemetry(\"periodic_evaluation\", performance_log)",
        "emit_telemetry(self, event_type, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\module_status.py": {
      "module": "module_status",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.TELEMETRY"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_account_splitter.py": {
      "module": "multi_account_splitter",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"MODULE_INITIALIZED\", {\n            \"routing_algorithm\": self.routing_algorithm,\n            \"max_account_utilization\": self.max_account_utilization,\n            \"connected_accounts\": len(self.connected_accounts)",
        "emit_telemetry(\"TRADE_SPLIT_SUCCESS\", {\n                    \"signal_id\": signal_data.get(\"signal_id\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine.py": {
      "module": "multi_agent_coordination_engine",
      "routes": [
        "emit_telemetry(\"coordination_engine_initialized\", {\n            \"timestamp\": self.start_time.isoformat()",
        "emit_telemetry(\"signal_proposal_received\", {\n                    \"signal_id\": signal_id,\n                    \"source_module\": candidate.source_module,\n                    \"timestamp\": candidate.timestamp\n                })",
        "emit_telemetry(\"trade_signal_finalized\", decision_data)",
        "emit_telemetry(\"decision_diagnostics_generated\", diagnostics_data)",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_fixed.py": {
      "module": "multi_agent_coordination_engine_fixed",
      "routes": [
        "emit_telemetry(\"coordination_engine_initialized\", {\n            \"timestamp\": self.start_time.isoformat()",
        "emit_telemetry(\"signal_proposal_received\", {\n                    \"signal_id\": signal_id,\n                    \"source_module\": candidate.source_module,\n                    \"timestamp\": candidate.timestamp\n                })",
        "emit_telemetry(\"trade_signal_finalized\", decision_data)",
        "emit_telemetry(\"decision_diagnostics_generated\", diagnostics_data)",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_fixed_restored.py": {
      "module": "multi_agent_coordination_engine_fixed_restored",
      "routes": [
        "emit_telemetry(\"coordination_engine_initialized\", {\n            \"timestamp\": self.start_time.isoformat()",
        "emit_telemetry(\"signal_proposal_received\", {\n                    \"signal_id\": signal_id,\n                    \"source_module\": candidate.source_module,\n                    \"timestamp\": candidate.timestamp\n                })",
        "emit_telemetry(\"trade_signal_finalized\", decision_data)",
        "emit_telemetry(\"decision_diagnostics_generated\", diagnostics_data)",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_recovered.py": {
      "module": "multi_agent_coordination_engine_recovered",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"coordination_engine_initialized\", {\n            \"timestamp\": self.start_time.isoformat()",
        "emit_telemetry(\"signal_proposal_received\", {\n                    \"signal_id\": signal_id,\n                    \"source_module\": candidate.source_module,\n                    \"timestamp\": candidate.timestamp\n                })",
        "emit_telemetry(\"trade_signal_finalized\", decision_data)",
        "emit_telemetry(\"decision_diagnostics_generated\", diagnostics_data)",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_decision_visualizer.py": {
      "module": "mutation_decision_visualizer",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('MutationDecisionExplained', explanation_payload)",
        "event_bus.subscribe('MutationDecisionRequest', self._handle_decision_request)",
        "event_bus.subscribe('StrategyMutation', self._handle_strategy_mutation)",
        "event_bus.subscribe('MLModelUpdate', self._handle_model_update)",
        "event_bus.subscribe('PatternDetected', self._handle_pattern_detection)",
        "emit_telemetry(\"visualizer_started\", {\"status\": \"active\"})",
        "emit_telemetry(\"visualizer_stopped\", {\"status\": \"inactive\"})",
        "emit_telemetry(\"decision_metrics\", self._get_current_metrics()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_signal_adapter.py": {
      "module": "mutation_signal_adapter",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "emit_telemetry(\"MODULE_INITIALIZED\")",
        "emit_telemetry(\"MUTATION_RECEIVED\")",
        "emit_telemetry(self, event_type)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\my_script_with_validation.py": {
      "module": "my_script_with_validation",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\omega_duplicate_resolution_engine.py": {
      "module": "omega_duplicate_resolution_engine",
      "routes": [
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\",\n            \"log_metric(\",\n            \"subscribe_to_event(\",\n            \"register_route(\",\n            \"UUID\",\n            \"kill_switch\",\n            \"freeze_agent\",\n            \"risk_check\",\n            \"strategy_mutation\",\n        ]\n        \n        # Low value patterns (quarantine candidates)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\order_audit_logger.py": {
      "module": "order_audit_logger",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"AuditOrderLogged\", event_data)",
        "event_bus.emit(\"AuditErrorAlert\", alert_data)",
        "event_bus.emit(\"TelemetryUpdate\", metrics_data)",
        "event_bus.subscribe(\"OrderExecuted\", self._handle_order_executed)",
        "event_bus.subscribe(\"OrderCancelled\", self._handle_order_cancelled)",
        "event_bus.subscribe(\"OrderRejected\", self._handle_order_rejected)",
        "event_bus.subscribe(\"OrderModified\", self._handle_order_modified)",
        "event_bus.subscribe(\"MT5OrderUpdate\", self._handle_mt5_order_update)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_aggregator_engine.py": {
      "module": "pattern_aggregator_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_classifier_engine.py": {
      "module": "pattern_classifier_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_confidence_overlay.py": {
      "module": "pattern_confidence_overlay",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_engine.py": {
      "module": "pattern_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"MODULE_INITIALIZED\")",
        "emit_telemetry(\"pattern_detection\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_feedback_loop_integrator.py": {
      "module": "pattern_feedback_loop_integrator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_learning_engine_phase58.py": {
      "module": "pattern_learning_engine_phase58",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\", {\"status\": \"initialized\"})",
        "emit_telemetry(\"live_trade_processed\", {\n                    \"symbol\": trade_data[\"symbol\"],\n                    \"strategy\": trade_data[\"strategy\"],\n                    \"success\": trade_data[\"success\"],\n                    \"total_trades\": len(self.live_trades)",
        "emit_telemetry(\"backtest_processed\", {\n                    \"strategy\": backself.event_bus.request('data:live_feed')",
        "emit_telemetry(\"manual_override_processed\", {\n                    \"override_type\": override_data[\"override_type\"],\n                    \"outcome\": override_data[\"outcome\"],\n                    \"total_overrides\": len(self.manual_overrides)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_miner.py": {
      "module": "pattern_miner",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialized\", {\"status\": \"active\"})",
        "emit_telemetry(self, event_type, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_signal_harmonizer.py": {
      "module": "pattern_signal_harmonizer",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"PatternDetected\", self._handle_pattern_detected)",
        "event_bus.subscribe(\"SignalGenerated\", self._handle_signal_generated)",
        "event_bus.subscribe(\"StrategyRecommendation\", self._handle_strategy_recommendation)",
        "event_bus.subscribe(\"ExecutionResult\", self._handle_execution_result)",
        "event_bus.subscribe(\"TradeExecuted\", self._handle_trade_executed)",
        "event_bus.subscribe(\"HistoricalPatternRequest\", self._handle_historical_pattern_request)",
        "event_bus.subscribe(\"SystemStatusCheck\", self._handle_status_check)",
        "event_bus.subscribe(\"PerformanceMetricsRequest\", self._handle_metrics_request)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\performance_status_check.py": {
      "module": "performance_status_check",
      "routes": [
        "event_bus.subscribe(\"system.heartbeat\", self.handle_heartbeat)",
        "event_bus.subscribe(\"architect.compliance_check\", self.handle_compliance_check)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase92a_system_repair_engine_fixed.py": {
      "module": "phase92a_system_repair_engine_fixed",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('method:executed', {'method': self.__class__.__name__})",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_49_performance_loop_hardening.py": {
      "module": "phase_49_performance_loop_hardening",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_50_optimization.py": {
      "module": "phase_50_optimization",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_87_final_activation.py": {
      "module": "phase_86_87_final_activation",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_strategy_intelligence_activation.py": {
      "module": "phase_86_strategy_intelligence_activation",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_88_live_trial_activation.py": {
      "module": "phase_88_live_trial_activation",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_90_feedback_validation.py": {
      "module": "phase_90_feedback_validation",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"feedback:new_result\", capture_feedback, \"TestListener\")",
        "event_bus.subscribe(\"journal:trade_logged\", capture_events, \"TestListener\")",
        "event_bus.subscribe(\"telemetry:trade_outcome\", capture_events, \"TestListener\")",
        "event_bus.subscribe(\"strategy:adjust\", capture_adjustments, \"TestListener\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_real_mt5_integration_corrected.py": {
      "module": "phase_92a_real_mt5_integration_corrected",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_real_mt5_integration_engine.py": {
      "module": "phase_92a_real_mt5_integration_engine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_repair_clean.py": {
      "module": "phase_92a_repair_clean",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('telemetry:heartbeat', {\n                            'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('system:kill_switch', {\n                    'active': True,\n                    'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('system:kill_switch', {\n                    'active': False,\n                    'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe('execution:fill', self._handle_execution_fill)",
        "event_bus.subscribe('execution:cancel', self._handle_execution_cancel)",
        "event_bus.subscribe('system:kill_switch', self._handle_kill_switch)",
        "event_bus.subscribe('telemetry:heartbeat', self._handle_telemetry)",
        "event_bus.subscribe('risk:breach', self._handle_risk_breach)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_system_repair_engine.py": {
      "module": "phase_92a_system_repair_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit('telemetry:heartbeat', {\n                            'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('system:kill_switch', {\n                    'active': True,\n                    'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('system:kill_switch', {\n                    'active': False,\n                    'timestamp': datetime.now(timezone.utc)",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit('error:fallback_triggered', {'module': __name__})",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe('execution:fill', self._handle_execution_fill)",
        "event_bus.subscribe('execution:cancel', self._handle_execution_cancel)",
        "event_bus.subscribe('system:kill_switch', self._handle_kill_switch)",
        "event_bus.subscribe('telemetry:heartbeat', self._handle_telemetry)",
        "event_bus.subscribe('risk:breach', self._handle_risk_breach)",
        "event_bus.subscribe('execution:fill', self._handle_execution_fill)",
        "event_bus.subscribe('execution:cancel', self._handle_execution_cancel)",
        "event_bus.subscribe('telemetry:heartbeat', self._handle_telemetry)",
        "event_bus.subscribe('risk:breach', self._handle_risk_breach)",
        "event_bus.subscribe('dashboard:update', self._handle_dashboard_update)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_autofix.py": {
      "module": "phase_95_eventbus_autofix",
      "routes": [
        "event_bus.emit('telemetry', data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_autofix.py": {
      "module": "phase_96_signal_wiring_autofix",
      "routes": [
        "event_bus.emit(signal_type, data)",
        "event_bus.subscribe(signal_type, handler)",
        "event_bus.subscribe('telemetry', self._on_telemetry)",
        "event_bus.subscribe('system_status', self._on_system_status)",
        "emit_signal(self, signal_type, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_enforcer.py": {
      "module": "phase_96_signal_wiring_enforcer",
      "routes": [
        "event_bus.emit('telemetry', {{\n                'handler': '{handler_name}',\n                'topic': '{topic}',\n                'timestamp': time.time()"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_98_system_build_validator.py": {
      "module": "phase_98_system_build_validator",
      "routes": [
        "event_bus.emit(\"telemetry\", telemetry_data)",
        "event_bus.emit(\"validation_complete\", {\n            \"module\": \"phase_98_system_build_validator\",\n            \"results\": self.validation_results,\n            \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"file_missing\", {\n                \"file\": file_path,\n                \"severity\": \"CRITICAL\",\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"file_validated\", {\n                \"file\": file_path,\n                \"status\": \"VALID\",\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"file_corrupted\", {\n                \"file\": file_path,\n                \"error\": str(e)",
        "event_bus.emit(\"architect_violation\", {\n                \"type\": \"MOCK_DATA_DETECTED\",\n                \"file\": file_path,\n                \"data\": mock_sources,\n                \"severity\": \"CRITICAL\",\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"surveillance_request\", surveillance_request)",
        "event_bus.emit(\"surveillance_complete\", {\n            \"module\": \"phase_98_system_build_validator\",\n            \"violations_found\": len(connectivity_violations)",
        "event_bus.emit(\"eventbus_violation\", {\n                                    \"module\": module_name,\n                                    \"violation\": \"disconnected\",\n                                    \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"validation_report\", report)",
        "event_bus.emit(\"phase_98_complete\", {\n            \"module\": \"phase_98_system_build_validator\",\n            \"status\": \"COMPLETE\",\n            \"files_validated\": self.validation_results[\"files_validated\"],\n            \"violations_detected\": len(self.validation_results[\"violations_detected\"])",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_99_launch_and_link.py": {
      "module": "phase_99_launch_and_link",
      "routes": [
        "event_bus.emit(\"telemetry\", telemetry_data)",
        "event_bus.emit(\"phase_99_error\", {\n                \"module\": self.module_id,\n                \"error\": error_msg,\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"architect.validate\", surveillance_request)",
        "event_bus.emit(\"registry_validated\", {\n                \"module\": self.module_id,\n                \"module_count\": module_count,\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"system_tree_validated\", {\n                \"module\": self.module_id,\n                \"total_modules\": total_modules,\n                \"eventbus_connected\": eventbus_connected,\n                \"connectivity_rate\": (eventbus_connected/total_modules)",
        "event_bus.emit(\"telemetry\", test_telemetry)",
        "event_bus.emit(\"connectivity_test\", connectivity_test)",
        "event_bus.emit(\"phase_99_complete\", completion_data)",
        "event_bus.emit(\"system_launch_ready\", {\n                \"module\": self.module_id,\n                \"status\": \"ready_for_phase_100\",\n                \"modules_validated\": self.launch_results[\"modules_validated\"],\n                \"total_modules\": self.launch_results[\"total_modules\"],\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"system_launch_issues\", {\n                \"module\": self.module_id,\n                \"status\": \"issues_detected\",\n                \"validation_results\": self.launch_results,\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"dashboard_launch_ready\", dashboard_prep)",
        "event_bus.subscribe(\"launch.phase_99\", self.phase_99_launch)",
        "event_bus.subscribe(\"system.final_validation\", self.run_final_validation)",
        "event_bus.subscribe(\"launch.prepare_dashboard\", self.prepare_dashboard_launch)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_resumption_engine.py": {
      "module": "phase_resumption_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\portfolio_optimizer.py": {
      "module": "portfolio_optimizer",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"portfolio_optimizer:update_complete\", {\n                \"strategy_id\": strategy_id,\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"portfolio_rebalanced\", {\n                \"weights\": normalized_weights,\n                \"timestamp\": datetime.now(timezone.utc)",
        "event_bus.emit(\"telemetry_portfolio_summary\", telemetry_event)",
        "event_bus.subscribe(\"trade_filled\", self._handle_trade_filled)",
        "event_bus.subscribe(\"stoploss_triggered\", self._handle_stoploss_triggered)",
        "event_bus.subscribe(\"takeprofit_triggered\", self._handle_takeprofit_triggered)",
        "event_bus.subscribe(\"portfolio_imbalance_detected\", self._handle_portfolio_imbalance)",
        "event_bus.subscribe(\"mutation_engine:execution_feedback_received\", self._handle_mutation_feedback)",
        "EventBus()",
        "emit_telemetry(\"portfolio_optimizer_error\", {\"error\": str(e)",
        "emit_telemetry(\"portfolio_optimizer_mutation_error\", {\"error\": str(e)",
        "emit_telemetry(\"trade_fill_trigger\", data)",
        "emit_telemetry(\"stoploss_trigger\", data)",
        "emit_telemetry(\"takeprofit_trigger\", data)",
        "emit_telemetry(\"portfolio_imbalance\", data)",
        "emit_telemetry(\"optimizer.exposure_total\", {\n                \"total_exposure\": sum([v.get(\"value\", 0)",
        "emit_telemetry(\"optimizer.risk_profile\", {\"risk_profile\": risk_profile})",
        "emit_telemetry(\"optimizer.correlation_avg\", {\n                \"avg_correlation\": correlation_matrix.get(\"avg_correlation\", 0.0)",
        "emit_telemetry(\"portfolio_optimizer_mutation_error\", {\n                \"error\": str(e)",
        "emit_telemetry(\"rebalance_triggered\", {\n                \"trigger\": trigger_event,\n                \"timestamp\": current_time,\n                \"portfolio_weights\": portfolio_weights\n            })",
        "emit_telemetry(\"rebalance_error\", {\"error\": str(e)",
        "emit_telemetry(\"strategy_weight_recommendation\", {\"weights\": dict(normalized_weights)",
        "emit_telemetry(\"portfolio_risk_score\", {\n                \"total_strategies\": len(active_strategies)",
        "emit_telemetry(\"rebalance_log\", {\n                \"timestamp\": datetime.now(timezone.utc)",
        "emit_telemetry(\"rebalance_error\", {\"error\": str(e)",
        "emit_telemetry(\"exposure_throttle_triggered\", {\n                    \"strategy_id\": strategy_id,\n                    \"position_size\": position_size,\n                    \"limit_type\": \"daily\",\n                    \"limit_value\": self.max_daily_exposure\n                })",
        "emit_telemetry(\"exposure_throttle_triggered\", {\n                    \"strategy_id\": strategy_id,\n                    \"position_size\": position_size,\n                    \"limit_type\": \"trailing\",\n                    \"limit_value\": self.max_trailing_exposure\n                })",
        "emit_telemetry(self, metric_name: str, data: Dict[str, Any])"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\post_trade_feedback_collector.py": {
      "module": "post_trade_feedback_collector",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"OrderClosed\", self._handle_order_closed)",
        "event_bus.subscribe(\"SignalExecuted\", self._handle_signal_executed)",
        "event_bus.subscribe(\"TradeOpened\", self._handle_trade_opened)",
        "event_bus.subscribe(\"TradeModified\", self._handle_trade_modified)",
        "event_bus.subscribe(\"MT5PositionUpdate\", self._handle_position_update)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\post_trade_feedback_engine.py": {
      "module": "post_trade_feedback_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"trade:closed\", self._handle_trade_closed, self.module_name)",
        "event_bus.subscribe(\"position:closed\", self._handle_position_closed, self.module_name)",
        "event_bus.subscribe(\"order:filled\", self._handle_order_filled, self.module_name)",
        "event_bus.subscribe(\"news:impact\", self._handle_news_impact, self.module_name)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reactive_signal_autopilot.py": {
      "module": "reactive_signal_autopilot",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"autopilot_monitoring_started\", {\n            \"timestamp\": datetime.datetime.now()",
        "emit_telemetry(\"autopilot_monitoring_stopped\", {\n            \"timestamp\": datetime.datetime.now()",
        "emit_telemetry(\"broker_response_processed\", asdict(metrics)",
        "emit_telemetry(\"reactive_override_applied\", asdict(override)",
        "emit_telemetry(self, event_type: str, data: Dict[str, Any])",
        "emit_telemetry(\"periodic_health_report\", telemetry_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\RECOVERED_execution_supervisor_ARCHITECT_COMPLIANT.py": {
      "module": "RECOVERED_execution_supervisor_ARCHITECT_COMPLIANT",
      "routes": [
        "emit_telemetry()",
        "emit_telemetry(self)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\repair_engine_advanced_patches.py": {
      "module": "repair_engine_advanced_patches",
      "routes": [
        "event_bus.emit(\"genesis.{module_name}\", {{\n#     \"action\": \"module_action\",\n#     \"data\": result_data,\n#     \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "EventBus()",
        "emit_telemetry({{\n#     \"module\": \"{Path(violation['file'])"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\risk_engine.py": {
      "module": "risk_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"MODULE_INITIALIZED\")",
        "emit_telemetry(\"RISK_MONITORING_UPDATE\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_context_enricher.py": {
      "module": "signal_context_enricher",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_execution_router.py": {
      "module": "signal_execution_router",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"TradeRecommendationGenerated\", self._handle_trade_recommendation)",
        "event_bus.subscribe(\"ManualOverrideStateChange\", self._handle_manual_override)",
        "event_bus.subscribe(\"RiskStateUpdate\", self._handle_risk_update)",
        "event_bus.subscribe(\"MT5ConnectionStatus\", self._handle_mt5_status)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_feed.py": {
      "module": "signal_feed",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_mapper.py": {
      "module": "signal_pattern_mapper",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_visualizer.py": {
      "module": "signal_pattern_visualizer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_quality_amplifier.py": {
      "module": "signal_quality_amplifier",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"signal_quality_amplifier_initialized\", {\n            \"timestamp\": self.start_time.isoformat()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_liveloop.py": {
      "module": "smart_execution_liveloop",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"LiveTradeExecuted\", self.handle_live_trade, \"SmartExecutionLiveLoop\")",
        "event_bus.subscribe(\"TradeJournalEntry\", self.handle_journal_entry, \"SmartExecutionLiveLoop\")",
        "event_bus.subscribe(\"ExecutionLog\", self.handle_execution_log, \"SmartExecutionLiveLoop\")",
        "event_bus.subscribe(\"BacktestResults\", self.handle_backtest_results, \"SmartExecutionLiveLoop\")",
        "event_bus.subscribe(\"KillSwitchTrigger\", self.handle_kill_switch, \"SmartExecutionLiveLoop\")",
        "emit_telemetry(\"initialization\", \"SmartExecutionLiveLoop service activated successfully\")",
        "emit_telemetry(self, action, message)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_monitor.py": {
      "module": "smart_execution_monitor",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"LiveTradeExecuted\", self.handle_live_trade, \"SmartExecutionMonitor\")",
        "event_bus.subscribe(\"BacktestResults\", self.handle_backtest_results, \"SmartExecutionMonitor\")",
        "event_bus.subscribe(\"TradeJournalEntry\", self.handle_journal_entry, \"SmartExecutionMonitor\")",
        "event_bus.subscribe(\"ModuleTelemetry\", self.handle_telemetry, \"SmartExecutionMonitor\")",
        "event_bus.subscribe(\"PatternDetected\", self.handle_pattern, \"SmartExecutionMonitor\")",
        "event_bus.subscribe(\"RecalibrationSuccessful\", self.on_feedback_ack, \"SmartExecutionMonitor\")",
        "event_bus.subscribe(\"LogSyncComplete\", self.on_feedback_ack, \"SmartExecutionMonitor\")",
        "emit_telemetry(\"initialization\", \"SmartExecutionMonitor started successfully\")",
        "emit_telemetry(self, action, message)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_reactor.py": {
      "module": "smart_execution_reactor",
      "routes": [
        "event_bus.emit(\"TradeAdjustmentInitiated\", adjustment_event)",
        "event_bus.emit(\"StrategyFreezeLock\", freeze_event)",
        "event_bus.emit(\"MacroSyncReboot\", sync_event)",
        "event_bus.subscribe(\"ExecutionDeviationAlert\", self.on_execution_deviation)",
        "event_bus.subscribe(\"KillSwitchTrigger\", self.on_kill_switch_trigger)",
        "event_bus.subscribe(\"RecalibrationRequest\", self.on_recalibration_request)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_feedback_sync.py": {
      "module": "smart_feedback_sync",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_signal_execution_linker.py": {
      "module": "smart_signal_execution_linker",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"SignalGenerated\", self._handle_signal_generated)",
        "event_bus.subscribe(\"ExecutionEnvelopeReady\", self._handle_execution_envelope_ready)",
        "event_bus.subscribe(\"StrategyRecommendation\", self._handle_strategy_recommendation)",
        "event_bus.subscribe(\"KillSwitchTrigger\", self._handle_kill_switch)",
        "event_bus.subscribe(\"FTMOComplianceUpdate\", self._handle_ftmo_update)",
        "event_bus.subscribe(\"RiskLimitUpdate\", self._handle_risk_limit_update)",
        "event_bus.subscribe(\"DrawdownAlert\", self._handle_drawdown_alert)",
        "event_bus.subscribe(\"SystemStatusCheck\", self._handle_status_check)",
        "event_bus.subscribe(\"PerformanceMetricsRequest\", self._handle_metrics_request)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategic_signal_orchestrator.py": {
      "module": "strategic_signal_orchestrator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_fixed.py": {
      "module": "strategy_adaptive_context_synthesizer_fixed",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"macro_update_event\", self._handle_macro_update)",
        "event_bus.subscribe(\"execution_feedback_received\", self._handle_execution_feedback)",
        "event_bus.subscribe(\"signal_context_change\", self._handle_signal_context_change)",
        "event_bus.subscribe(\"pattern_cluster_detected\", self._handle_pattern_cluster_detected)",
        "event_bus.subscribe(\"system_command\", self._handle_system_command)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_recovered.py": {
      "module": "strategy_adaptive_context_synthesizer_recovered",
      "routes": [
        "event_bus.subscribe(\"macro_update_event\", self._handle_macro_update)",
        "event_bus.subscribe(\"execution_feedback_received\", self._handle_execution_feedback)",
        "event_bus.subscribe(\"signal_context_change\", self._handle_signal_context_change)",
        "event_bus.subscribe(\"pattern_cluster_detected\", self._handle_pattern_cluster_detected)",
        "event_bus.subscribe(\"system_command\", self._handle_system_command)",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_feedback_journal.py": {
      "module": "strategy_feedback_journal",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialization\", \"Module initialized successfully\")",
        "emit_telemetry(\"new_strategy\", f\"New strategy tracked: {strategy_id}\")",
        "emit_telemetry(\n                            \"signal_feedback_processed\", \n                            f\"Processed 10 more signal feedbacks for {strategy_id}, win rate: {strategy['win_rate']:.2f}\"\n                        )",
        "emit_telemetry(self, action, message=None)",
        "emit_telemetry(\"startup\", \"StrategyFeedbackJournal service started\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_mutator.py": {
      "module": "strategy_mutator",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"TradeOutcomeFeedback\", self._handle_trade_outcome_feedback, self.module_name)",
        "event_bus.subscribe(\"PnLScoreUpdate\", self._handle_pnl_score_update, self.module_name)",
        "event_bus.subscribe(\"SignalFeedbackScore\", self._handle_signal_feedback, self.module_name)",
        "event_bus.subscribe(\"PatternDetected\", self._handle_pattern_detected, self.module_name)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_recalibration_test.py": {
      "module": "strategy_recalibration_test",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\system_monitor_visualizer.py": {
      "module": "system_monitor_visualizer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\targeted_mt5_analysis.py": {
      "module": "targeted_mt5_analysis",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_auditor.py": {
      "module": "trade_auditor",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"initialized\", {\"status\": \"active\"})",
        "emit_telemetry(self, event_type, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_journal.py": {
      "module": "trade_journal",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_journal_engine.py": {
      "module": "trade_journal_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(\"MODULE_INITIALIZED\")"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_memory_feedback_engine.py": {
      "module": "trade_memory_feedback_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_priority_resolver.py": {
      "module": "trade_priority_resolver",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_recommendation_engine.py": {
      "module": "trade_recommendation_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.subscribe(\"PatternOverlaySignal\", self._handle_pattern_signal)",
        "event_bus.subscribe(\"MacroFilterUpdate\", self._handle_macro_signal)",
        "event_bus.subscribe(\"VolatilityIndicatorUpdate\", self._handle_volatility_signal)",
        "event_bus.subscribe(\"BacktestValidationResult\", self._handle_backtest_signal)",
        "event_bus.subscribe(\"MT5PriceUpdate\", self._handle_price_update)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_visualizer.py": {
      "module": "trade_visualizer",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ultimate_system_rebuild_engine.py": {
      "module": "ultimate_system_rebuild_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\universal_mt5_discovery_engine.py": {
      "module": "universal_mt5_discovery_engine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\universal_mt5_discovery_engine_92b.py": {
      "module": "universal_mt5_discovery_engine_92b",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\SYNTAX_ERRORS\\SYNTAX_event_bus_manager.py": {
      "module": "SYNTAX_event_bus_manager",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.TELEMETRY"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advancedsignaloptimizationengine.py": {
      "module": "ORPHAN_test_advancedsignaloptimizationengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advanced_signal_optimization_engine.py": {
      "module": "ORPHAN_test_advanced_signal_optimization_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"ModuleTelemetry\", capture_telemetry)",
        "event_bus.subscribe(\"ASIOSignalConfidence\", capture_confidence)",
        "event_bus.subscribe(\"ASIOOptimizationAdvice\", capture_optimization)",
        "event_bus.subscribe(\"ASIOModelTrained\", capture_model_training)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_brokerrulesynctelemetrywidget.py": {
      "module": "ORPHAN_test_brokerrulesynctelemetrywidget",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboardengine.py": {
      "module": "ORPHAN_test_dashboardengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_validation.py": {
      "module": "ORPHAN_test_dashboard_validation",
      "routes": [
        "event_bus.emit(\"test:event\", {\"message\": \"Test message 1\"})",
        "event_bus.emit(\"test:event\", {\"message\": \"Test message 2\"})",
        "event_bus.emit(\"other:event\", {\"message\": \"Should not be received\"})",
        "event_bus.subscribe(\"test:event\", test_callback)",
        "event_bus.subscribe(\"data:update:telemetry\", monitor_callback)",
        "EventBus()",
        "EventBus()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_widgets.py": {
      "module": "ORPHAN_test_dashboard_widgets",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_executiondispatcher.py": {
      "module": "ORPHAN_test_executiondispatcher",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_executionflowcontroller.py": {
      "module": "ORPHAN_test_executionflowcontroller",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_execution_dashboard.py": {
      "module": "ORPHAN_test_execution_dashboard",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_execution_dispatcher_phase39.py": {
      "module": "ORPHAN_test_execution_dispatcher_phase39",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"execution_success\", capture_success)",
        "event_bus.subscribe(\"execution_error\", capture_error)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase17_telemetry_dashboard.py": {
      "module": "ORPHAN_test_phase17_telemetry_dashboard",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase32_execution_flow_controller.py": {
      "module": "ORPHAN_test_phase32_execution_flow_controller",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry('test_metric', self.event_bus.request('data:live_feed')"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase34_dashboard_integration.py": {
      "module": "ORPHAN_test_phase34_dashboard_integration",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.SIGNAL"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase34_dashboard_integration_clean.py": {
      "module": "ORPHAN_test_phase34_dashboard_integration_clean",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.RISK"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase35_telemetry_panel.py": {
      "module": "ORPHAN_test_phase35_telemetry_panel",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalbiasdashboard.py": {
      "module": "ORPHAN_test_signalbiasdashboard",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalfusionmatrix.py": {
      "module": "ORPHAN_test_signalfusionmatrix",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalloopreinforcementengine.py": {
      "module": "ORPHAN_test_signalloopreinforcementengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalvalidator.py": {
      "module": "ORPHAN_test_signalvalidator",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_fusion_matrix.py": {
      "module": "ORPHAN_test_signal_fusion_matrix",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry()"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_loop_reinforcement_engine.py": {
      "module": "ORPHAN_test_signal_loop_reinforcement_engine",
      "routes": [
        "event_bus.emit(\"telemetry\", state_data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategicsignalrefinementengine.py": {
      "module": "ORPHAN_test_strategicsignalrefinementengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_StrategyMutationLogicEngine.py": {
      "module": "ORPHAN_test_StrategyMutationLogicEngine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategyrecommenderengine.py": {
      "module": "ORPHAN_test_strategyrecommenderengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategysentimentfusionengine.py": {
      "module": "ORPHAN_test_strategysentimentfusionengine",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategy_mutation_phase13.py": {
      "module": "ORPHAN_test_strategy_mutation_phase13",
      "routes": [
        "event_bus.emit(\"telemetry\", {\n                \"module\": __name__,\n                \"status\": \"running\",\n                \"timestamp\": datetime.now()",
        "event_bus.emit(\"telemetry\", state_data)",
        "event_bus.subscribe(\"StrategyMutationEvent\", self._handle_strategy_mutation, self.test_name)",
        "event_bus.subscribe(\"AlphaDecayDetected\", self._handle_alpha_decay, self.test_name)",
        "event_bus.subscribe(\"MutationLogAppend\", self._handle_mutation_log, self.test_name)",
        "event_bus.subscribe(\"MetaStrategyUpdate\", self._handle_meta_strategy_update, self.test_name)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_streamlitfrontend.py": {
      "module": "ORPHAN_test_streamlitfrontend",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_telemetrycollector.py": {
      "module": "ORPHAN_test_telemetrycollector",
      "routes": [
        "event_bus.emit('telemetry', data)",
        "event_bus.emit(\"telemetry\", state_data)",
        "emit_telemetry(self, data)"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    },
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_validate_phase32_execution_flow_controller.py": {
      "module": "ORPHAN_validate_phase32_execution_flow_controller",
      "routes": [
        "emit_telemetry(\"test_event\", {\"test\": \"data\"})"
      ],
      "category": "INSTITUTIONAL.EXECUTION"
    }
  },
  "route_categories": {
    "INSTITUTIONAL.EXECUTION": [
      "advanced_signal_optimization_engine.py",
      "autonomous_order_executor.py",
      "auto_execution_manager_quarantined.py",
      "backtest_dashboard_module.py",
      "broker_rule_sync_telemetry_widget.py",
      "dashboard.py",
      "dashboard_engine.py",
      "dashboard_frontend.py",
      "dashboard_linkage_patch.py",
      "dashboard_widgets.py",
      "debug_telemetry_events.py",
      "eventbus_compliance_fingerprint_sync.py",
      "execution_control_core.py",
      "execution_dashboard.py",
      "execution_dispatcher.py",
      "execution_engine.py",
      "execution_engine_orchestrator.py",
      "execution_engine_v3_phase66.py",
      "execution_flow_controller.py",
      "genesis_advanced_tkinter_ui.py",
      "genesis_boot_test.py",
      "genesis_cleanup_engine_v3.py",
      "genesis_compliance_core.py",
      "genesis_dashboard_ui_live_sync.py",
      "genesis_dependency_validator.py",
      "genesis_final_system_validation.py",
      "genesis_gui_launcher.py",
      "genesis_installer_builder.py",
      "genesis_integrity_auditor.py",
      "genesis_launcher.py",
      "genesis_trade_engine.py",
      "hardened_event_bus.py",
      "institutional_signal_validator.py",
      "kill_switch_compliance.py",
      "launch_dashboard.py",
      "module_recovery_engine.py",
      "mt5_adapter.py",
      "mt5_bridge_test.py",
      "mt5_connection_bridge.py",
      "mt5_connector_stub.py",
      "mt5_sync_adapter.py",
      "pattern_meta_strategy_engine.py",
      "phase51_eventbus_compliance_fingerprint_sync.py",
      "phase61_compliance_validation_engine.py",
      "phase_50_execution_loop_telemetry.py",
      "phase_92a_complete_dashboard.py",
      "phase_92a_live_dashboard.py",
      "phase_93_telemetry_enforcer.py",
      "self_healing_strategy_engine.py",
      "signal_bias_dashboard.py",
      "signal_historical_telemetry_linker.py",
      "signal_loop_reinforcement_engine.py",
      "signal_loop_reinforcement_engine_step8.py",
      "signal_validator.py",
      "strategy_mutation_logic_engine.py",
      "strategy_recalibration_engine.py",
      "strategy_recommender_engine.py",
      "telemetry_dashboard.py",
      "validate_dashboard_engine.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_backtest_engine.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_indicator_scanner.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_indicator_scanner_fixed.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_signal_refinement_engine.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer_fixed.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_mutation_logic_engine.py",
      "QUARANTINE_DUPLICATES\\indicator_scanner_fixed_corrupted.py",
      "QUARANTINE_DUPLICATES\\signal_refinement_engine_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backtest_explorer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\launch_phase18_production.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\live_backtest_comparison_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase13_event_subscriber.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_final_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_signal_pipeline_stress_tester.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase47_live_feed_sync_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase47_portfolio_optimizer_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase53_54_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase59_60_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase61_62_test_suite.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase62_audit_resilience_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\resolve_phase13_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_auto_repair_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_smart_monitor_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_architect_compliant_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_comprehensive_smart_monitor_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_deadlock_debugger.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_smart_monitor_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_adaptiveexecutionresolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_advancedpatternminer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_architect_compliant_broker_discovery.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_BacktestEngine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_brokerdiscoveryengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dsrstrategymutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionenvelopeengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionenvelopeharmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionflowtest.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionloopresponder.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ExecutionPrioritizationEngine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionrisksentinel.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionselector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_envelope_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_envelope_engine_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_feedback_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_prioritization_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_selector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_feedback_injection_phase12.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livealertbridge.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livefeedbackadapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livetradefeedbackinjector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_market_data_feed_manager.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metasignalharmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_meta_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ml_retraining_loop_phase57.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_MultiAccountSplitter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multiagentcoordinationengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_account_splitter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_account_splitter_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_agent_coordination_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutationsignaladapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_order_audit_logger.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternminer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternsignalharmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_learning_engine_phase58.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_miner_realdata.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_mining_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase18_reactive_execution.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase18_reactive_execution_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase19_adaptive_signal_flow.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase20signalpipelinestresstester.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase22_signal_refinement.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase23_strategy_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase31_execution_prioritization.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase34_broker_discovery_final.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_broker_discovery.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_broker_discovery_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_execution_prioritization.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase42_context_synthesizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase42_macro_sync.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase44_priority_score_mutation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase45_strategy_self_healing.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase47portfoliooptimizerintegration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase47_portfolio_optimizer_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase55_56_ml_control_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase74_75.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase80_83_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase80_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase81.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase82.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase82_83_comprehensive.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase83.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_portfolio_optimizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_post_trade_feedback_collector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_priority_score_patch_phase37.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactivesignalautopilot.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactive_signal_autopilot.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_riskengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalpatternmapper.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalqualityamplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_execution_router.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_loop_reinforcement_step8.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_quality_amplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionliveloop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionmonitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionreactor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartfeedbacksync.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartsignalexecutionlinker.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_execution_liveloop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_execution_monitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_monitor_safe.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_signal_execution_linker.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategicsignalorchestrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategyfeedbackjournal.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategymutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsignalqualityamplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsmartexecutionmonitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsmartmonitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradeauditor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradejournalengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_TradeMemoryFeedbackEngine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradepriorityresolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_memory_feedback_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_priority_resolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_recommendation_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_unknown.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_ers.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase13.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase23.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase35_completion.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_49.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_50.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_recovery.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\activate_phase_91c_lockdown.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\active_trades.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adaptive_execution_resolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adaptive_filter_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_auto_repair_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_pattern_miner.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_activation_v600.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_repair_enforcer_v7.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_v600_hardlock.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_v610_activator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_surveillance_daemon.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auto_execution_sync_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine_fixed_restored.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bulk_violation_eliminator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\contextual_execution_router.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dsr_strategy_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_bulk_repair.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ers_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\example_prompt_with_hook.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execute_phase_92a_patch.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_envelope_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_feedback_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_loop_responder.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_playbook_generator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_prioritization_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_risk_sentinel.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_selector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_new.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_new_restored.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_recovered.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_reconstructor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fixed_monitor_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fix_alpha_decay_subscribers.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fix_eventbus_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hardlock_recovery_full_patch.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\indicator_scanner_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\liquidity_sweep_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_alert_bridge.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_feedback_adapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_risk_governor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_trade_analyzer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_trade_feedback_injector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_event_sync_engine_92c.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\market_data_feed_manager.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\meta_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_execution_signal_loop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_pattern_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_retraining_loop_phase57.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_account_splitter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_fixed_restored.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_recovered.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_decision_visualizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\omega_duplicate_resolution_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\order_audit_logger.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_classifier_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_feedback_loop_integrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_learning_engine_phase58.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_miner.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_49_performance_loop_hardening.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_50_optimization.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_strategy_intelligence_activation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_88_live_trial_activation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_90_feedback_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_real_mt5_integration_corrected.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_real_mt5_integration_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_repair_clean.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_system_repair_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_autofix.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_autofix.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_98_system_build_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_99_launch_and_link.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\portfolio_optimizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\post_trade_feedback_collector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\post_trade_feedback_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reactive_signal_autopilot.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\RECOVERED_execution_supervisor_ARCHITECT_COMPLIANT.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\risk_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_execution_router.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_quality_amplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_liveloop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_monitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_reactor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_feedback_sync.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_signal_execution_linker.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategic_signal_orchestrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_recovered.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_feedback_journal.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_recalibration_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\targeted_mt5_analysis.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_auditor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_journal.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_journal_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_memory_feedback_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_priority_resolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_recommendation_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_visualizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ultimate_system_rebuild_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\universal_mt5_discovery_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\universal_mt5_discovery_engine_92b.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advancedsignaloptimizationengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advanced_signal_optimization_engine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_brokerrulesynctelemetrywidget.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboardengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_validation.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_widgets.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_executiondispatcher.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_executionflowcontroller.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_execution_dashboard.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_execution_dispatcher_phase39.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase17_telemetry_dashboard.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase32_execution_flow_controller.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase35_telemetry_panel.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalbiasdashboard.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalfusionmatrix.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalloopreinforcementengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalvalidator.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_fusion_matrix.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_loop_reinforcement_engine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategicsignalrefinementengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_StrategyMutationLogicEngine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategyrecommenderengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategysentimentfusionengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategy_mutation_phase13.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_streamlitfrontend.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_telemetrycollector.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_validate_phase32_execution_flow_controller.py"
    ],
    "INSTITUTIONAL.RISK": [
      "build_status_updater.py",
      "genesis_production_dashboard.py",
      "launch_genesis.py",
      "phase34_telemetry_dashboard_panel.py",
      "phase_65_compliance_healing.py",
      "validate_build_status_reconstruction.py",
      "validate_system_compliance.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backtest_visualizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\module_template_with_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_institutional_system.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\activate_architect_mode.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_panel.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\deep_patch_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_eventbus_deduplication.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_eventbus_migration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lightweight_validation_hook.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\my_script_with_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\performance_status_check.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_87_final_activation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_resumption_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\system_monitor_visualizer.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase34_dashboard_integration_clean.py"
    ],
    "INSTITUTIONAL.SIGNAL": [
      "build_tracker_logger.py",
      "emergency_architect_compliance_enforcer.py",
      "genesis_architect_agent.py",
      "phase_91_telemetry_wiring_enforcer.py",
      "signal_confidence_rating_engine.py",
      "signal_engine.py",
      "signal_fusion_matrix.py",
      "simple_event_bus.py",
      "strategy_sentiment_fusion_engine.py",
      "telemetry_validation_engine_phase67.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_emergency_json_repair.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_kill_switch_integrity_monitor.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_phase92a_system_repair_engine.py",
      "ui_components\\telemetry_logs.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\demo_kill_switch.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kill_switch_integrity_monitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutation_refinement_phase14.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_aggregator_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_confidence_overlay.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase43_sentiment_fusion_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_confidence_phase15.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_pattern_mapper_realdata.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\ultra_minimal_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_backtest_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\comprehensive_violation_eliminator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hardlock_recovery_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kill_switch_integrity_monitor_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_sync_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\master_recovery_directive.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_model_bootstrap.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_signal_adapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_aggregator_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_confidence_overlay.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase92a_system_repair_engine_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_enforcer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\repair_engine_advanced_patches.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_context_enricher.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_feed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_mapper.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_visualizer.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase34_dashboard_integration.py"
    ],
    "INSTITUTIONAL.TELEMETRY": [
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase_92_93_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_module_hashes.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_sync_guard.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\module_status.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\SYNTAX_ERRORS\\SYNTAX_event_bus_manager.py"
    ]
  },
  "isolated_modules": [
    "build_continuity_guard.py",
    "compliance_enforcer.py",
    "emergency_compliance_scan.py",
    "emergency_triage_orphan_eliminator.py",
    "genesis_architecture_status_generator.py",
    "integrate_strategy_mutation_engine.py",
    "orphan_intent_classifier.py",
    "phase_100_gui_boot.py",
    "phase_101_institutional_module_registry_clean.py",
    "phase_102_preparation.py",
    "phase_96_signal_wiring_focused_validator.py",
    "start_dashboard.py",
    "system_tree_initializer.py",
    "telemetry_collector.py",
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_build_tracker.py",
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_event_bus.py",
    "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_phase_95_eventbus_autofix_fixed.py",
    "styles\\dashboard_styles.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\apply_phase18_lock_in.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\apply_phase18_upgrade.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backend_template.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\debug_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\generate_legacy_storage_files.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\legacy_cache_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase32_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase34_final_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\run_phase12_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_httpclient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_httpclient_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\tempita.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\template.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\template_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\temporary_directory.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\temp_dir.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_20news.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_abc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_abstract_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_accessor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_acero.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_adhoc_memory_leak.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_affinity_propagation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_afm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_agg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_aggregate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_aggregation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_agg_filter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_aix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_algos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_analytics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_animation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_any_index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_append.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_append_common.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_apply.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arffread.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arff_parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_argparse.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_argsort.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arithmetic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arithmetic1d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arithmetics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arraymethod.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arraypad.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arrayprint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arraysetops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_api_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_coercion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_from_pyobj.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_ops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_tools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_to_datetime.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_array_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arrow_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_arrow_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_art3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_artist.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_asfreq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_asof.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_almost_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_attr_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_categorical_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_extension_array_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_frame_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_index_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_produces_warning.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assert_series_equal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_assign.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_astype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_at.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_axes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_axes3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_axes_grid1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_axis_nan_policy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backends_interactive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_bases.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_gtk3.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_macosx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_pdf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_pgf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_ps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_qt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_registry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_svg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_tk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backend_webagg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backtest_engine.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_backtest_engine_phase92b.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bagging.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ball_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bary_rational.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_base_indexer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bayes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bayesian_mixture.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bbox_tight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bdtr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_between_time.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bicluster.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_binned_statistic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_binning.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bin_groupby.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_birch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bisect_k_means.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bitset.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_blas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_block_internals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_boundary_decision_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bounds.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_boxplot_method.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bracket.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bsd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bsplines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_buf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_build.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_builder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_bunch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_business_day.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_business_hour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_business_month.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_business_quarter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_business_year.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_byteordercodes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_byteswap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_calendar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_calibration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_california_housing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_callback.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_can_hold_element.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_casting_floatingpoint_errors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_casting_unittests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_categorical.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_category.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cat_accessor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cbook.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cdflib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cffi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chained_assignment_deprecation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chaining_and_caching.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chandrupatla.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_character.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chebyshev.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_check_build.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chi2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chunking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_chunksize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_classes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_classification.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_classification_threshold.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_class_weight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cli.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_clipboard.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_codata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_coercion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_collections.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_colorbar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_colors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_column_transformer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_combine_concat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_comment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_common.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_common1d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_common_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_common_curve_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_compare_lightgbm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_compliant_nested_type.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_compression.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_compute.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_concat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_concatenate_chunks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_configtool.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_confusion_matrix_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_connections.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_constrainedlayout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_constraint_conversion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_construct.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_construction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_constructors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_construct_from_scalar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_construct_ndarray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_construct_object_arr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cont2discrete.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_contingency.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_continuous.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_continuous_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_contour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_contracts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_conversion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_conversion_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_converter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_converters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_convert_builtin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_convert_dtypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_coo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_coordinate_descent.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_copy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_core.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_core_functionalities.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_count.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_counting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_covariance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_covtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cpp_internals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cpu_dispatcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cpu_features.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_crackfortran.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_csr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_css.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_csv.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ctypeslib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cubature.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cuda.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cuda_numba_interop.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_custom_business_day.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_custom_business_hour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_custom_business_month.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_custom_dtypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cut.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cython.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cythonized_array_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cython_blas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cython_optimize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_cython_special.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_czt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_c_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_c_parser_only.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dask.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dataframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dataset.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dataset_encryption.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_datatypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_data_list.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_data_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_datetime.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_datetime64.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_datetimeindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_datetimelike.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_datetime_index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_date_range.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dbscan.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_decimal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_decomp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_decomp_cholesky.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_decomp_lu.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_decomp_update.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_defchararray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_defmatrix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_describe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_determinism.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_det_curve_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_device.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dialect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dict_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dict_learning.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dict_vectorizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_differentiable_functions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_differentiate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_direct.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_discrete_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_discrete_distns.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_discretization.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_discriminant_analysis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_disjoint_set.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_disk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_distance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_distributions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dist_metrics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dlpack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dltisys.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_doccer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_docs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_docstrings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_docstring_parameters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_docstring_parameters_consistency.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dok.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_downcast.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_downstream.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_drop_duplicates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dst.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dtypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dtypes_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dt_accessor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dummy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_duplicated.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_einsum.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_elliptic_envelope.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ellip_harm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_empty.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_enable_hist_gradient_boosting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_enable_iterative_imputer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_enable_successive_halving.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_encoders.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_encoding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_encryption.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_engines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_equals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_equivalence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_erfinv.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_errors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_errstate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_estimator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_estimator_checks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_eval.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ewm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_exec_plan.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_expanding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_expm_multiply.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_exponential_integrals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_export.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_expressions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extending.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extension.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extension_type.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extint128.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extmath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extract_array.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_extras.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_f2py2e.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_factor_analysis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_faddeeva.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fastica.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fast_gen_inversion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fblas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_feather.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_feature_hasher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_feature_select.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_figure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_file_buffer_url.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_file_handling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fillna.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_filter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_filters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_filter_design.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_finalize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_find_common_type.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_find_replace.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fir_filter_design.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fit.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fitpack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fitpack2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fixes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_flight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_flight_async.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_float.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fontconfig_pattern.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_font_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_forest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_formats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fortran.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_frame.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_frame_apply.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_frame_apply_relabeling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_frame_subplots.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_freq_attr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_freq_code.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_from_dict.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_from_dummies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_from_model.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_from_records.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_frozen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fsspec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ft2font.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_function.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_function_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_function_transformer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_func_inspect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gammainc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gandiva.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gaussian_mixture.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gcrotmk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gcs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gdb.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_generator_mt19937.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_generic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_getattr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_getitem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_getlimits.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_get_level_values.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_get_set.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_glm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gpc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gpr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_gradient_boosting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_graph.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_graphical_lasso.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_groupby.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_groupby_dropna.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_groupby_subclass.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_grouping.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_grower.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_half.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hashing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hashtable.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hausdorff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hdbscan.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_header.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_helper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hermite.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hermite_e.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hessian_update_strategy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hierarchical.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hierarchy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_highlight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_histogram.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_histograms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hist_box_by.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hist_method.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_holiday.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_html.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_http_headers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_huber.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hyp2f1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hypotests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_idl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_iforest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_iloc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_image.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_import.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_impute.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_incremental_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_indexers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_indexing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_indexing1d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_indexing_slow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_index_col.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_index_new.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_index_tricks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_inf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_inference.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_infer_dtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_integrate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_integrity.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interaction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interchange_spec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_internals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interpnd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interpolate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interpolation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interpolative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interval_pyarrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interval_range.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_interval_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_invalid_arg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_io.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ipc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_isfile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_isin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_isocalendar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_isomap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_isotonic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_isotonic_regression.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_item.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_item_selection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_iter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_iterative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_iterator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ivp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_iv_ratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_join.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_json.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_jsonschema.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_jsonschema_specifications.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_jsonschema_test_suite.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_json_table_schema.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_json_table_schema_ext_dtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_jvm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kde.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kdeoth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kdtree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kd_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kernels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kernel_approximation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kernel_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kernel_ridge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_knn.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_k_means.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_label.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_label_or_level_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_label_propagation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_laguerre.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lapack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lazyloading.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lbfgsb_setulb.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_least_angle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_least_squares.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_legend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_legend3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_legendre.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lexsort.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lfw.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lgmres.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_libalgos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_libgroupby.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_liboffsets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_libsparse.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_limited_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linalg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linear_assignment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linear_loss.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linesearch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_link.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linprog.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linsolve.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_linux.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_loadtxt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lobpcg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_loc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_locally_linear.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lof.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_logger.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_logical.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_logical_ops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_logistic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_longdouble.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_loss.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lsmr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lsqr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lsq_common.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_lsq_linear.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ltisys.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_machar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_managers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mangle_dupes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_map.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_marker.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_masked.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_masked_matrix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_matfuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mathtext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_matlib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_matmul_toeplitz.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_matplotlib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_matrix_io.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_max_len_seq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_maybe_box_native.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mds.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mean_shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_measurements.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_memleaks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_memmap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_memmapping.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_memory.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mem_overlap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mem_policy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_merge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_merge_asof.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_merge_cross.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_merge_index_as_string.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_merge_ordered.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metadata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metadata_routing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metaestimators_metadata_routing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_methods.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_milp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_minimize_constrained.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_minpack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_min_dependencies_readme.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mio5_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mio_funcs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mio_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_misc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_missing_multiprocessing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mixins.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mlab.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mlp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mman.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mmio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mocking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mock_violation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_module.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_modules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_monotonic_constraints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_monotonic_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_morestats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_morphology.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mpmath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mrecords.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mstats_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multiarray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multiclass.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multicomp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multiindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multioutput.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multivariate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multivariate_colormaps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_thread.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutual_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_naive_bayes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_names.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nanfunctions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nanops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nan_inputs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_na_scalar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_na_values.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ndarray_backed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ndgriddata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nditer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ndtr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ndtri_exp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nearest_centroid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_neighbors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_neighbors_pipeline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_neighbors_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nep50_promotions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nested_minimize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_netcdf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_network.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nlargest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nmf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nnls.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nonlin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_non_unique.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_nth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numba.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numeric.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numerictypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numeric_only.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numpy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numpy_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numpy_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numpy_pickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_numpy_version.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_object.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_odeint_jac.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_odf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_odswriter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_offsetbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_offsets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_old_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_old_ma.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_omp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_onenormest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_online.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_online_lda.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_openml.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_openpyxl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_operators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_optics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_optimize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_optional_dependency.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_orc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_orthogonal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_orthogonal_eval.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_osx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_other.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_overrides.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_packbits.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pade.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pairwise.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pairwise_distances_reduction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pandas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_parallel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_parameter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_parquet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_parquet_file.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_parquet_writer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_parse_dates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_partial_dependence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_partial_slicing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_passive_aggressive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patches.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_path.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patheffects.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pdtr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_peak_finding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_perceptron.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_period.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_periodindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_period_index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_period_range.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_permutation_importance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase16_patch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase57_58_integration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase9_safe_reinforcement.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase_101_sniper_integration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pipe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pipeline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pivot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_plot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_plotting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_plot_partial_dependence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pls.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_png.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pocketfft.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_polar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_polyint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_polynomial.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_polyutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_portfolio_optimizer_phase47.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_posix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pprint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_precision_recall_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_precompute_gammainc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_predictor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_predict_error_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_print.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_process.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_process_all.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_promote.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_propack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_protocols.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pseudo_diffs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_public_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_public_functions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pyf_src.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pyinstaller.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_python_parser_only.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_qcut.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_qhull.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_qmc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_qp_subproblem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quadpack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quadratic_assignment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quadrature.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quad_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quantile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_query_eval.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quiver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_quoting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_raises.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_random.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_randomstate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_randomstate_regression.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_random_projection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_range.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rank.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ranking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ransac.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rbf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rbfinterp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rbm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rcparams.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rcv1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reachibility.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_read.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_readers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_readlines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_read_errors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_read_fwf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_recfunctions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_records.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_referencing_suite.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_register_accessor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_regression.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reingold_tilford.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_relative_risk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reordering.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reorder_levels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_replace.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_repr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_resampler_grouper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_resample_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_resampling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_result_type.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_return_real.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rfe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rgi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ridge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_risk_engine.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_robust_covariance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_roc_curve_display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rolling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rolling_functions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rolling_quantile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rotation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_rotation_groups.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_round_trip.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_s3.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sag.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_samples_generator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sampling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sas7bdat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_savitzky_golay.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalarbuffer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalarmath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalarprint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalars.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalar_ctors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scalar_methods.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_schema.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scipy_version.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_score_objects.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_scripts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_search.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_seed_sequence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_select.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_select_dtypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_self_training.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_semicolon_split.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sensitivity_analysis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sequential.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_series_apply.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_setitem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_setops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_set_index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_set_output.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_set_value.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sf_error.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sgd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_shape_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_short_time_fft.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sici.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signaltools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_generation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_simd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_simd_module.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_simplification.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_skew.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_skiprows.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_slerp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_slice.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_slsqp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_monitor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smoke.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_solvers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_solve_toeplitz.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sorting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sort_index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sort_values.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spanning_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sparsefuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sparsetools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sparse_coordinate_descent.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sparse_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sparse_tensor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_special_matrices.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spectral.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spectral_embedding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spec_conformance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spherical_bessel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spherical_voronoi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sphinxext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sph_harm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_splines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_split.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_splitting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_split_partition.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_spss.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sputils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_sql.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_stacking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_stack_unstack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_stata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_stats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_store.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_str.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_streams.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_stride_tricks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_string.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_stringdtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_string_array.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_string_arrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_struct_accessor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_subclass.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_subclassing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_substrait.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_successive_halving.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_supervised.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_support_alternative_backends.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_survival.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_svds.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_svm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_svmlight_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_symbol.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_system.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_table.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tags.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_take.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tanhsinh.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_target.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_target_encoder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tensor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_text.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_textreader.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_theil_sen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ticker.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tightlayout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timedelta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timedelta64.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timedeltaindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timegrouper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timeseries_window.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timestamp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_timezones.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_time_grouper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_time_series.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tnc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tooltip.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_datetime.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_dict.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_dict_of_blocks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_excel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_frame.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_html.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_latex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_numeric.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_offset.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_period.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_string.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_time.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_timedelta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_to_xml.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_execution_flow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_transform.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_transforms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_transpose.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_traversal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_triangulation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trig.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_truncate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_truncated_svd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trustregion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tukeylambda_stats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tutorial.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_twodim_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_typedefs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_type_check.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_typing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_t_sne.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_udf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ufunc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ujson.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_umath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_umath_accuracy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_umath_complex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_unicode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_union_categoricals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_units.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_unsupervised.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_unsupported.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_upcast.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_upfirdn.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_usecols_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_user_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_usetex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validate_args.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validate_args_and_kwargs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validate_inclusive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validate_kwargs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_value_counts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_variation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_verbose.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_view.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_voting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_vq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_warm_start.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_warnings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_waveforms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_wavelets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_wavfile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_week.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_weight_boosting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_where.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_widgets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_windows.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_without_numpy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_writers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_xlrd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_xlsxwriter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_xml.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_xsf_cuda.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_zeros.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__basinhopping.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__datasource.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__differential_evolution.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__dual_annealing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__exceptions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__iotools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__linprog_clean_inputs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__numdiff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__pep440.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__procrustes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__root.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__shgo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__spectral.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__threadsafety.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test__version.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_meta_signal_harmonizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase46_portfolio_optimizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase47_completion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase47_integration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase55_56_ml_control_integration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase57_58_complete.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase63_completion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_82_83.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_91c_completion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_step7_smart_monitor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_copy_ystyle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_copy_zstyle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_debug_backends.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_hovertemplate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_hovertemplatesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_legacy_keywords.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_scipy_spectral_test_shim.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_template.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_templateitemname.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_templates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_test_decorators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_texttemplate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\_texttemplatesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\abc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\abstract.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\accessor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\accessors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\accumulate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\acero.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\actions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adapter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adapters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\afmLib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\after.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\agl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\alert.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\algorithms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\align.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\anchored_artists.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\android.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\angle_helper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\animation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\animation_demo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ansi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ansitowin32.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ansitowin32_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ansi_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\any_namespace.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\api_implementation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\appdirs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\appengine.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\apply.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\app_session.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\app_static_file_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\app_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_repair_simplified.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arithmetic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arpack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\array.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arraylike.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arrayprint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arrayTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\array_constructors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\array_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\array_ops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arrow_16597.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arrow_39313.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\arrow_parser_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\art3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\artist.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ascii_upper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\asizeof.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\asserters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ast.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\astype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\asyncio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\asyncio_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\async_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\as_string.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\audio_input.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\authlib_tornado_integration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auth_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auth_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\autocompletion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\autoreload.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\autoreload_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auxfuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\avar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\avarPlanner.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\AvifImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axes3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axes_grid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axis3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axislines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axisline_style.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\axis_artist.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_agg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_bases.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_cairo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_gtk3.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_gtk3agg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_gtk3cairo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_gtk4.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_gtk4agg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_gtk4cairo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_macosx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_managers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_mixed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_nbagg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_pdf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_pgf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_ps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_qt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_qt5.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_qtagg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_qtcairo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_svg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_tkcairo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_tools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_webagg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_webagg_core.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_wx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_wxagg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backend_wxcairo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\backports.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\balloons.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\basedatatypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\basePen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\basevalidators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\basewidget.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\base_command.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\base_component_registry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\base_connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\base_custom_component.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\base_parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bazaar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bccache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bdf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\BdfFontFile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\before.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\before_sleep.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bezier.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bezierTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bindings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\binning.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\BitmapGlyphMetrics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\blas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\Blocks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\BlpImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\BmpImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bokeh_chart.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bokeh_renderer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\boolean.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bootstrap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\box.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\boxplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bricks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\browser_websocket_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bsplines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\buf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\buffer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\builder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\build_env.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\built_in_chart_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\button.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\button_group.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bvls.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\byteordercodes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cached_message_replay.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_data_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_errors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_resource_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_storage_manager_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_storage_protocol.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_type.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cache_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\calibration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\callbacks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\camera_input.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\candidates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\canonical_constraint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\capi_maps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\caresresolver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cast.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\casting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\categorical.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\category.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cbook.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cb_rules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cells.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\CFF2ToCFF.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\CFFToCFF2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cfuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\channels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\chat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\chebyshev.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\check.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\checkbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\chunk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\circlerefs_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\classifyTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\class_weight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cli.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\clipboards.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cliTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cli_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cloudpickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cloudpickle_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cmap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cmd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cmdoptions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\code.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\codec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\collections.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\collector.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\color.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\colorbar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\colorizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\colors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\color_picker.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\color_scales.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\color_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\column.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\columns.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\column_config_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\column_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\command_context.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\commit.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\common.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\common_rules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compare.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compatibility_tags.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compiler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\completion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\component_arrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\component_registry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\component_request_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\comprehensive_repair_monitor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compressor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compressors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\compute.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\concat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\concurrent.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\concurrent_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\configTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\configuration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\config_init.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\config_option.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\config_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\conftest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\confusion_matrix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\connectionpool.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\connection_factory.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\console.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\constants.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\construction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\constructors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\container.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\context.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\contexts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\context_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\contingency.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\contour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\control.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\controller.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\convert.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\converter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\converters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cookies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\core.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cosine_cdf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\crackfortran.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\create_numpy_pickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\credentials.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\criterion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\css.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\csvs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cu2qu.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cu2quPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\curl_httpclient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cursor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\custom_component.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cvt_pyparsing_pep8_names.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\cython.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\C_B_D_T_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\C_F_F_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\C_O_L_R_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\c_parser_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\C_P_A_L_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\database.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dataframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dataframe_demo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dataframe_protocol.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dataframe_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dataset.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\data_editor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\data_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\datetimelike.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\datetimelike_accumulations.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\datetimes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\db.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\DcxImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\DdsImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\debug.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dechunk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\decision_boundary.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\deck.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\deck_gl_json_chart.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\decoder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\decorator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\decorators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\defchararray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\defmatrix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\delayed_queue.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\delta_generator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\delta_generator_singletons.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\deprecation_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\describe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\descriptor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\descriptor_pb2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\descriptor_pool.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\det_curve.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\diagnose.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dialog.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dialog_decorator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dictTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\diff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dim2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\direct_url.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\direct_url_helpers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dirsnapshot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\discovery.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\discriminant_analysis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\disk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dispatch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\display.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\distance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\distro.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\diverging.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\doc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\doccer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\docscrape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\docstrings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\doc_string.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dogbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\download.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\driver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dtypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dummy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dummy_cache_storage.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dviread.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\D_S_I_G_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\echo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\editable_legacy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\eexec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\einsumfunc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\element_tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_json_repair_v401.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_triage_orphan_eliminator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emoji.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\empty.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\encoding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\encryption.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\engines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\enhanced_hardlock_recovery.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\entrypoints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\enum_type_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\environment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\env_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\Epoch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\EpochConverter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\EpsImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\equality_constrained_sqp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\errors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\error_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\escape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\escape_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\estimator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\estimator_checks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\eval.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\events.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\event_based_path_watcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\event_debouncer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ewm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\excel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\exception.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\executor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\exec_code.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\expanding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\experimental_query_params.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\explicitClosingLinePen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\expn_asy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\exporter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\expr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\expressions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\expr_cat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\expr_str.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extbuild.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extending.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extending_distributions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extension.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extensions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extension_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extmath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\extras.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\E_B_D_T_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\E_B_L_C_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\f2py2e.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\f90mod_rules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\factory.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fake_renderer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fallback.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\feather.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\feather_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\features.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\featureVars.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fetch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fields.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\field_mask.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\figmpl_directive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\figure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\figureoptions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filenames.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filesystem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filewrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\file_cache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\file_uploader.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\file_uploader_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\file_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filterPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\filter_design.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fir_filter_design.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\FitsImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fixedTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fixes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\flags.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\floating.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\folder_black_list.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fontBuilder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\FontFile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\font_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fork_exec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\form.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\formatter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\format_control.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\form_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\forward_msg_cache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\forward_msg_queue.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\found_candidates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\FpxImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fragment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\frame.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\framework.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\freetypePen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\freeze.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\frequencies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fromnumeric.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\from_dataframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\frozen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fsevents.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fsevents2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\FtexImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fun.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\func2subr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\function.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\functions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\function_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\func_inspect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fuzz_validate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\F__e_a_t.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gammainc_asy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gammainc_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gbq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\GbrImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\generic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gen_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\geo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\geometry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\getlimits.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\GifImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\GimpGradientFile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\git.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\git_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\glibc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\glifLib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\glm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\globals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gpos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gradient_boosting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\graph.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\graphviz_chart.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\gridspec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\grid_finder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\groupby.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\grouper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\grower.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\G_P_K_G_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\G__l_a_t.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\G__l_o_c.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hash.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hashes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hashing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hashPointPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hatch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hb.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hdbscan.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\head.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\heading.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\help.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\helpers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hermite.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hermite_e.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hierarchy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\highlighter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hist.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\holiday.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hooks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\html.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\http1connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\http1connection_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\httpclient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\httpclient_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\httpserver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\httpserver_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\httputil.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\httputil_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hvar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hyp2f1_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\IcnsImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\IcoImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\icon_cache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\idtracking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\iframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\image.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageCms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageColor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageDraw.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageDraw2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageEnhance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageFile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageFilter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageFont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageGrab.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageMath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageMode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageMorph.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageOps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImagePalette.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageQt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageShow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageStat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageTk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImageWin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\image_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\import_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\imshow_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ImtImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\indenter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\indexing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\index_command.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inference.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\initialise_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\initializers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inotify.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inotify_buffer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inotify_c.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inset.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inset_locator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\inspect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\install.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\installation_report.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\installed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\instance_generator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\integer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\integrated_smart_monitor_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\integrate_recovered_modules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolatable.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolatableHelpers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolatablePlot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolatableTestContourOrder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolate_layout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interpolative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\interval.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\introspect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\in_memory_cache_storage_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\io.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ioloop.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ioloop_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\iostream.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\iostream_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ipc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\IptcImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\isatty_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\isoparser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\isotonic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\iterative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\iup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ivp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\Jpeg2KImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\JpegImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\json.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\jsonschema.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\json_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\js_number.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\jupyter_chart.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\jvm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kernels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kernel_approximation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kernel_ridge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kerning.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kqueue.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\laguerre.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lambertw.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lapack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\layer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\layout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\layouts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\layout_engine.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\layout_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lazy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\least_squares.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\legacy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\legend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\legendre.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\legend_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lexer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lgmres.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\linalg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\link.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\linsolve.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\list.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\loader.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\loaders.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lobpcg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\locale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\localization.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\local_component_registry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\local_disk_cache_storage.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\local_script_runner.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\local_sources_watcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\locators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lock.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\locks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\locks_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\log.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\loggamma.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\logger.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\logging.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\loggingTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\logo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\log_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\loose.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\loss.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\low_level.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lsmr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lsoda.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lsqr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lsq_linear.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ltisys.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lti_conversion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\L_T_S_H_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macRes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macUtils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\magic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\magic_funcs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\main.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\main_parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\managers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\manifest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\map.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mapping_demo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\markdown.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\markers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\markup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\masked.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\masked_accumulations.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\masked_reductions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mathmpl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mathtext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\matlib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\md.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mean_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\measure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\media.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\media_file_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\media_file_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\media_file_storage.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\melt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\memmap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\memory.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\memory_media_file_storage.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\memory_session_storage.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\memory_uploaded_file_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mercurial.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\merge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\merger.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\message.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\message_factory.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\message_listener.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\meta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metadata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metadata_editable.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metadata_legacy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metadata_routing_common.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metaestimators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\methods.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metric.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\metrics_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mimebundle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\minimize_trustregion_constr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\minres.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\missing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mixins.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mlab.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mman.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mock_backend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\models.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\momentsPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mpltools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mpl_renderer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\MpoImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mpsig.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mrecords.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\MspImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mstats_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mt5_order_executor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multiarray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multiclass.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multioutput.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multiselect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multiVarStore.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutable_status_container.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mypy_plugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\M_E_T_A_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\naive_bayes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\names.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\nanops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\nap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\navigation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\nested_schemas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\netutil.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\netutil_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\net_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\nodes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ntlmpool.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numba_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\number_input.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numeric.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numerictypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numpy_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numpy_pickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numpy_pickle_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\numpy_pickle_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\oauth_authlib_routes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\objcreator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\objects.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\object_array.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\offline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\offsetbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\oidc_mixin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\omega_system_reconstruction_fixed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\online.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\optim.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\optimize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\optimizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\optional_imports.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\options.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\options_selector_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\options_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\orc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ordered.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\otBase.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\otConverters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\otTables.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\otTraverse.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\overrides.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\O_S_2f_2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\package_finder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\packaging.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\padding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\page.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pages_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\page_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pairwise.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\palette.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PalmImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pandas_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pandas_examples.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pandas_styler_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pandas_threaded_import.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\panel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\parallel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\params.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\parquet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\partial_dependence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\patches.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\path.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\patheffects.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\path_watcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\patterns.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PcfFontFile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PcxImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PdfImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PdfParser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\period.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_94_dependency_fingerprint_verifier.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_completion_validator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_focused_validator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_validator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_completion_validator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_1_completion_validator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_1_mt5_indicator_scanner.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_architect_validator_full.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_step_2_regenerate_core.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_step_3_flush_logs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_step_4_verify_fingerprint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_step_5_prompt_architect_validator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_step_5_simplified.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pickle_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pipeline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pivot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pkg_resources.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plistlib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plotly_chart.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plotting_demo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plot_directive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\plugin_registry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\png.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PngImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\polar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\policies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\polling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\polling_path_watcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\polynomial.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\polyutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pool.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\poolmanager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\popen_loky_posix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\popen_loky_win32.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PpmImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\precision_recall_curve.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\predictor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\prepare.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pretty.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\print_coercion_tables.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\probe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\problem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\process.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\process_executor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\process_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\process_watcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\progress.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\progress_bar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\progress_bars.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\projections.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\prompt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\properties.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\proto.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\protocol.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\protocols.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\proto_builder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\proto_text.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\provider.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\providers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\proxy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\proxy_metaclass.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\psCharStrings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PsdImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\PSDraw.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\psLib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\psOperators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\putmask.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\py23.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pylock.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pylupdate_main.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pyopenssl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pyplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pyproject.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pyrcc_main.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pytables.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\python.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\python_message.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\python_parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pyuic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qaxcontainer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qobjectcreator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\QoiImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qp_subproblem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qscintilla.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtcharts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtprintsupport.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtproxies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtquickwidgets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtwebenginewidgets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qtwebkit.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qt_compat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qu2cu.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qu2cuPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\qualitative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\quantile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\quartzPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\query_params.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\query_params_proxy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\queues.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\queues_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\quiver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\radau.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\radio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\random_projection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\range.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rcsetup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\readers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\read_directory_changes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rebuild.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\recfunctions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\recordingPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\records.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reduce.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reduction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reference.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\registry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\regression.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\relativedelta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\remote.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\removeOverlaps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\renderer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reorderGlyphs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\replace.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reporter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reporters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reportLabPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\repr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\request.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\requirements.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\req_command.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\req_dependency_group.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\req_file.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\req_install.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\req_set.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\req_uninstall.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\resample.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reshape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reshaping.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\resolution.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\resolver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\resources.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\resource_tracker.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\results.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\retrieval.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\retry.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reusable_executor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reverseContourPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\roc_curve.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\roles.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rolling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\root.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\roundingPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\roundTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\routes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\routing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\routing_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rrule.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rule.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\rules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\runtests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\runtime.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\runtime_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\runtime_version.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\run_smart_monitor_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\run_with_timeout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\safe_session_state.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sample.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sandbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sankey.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sas7bdat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sasreader.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sas_xport.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\save.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sbixGlyph.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sbixStrike.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\scalars.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\scale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\scaleUpem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\scanner.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\schema.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\schemapi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\scipy_sparse.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\scope.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\Scripts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\script_cache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\script_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\script_requests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\script_runner.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\script_run_context.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sdist.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\search.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\search_scope.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\secrets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\securetransport.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\segment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\selectbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\selection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\selection_prefs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\selectn.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\select_slider.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\self_outdated_check.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\serialize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\serializers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\series.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\series_dt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\series_list.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\series_str.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\server.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\server_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\service_reflection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\session.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sessions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\session_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\session_state.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\session_state_proxy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\setitem.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\setuptools_build.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sfnt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\SgiImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\shapeannotation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\shapes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\shape_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\shell_completion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\show.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signaltools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_feed_generator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\simple.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\six.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\slider.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\snow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\snowflake_connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\snowpark_connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\socks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sorting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sources.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\source_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sparsefuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spawn.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\specializer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\specifiers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spectral.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sphinxext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\SpiderImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spinner.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spinners.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\split.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\spss.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sql.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sql_connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ssltransport.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ssl_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ssl_match_hostname.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sstruct.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\stat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\stata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\statisticsPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\statNames.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\stats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\stats_request_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\status.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\status_codes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\stop.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\StrConverter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\stream.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\streamlit_app.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\streamlit_callback_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\streamlit_plotly_theme.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\streamplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\string.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\string_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\string_arrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\string_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\structs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\structures.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\struve_convergence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\style.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\styled.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\style_render.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\subcomponents.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\subplots.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\subprocess.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\subtitle_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\subversion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\sum_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\SunImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\svg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\svgPathPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\symbolic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\symfont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\synchronize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\syntax.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\S_I_N_G_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\S_V_G_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\S__i_l_f.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\table.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tables.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\table_builder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tags.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\take.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\target_python.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tcpclient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tcpclient_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tcpserver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tcpserver_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\teePen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\termui.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\testing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\testing_refleaks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\testing_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\testTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\testutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\texmanager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\text.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\textpath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\textTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\text_encoding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\text_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\text_widgets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tfmLib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\theme.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\threadpoolctl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ticker.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\TiffImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\TiffTags.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\timedeltas.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\timeout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\times.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\timeseries.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\timestamp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\timeTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\time_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\time_widgets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\toast.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\token.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tornadoweb.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\to_dict.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\traceback.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\transform.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\transformPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\transforms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\translate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\treeTools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trf_linear.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tr_interior_point.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ttCollection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ttFont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ttGlyphPen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ttGlyphSet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ttProgram.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ttx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\TupleVariation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\twisted.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\twisted_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\type_checkers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\type_checking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\type_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\typing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\typing_extensions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tzfile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\tzinfo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\T_S_I__0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\T_S_I__1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\T_S_I__5.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ufo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ufunclike.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ufunc_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\uiparser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\unbuilder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\unicode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\uninstall.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\unistring.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\UnitDbl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\UnitDblConverter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\units.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\unix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\unpacking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\uploaded_file_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\upload_file_request_handler.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\url.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\url_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\user_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\use_rules.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\util_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\validators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\validator_cache.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\variableScalar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\varStore.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\var_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\vector.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\vega_charts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\vega_renderer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\verify_live_deployment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\versioncontrol.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\view_state.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\virtualenv.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\voltToFea.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\vq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\V_D_M_X_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\V_O_R_G_.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wait.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\WalImageFile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\watchmedo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\waveforms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wavelets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wavfile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\weakref_finalize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\web.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\WebPImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\websocket.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\websocket_headers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\websocket_session_manager.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\websocket_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\web_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\well_known_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wheel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wheel_builder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wheel_editable.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wheel_legacy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\widget.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\widgets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\width.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\win.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\winapi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\window.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\windows.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\winterm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\winterm_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wire_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\WmfImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\woff2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wrightomega.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wright_bessel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wright_bessel_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\write.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wsgi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wsgi_examples.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\wsgi_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\xml.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\xmlReader.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\xmlrpc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\XVThumbImagePlugin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\zetac.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_2d_density.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_a.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_a0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_aaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_accesstoken.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_active.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_activebgcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_activecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_activeselection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_activeshape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_add.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_addsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_add_docstring.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_add_newdocs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_add_newdocs_scalars.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_affinity_propagation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_afm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_agglomerative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_aliases.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_align.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_alignmentgroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_alignsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_allowoverlap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_alphahull.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ambient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_anchor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_angle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_angleref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_anglesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_angularaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_annotated_heatmap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_annotation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_annotationdefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_annotations.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_appengine_environ.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arffread.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arff_parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_args.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_args2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrangement.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_array.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arraydtick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrayminus.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrayminussrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arraypad_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arraysetops_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arraysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrayterator_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arraytick0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arraytools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_array_api.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_array_api_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_array_api_no_0d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_array_like.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_array_utils_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrowcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrowhead.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrowlen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrowside.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrowsize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrowwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_arrow_string_mixins.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_asarray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_aspectmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_aspectratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_asrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_at.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_attrs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_atype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autobinx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autobiny.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autocolorscale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autocontour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autoexpand.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_automargin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autorange.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autorangeoptions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autoshift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autosize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autotickangles.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_autotypenumbers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ax.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_axes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_axis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_axis_nan_policy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_axref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ay.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ayref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_a_v_a_r.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_b.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_b0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backend_gtk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backend_pdf_ps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backend_tk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backgroundcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backoff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_backoffsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bagging.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bandwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_barcornerradius.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bargap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bargroupgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_barmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_barnorm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_barpolar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bary_rational.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_base.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_baseframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_baseratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_basesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_base_connection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_base_renderers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_basic_backend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_basinhopping.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_baxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bayes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bayesian_mixture.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bearing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_below.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bgcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bgcolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bicluster.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bingroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_binned_statistic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_binomtest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_birch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bisect_k_means.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_blocking_input.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bordercolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bordercolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_borderpad.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_borderwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_box.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_boxgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_boxgroupgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_boxmean.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_boxmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_boxpoints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bracket.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_branchvalues.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bsplines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bsr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_btype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_build_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bullet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bundlecolors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_button.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_buttondefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_buttons.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bvp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_bws_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_byteordercodes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_c.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_calamine.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_calendar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_california_housing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_camera.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_candlestick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_caps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_captureevents.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_carpet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_categoryarray.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_categoryarraysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_categoryorder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cauto.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_caxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ccallback.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cells.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_censored_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_center.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_chandrupatla.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_chart_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cheaterslope.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cheatertype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_choropleth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_choroplethmap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_choroplethmapbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_chunking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_circle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_classes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_classification.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_classification_threshold.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_clickmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_clicktoshow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_clipmax.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_clipmin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cliponaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_close.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_closesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cluster.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cmax.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cmd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cmid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cmin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cmp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coastlinecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coastlinewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cobyla_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cobyqa_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_codata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_collections.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_color.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coloraxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorbar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coloring.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colormodel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorscale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorscaledefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorscales.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_colorway.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_column.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_columnorder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_columnordersrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_columns.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_columnwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_columnwidthsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_column_transformer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_complex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_compressed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_computed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cone.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_config.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_configtool.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_connectgaps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_connector.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_constrain.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_constrained_layout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_constraintext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_constraintoward.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_constraintrange.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_constraints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_construct.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_continuous_distns.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_contour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_contourcarpet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_contours.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coordinates.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_coordinate_descent.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_core.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cornerradius.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_count.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_countrycolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_countrywidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_counts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_countssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_county_choropleth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_covariance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_covtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_crosstab.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_csc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_csr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_csrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ctypeslib.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cubature.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cubic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_cumulative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_currentbin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_currentvalue.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_customdata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_customdatasrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_czt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_c_m_a_p.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_c_v_t.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_da.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dash.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dashsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dask.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_datarevision.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_datasource.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_db.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dbscan.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dcsrch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_cholesky.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_ldl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_lu.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_qr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_qz.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_schur.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decomp_svd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decorators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_decreasing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_delaunayaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_delegation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_delegators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_delta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dendrogram.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_densitymap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_densitymapbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_deprecations.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_depthfade.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dfi_types.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dia.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_diagonal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dict_learning.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dict_vectorizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_differentiable_functions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_differentialevolution.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_differentiate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_diffuse.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dimensiondefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dimensions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_direction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_direct_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_discrete_distns.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_discretization.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_disjoint_set.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dispatcher.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_displayindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_distance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_distn_infrastructure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_distplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_distribution_infrastructure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dists.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_distutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_diverging.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dividercolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dividerwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dlabel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_doc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_docscrape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_docstring.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_doctools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dok.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_domain.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_download_all.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dragmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_drawdirection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtheta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtickrange.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtype_ctypes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dtype_like.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dual_annealing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_duration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dvalue.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_dy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_easing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_east.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_edgeshape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_editable.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_editrevision.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_elementwise.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_elementwise_iterative_method.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_elffile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_elliptic_envelope.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ellip_harm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_empirical_covariance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_enabled.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_encode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_encoders.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_end.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_endline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_endlinecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_endlinewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_entropy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_entrywidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_entrywidthmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_envs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_error_x.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_error_y.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_error_z.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_exceptions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_execute.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_expm_frechet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_expm_multiply.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_exponentformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_export.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_expression_parsing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extendfunnelareacolors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extendiciclecolors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extendpiecolors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extendsunburstcolors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extendtreemapcolors.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extension.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_extract.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_eye.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_facecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_facecolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_facenormalsepsilon.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_facet_grid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_factories.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_factor_analysis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_family.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_familysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fastica.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_featureidkey.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_feature_agglomeration.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fetchers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fft.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fftlog.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fftlog_backend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fgcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fgcolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fgopacity.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_figure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_figurewidget.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fill.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fillcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fillgradient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fillmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fillpattern.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fillrule.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_filters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_filter_design.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_finite_differences.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fir_filter_design.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fit.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fitbounds.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fitpack2.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fitpack_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fitpack_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fitpack_repro.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fixedrange.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_flatshading.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_flip.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_font.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fontconfig_pattern.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_forest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_format.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_formatsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_format_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_formlayout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fortran.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fourier.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_framecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_frames.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_framewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fresnel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_from_model.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_frozen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funcs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_function_base_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_function_transformer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funnel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funnelarea.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funnelareacolorway.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funnelgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funnelgroupgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_funnelmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_f_p_g_m.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_f_v_a_r.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gantt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gauge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gaussian_mixture.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gauss_kronrod.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gauss_legendre.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gb.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gcrotmk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gcutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_genz_malik.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_geo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_geojson.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_geometric_slerp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_globals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gpc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gpr.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gradient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_graph.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_graph_lasso.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_grid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gridcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_griddash.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gridshape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_gridwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_group.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_groupclick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_groupnorm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_groups.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_grouptitlefont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_g_l_y_f.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_g_v_a_r.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hash.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_header.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_heatmap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_height.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_helpers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hessian_update_strategy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hexbin_mapbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hiddenlabels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hiddenlabelssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hidesources.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hidesurface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_high.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_highlight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_highlightcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_highlightwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_highsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_highs_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_histfunc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_histnorm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_histogram.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_histogram2d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_histogram2dcontour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_histograms_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hole.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hovercolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hovercolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoverdistance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoverinfo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoverinfosrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoverlabel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hovermode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoveron.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoverongaps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hoversubplots.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hovertext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hovertextsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_html.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_huber.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hypotests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_h_d_m_x.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_h_e_a_d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_h_h_e_a.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_h_m_t_x.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_i.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_icicle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_iciclecolorway.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_icon.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_iconsize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_idl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ids.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_idssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_iforest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_imag.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_image.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_imagedefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_images.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_imaginaryaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_imagsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_implementation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_importers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_imshow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_include.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_includesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_increasing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_incremental_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_indentation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_index.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_indexing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_index_tricks_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_indicator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_insiderange.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_insidetextanchor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_insidetextfont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_insidetextorientation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_inspect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_intensity.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_intensitymode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_intensitysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_internal_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_interpolate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_interpolation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_in_process.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_io.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_iotools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_isomap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_isomax.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_isomin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_isosurface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_isotonic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_isrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_itemclick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_itemdoubleclick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_itemsizing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_itemwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_iterative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_j.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_jaraco_text.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_jitter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_json.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_jsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_k.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_kaleido.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_kddcup99.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_kde.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_kdtree.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_kernel_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_keywords.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_kmeans.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_knn.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ksrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ksstats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_k_e_r_n.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_l.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_label.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_label0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelalias.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelangle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelfont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelpadding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelprefix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelside.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_labelsuffix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_label_propagation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lakecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lambertw.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_landcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_laplacian.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lataxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_latsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_layer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_layerdefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_layers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_layout.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_layoutgrid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lazy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lbfgsb_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lda.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_leaf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_least_angle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lebedev.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_legend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_legendgroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_legendgrouptitle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_legendrank.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_legendwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_len.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lenmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_level.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lfw.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lighting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lightposition.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lil.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linalg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_line.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linear_loss.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lineposition.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linepositionsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linesearch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_link.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog_doc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog_highs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog_ip.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog_rs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog_simplex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_linprog_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lint_dependency_groups.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_locally_linear.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_locationmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_locations.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_locationssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lof.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_log.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_logistic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_logsumexp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_log_render.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lon.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lonaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lonsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_low.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lowerfence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lowerfencesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lowsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ltisys.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_lti_conversion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_l_o_c_a.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_machar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_macos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_magics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_make.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mannwhitneyu.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_manylinux.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_map.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mapbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_margin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_marker.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_markers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_matches.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_matfuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_matfuncs_inv_ssq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_matfuncs_sqrtm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mathtext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mathtext_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_matrix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_maxallowed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_maxdepth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_maxdisplayed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_maxpoints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_maxzoom.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_max_len_seq.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mds.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mean.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_meanline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_meansrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mean_shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_measure.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_measurements.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_measuresrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_median.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mediansrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_memmapping_reducer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mesh3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_meson.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_meta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_metadata_requests.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_metasrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_method.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_methods.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mgc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_milp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_min.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minallowed.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minexponent.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minimize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minorgridcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minorgridcount.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minorgriddash.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minorgridwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minorticklen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minpack_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minreducedheight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minreducedwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minsize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_minzoom.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mio4.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mio5.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mio5_params.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_miobase.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mirror.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_misc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mixins.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mmio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mocking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_modebar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_models.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_morestats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_morphology.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mptestutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mstats_basic.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mstats_extras.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_multiarray_umath.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_multicomp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_multilayer_perceptron.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_multiselect.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_multiufuncs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_multivariate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_musllinux.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mutual_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_mvt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_m_a_x_p.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_name.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_namelength.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_namelengthsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nanfunctions_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nbinsx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nbinsy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ncontours.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ndbspline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ndgriddata.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nearest_centroid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_netcdf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_newselection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_newshape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_newton_solver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_new_distributions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_next_gen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ni_support.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nmf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nnls.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_node.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nonlin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_norm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_normalize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_north.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_notched.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_notchspan.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_notchspansrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_notchwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_npyio_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_nticks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_number.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_numdiff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_n_a_m_e.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_oceancolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_odds_ratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_odepack_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_odfreader.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_odrpack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_odswriter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_offset.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_offsetgroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_offsetsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ohlc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_olivetti_faces.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_omp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_onenormest.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_opacity.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_opacityscale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_opacitysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_open.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_openml.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_openpyxl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_opensrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_openssl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_operation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_optics.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_optimize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_optional.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_optional_dependencies.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_orca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ordering.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_orientation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_orthogonal.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_outliercolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_outlierwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_outlinecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_outlinewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_outsidetextfont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_overlaying.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_packing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pad.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_padding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pade.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_page_trend_test.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_paper_bgcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parallels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parallel_backends.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_param_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parcats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parcoords.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parents.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parentssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_parser.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_partial_dependence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_passive_aggressive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_path.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pathbar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pattern.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_peak_finding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pep440.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_perceptron.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_period.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_permutation_importance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pickle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pie.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_piecolorway.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pip_wrapper.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pitch.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_placement.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_plot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_plotting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_plotutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_plot_bgcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pls.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pocketfft.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pointpos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_points.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_polar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_polybase.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_polyint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_polynomial.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_polynomial_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_position.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_posix_reduction.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pprint.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_prefix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_prefixsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_print_versions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_probability_distribution.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_procrustes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_project.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_projection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_psaix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_psbsd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pseudo_diffs.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pslinux.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_psosx.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_psposix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pssunos.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pswindows.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pull.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pullsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pylab_helpers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pytesttester.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pyxlsb.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_p_o_s_t.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_q1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_q1src.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_q3.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_q3src.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_qap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_qmc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_qmvnt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_quadpack_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_quadrature.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_quad_vec.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_quantile.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_quartilemethod.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_quiver.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_r.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_r0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_radialaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_radius.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_radiussrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_range.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangebreak.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangebreakdefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangebreaks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangefont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangemode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ranges.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangeselector.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rangeslider.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ranking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ransac.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rbf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rbfinterp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rbm.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rcv1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_real.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_realaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_realsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_realtransforms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_reference.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_regression.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_relative.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_relative_risk.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_remove.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_removesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_remove_redundancy.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_renderers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_request_methods.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_resampling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_resolution.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_response.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_reversescale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rfe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rgi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ridge.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rivercolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_riverwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_robust_covariance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_roll.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_root.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_root_scalar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rotation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rotation_groups.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rotation_spline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_roughness.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_row.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_roworder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rows.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_rsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sag.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_samples_generator.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sampling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sankey.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_savitzky_golay.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scaleanchor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scalegroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scalemode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scaleratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scatter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scatter3d.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattercarpet.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattergap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattergeo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattergl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattermap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattermapbox.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattermode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scatterplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scatterpolar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scatterpolargl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scattersmith.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scatterternary.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scene.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scimath_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scope.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_scorer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sdmultiple.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sdsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_search.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_search_successive_halving.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_secondary_axes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sector.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selectdirection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selected.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selectedpoints.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selectiondefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selectionrevision.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_selections.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_self_training.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sensitivity_analysis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_separatethousands.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_separators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sequential.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sequentialminus.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_set_output.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shadow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shadowsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shape.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shapedefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shapes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shapesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shape_base_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shgo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_short_time_fft.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_show.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showactive.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showarrow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showaxeslabels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showbackground.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showcoastlines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showcountries.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showdividers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showexponent.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showgrid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showlabels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showlakes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showland.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showlegend.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showlines.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showlowerhalf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showocean.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showrivers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showscale.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showspikes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showsubunits.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showticklabels.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showtickprefix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showticksuffix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showupperhalf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_showwhiskers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_show_versions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_shrunk_covariance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_side.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_signaltools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_simplify.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_size.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizemin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizemode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizeref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizey.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sizing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sketches.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_slices.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_slider.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sliderdefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sliders.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_slsqp_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_smith.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_smoothing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_solidity.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_soliditysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_solvers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sort.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sortpaths.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_source.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sourceattribution.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sourcelayer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sourcesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sourcetype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_south.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spaceframe.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_span.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spanmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sparse_pca.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_special_matrices.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_special_sparse_arrays.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_species_distributions.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spectral.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spectral_embedding.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spectral_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_specular.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spfun_stats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spherical_bessel.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spherical_voronoi.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikedash.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikedistance.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikemode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikesides.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikesnap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spikethickness.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_spline_filters.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_split.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_splom.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sputils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_squarifyratio.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_src_pyf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stack.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stackgaps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stackgroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stacking.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_standoff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_standoffsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_start.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_startarrowhead.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_startarrowsize.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_startline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_startlinecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_startlinewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_starts.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_startstandoff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stats_mstats_common.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stats_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_step.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stepdefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stepmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_steps.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stepsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stochastic_gradient.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stochastic_optimizers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stop.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_store_backends.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stream.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_streamline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_streamtube.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stride_tricks_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_string_helpers.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_structures.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_style.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_stylesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_subplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_subplots.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_subtitle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_subunitcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_subunitwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_suffix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_suffixsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_suite.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sum.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sunburst.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sunburstcolorway.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_supervised.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_support_alternative_backends.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_surface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_surfaceaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_surfacecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_surfacecolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_survival.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_svdp.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_svds.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_svds_doc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_svmlight_format_io.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_swatches.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_symbol.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_symbolsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_symmetric.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_sysconfig.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_s_b_i_x.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_t.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_table.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_table_schema.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tags.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tanhsinh.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_target.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_targetsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_target_encoder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_termui_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ternary.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ternary_contour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tester.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_testing.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_testutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_text.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textangle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textcase.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textcasesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textfont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textinfo.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textposition.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textpositionsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_textsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_theil_sen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_theta.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_theta0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_thetasrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_thetaunit.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_thickness.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_thicknessmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_threadsafety.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_threshold.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tick0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickangle.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickfont.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickformatstopdefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickformatstops.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelindex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelindexsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabeloverflow.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelposition.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelshift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelstandoff.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklabelstep.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticklen.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickprefix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticks.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickson.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticksuffix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticktext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ticktextsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickvals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickvalssrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tickwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tiling.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tilt.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_title.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tnc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_token.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tokenizer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_totals.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tracegroupgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_traceorder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_traceref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tracerefminus.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_traces.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_transformed_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_transition.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_translate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_transpose.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_treemap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_treemapcolorway.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_triangulation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tricontour.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_triinterpolate.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tripcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_triplot.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trirefine.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trisurf.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tritools.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_truncated_svd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trustregion.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trustregion_dogleg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trustregion_exact.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trustregion_krylov.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_trustregion_ncg.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tstutils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_tukeylambda_stats.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_twenty_newsgroups.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_twodim_base_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_type.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_type1font.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_typesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_type_check_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_t_sne.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_u.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ufunclike_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_uhoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_uid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_uirevision.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_uniformtext.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_unique.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_univariate_selection.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_unselected.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_unsupervised.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_up.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_updatemenu.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_updatemenudefaults.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_updatemenus.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_upfirdn.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_upperfence.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_upperfencesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_usecolormap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_user_array_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_user_interface.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_usrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_util.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_utils.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_utils_impl.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_v.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_validation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_validators.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valign.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_value.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valueformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valuehoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valueminus.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_values.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valuesrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valuessrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_valuesuffix.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_variance_threshold.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_variant.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_variantsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_variation.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vegafusion_data.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_version_info.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vertex.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vertexcolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vertexcolorsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vertexnormalsepsilon.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vhoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_violin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_violingap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_violingroupgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_violinmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_visible.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_volume.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_voting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_v_h_e_a.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_w.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_warnings.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_waterfall.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_waterfallgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_waterfallgroupgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_waterfallmode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_waveforms.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_wavelets.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_weight.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_weightsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_weight_boosting.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_west.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_whiskerwidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_whoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_width.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_widthsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_wilcoxon.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_win32_console.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_winconsole.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_windows.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_wrap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_writer.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_wsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_x.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_x0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_x0shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_x1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_x1shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xanchor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xaxes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xbingroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xbins.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xcalendar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xclick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xgap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xhoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xlrd.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xlsxwriter.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xpad.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xperiod.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xperiod0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xperiodalignment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xshift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xside.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xsizemode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_xtype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_y.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_y0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_y0shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_y1.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_y1shift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yanchor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yaxes.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ybingroup.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ybins.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ycalendar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yclick.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ygap.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yhoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ypad.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yperiod.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yperiod0.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yperiodalignment.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yref.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yshift.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_yside.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ysizemode.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ysrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_ytype.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_z.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zauto.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zaxis.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zcalendar.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zeroline.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zerolinecolor.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zerolinewidth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zeros_py.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zhoverformat.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zmax.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zmid.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zmin.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zoom.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zorder.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zsmooth.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_zsrc.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\__config__.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\__init__.py",
    "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\__pip-runner__.py",
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_engine.py",
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase_50_execution_loop_telemetry.py",
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_engine.py",
    "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategy_mutation_logic_engine.py",
    ".venv\\Lib\\site-packages\\streamlit\\commands\\execution_control.py"
  ],
  "institutional_channels": {
    "EXECUTION_CHANNEL": [
      "advanced_signal_optimization_engine.py",
      "autonomous_order_executor.py",
      "auto_execution_manager_quarantined.py",
      "backtest_dashboard_module.py",
      "broker_rule_sync_telemetry_widget.py",
      "dashboard.py",
      "dashboard_engine.py",
      "dashboard_frontend.py",
      "dashboard_linkage_patch.py",
      "dashboard_widgets.py",
      "debug_telemetry_events.py",
      "eventbus_compliance_fingerprint_sync.py",
      "execution_control_core.py",
      "execution_dashboard.py",
      "execution_dispatcher.py",
      "execution_engine.py",
      "execution_engine_orchestrator.py",
      "execution_engine_v3_phase66.py",
      "execution_flow_controller.py",
      "genesis_advanced_tkinter_ui.py",
      "genesis_boot_test.py",
      "genesis_cleanup_engine_v3.py",
      "genesis_compliance_core.py",
      "genesis_dashboard_ui_live_sync.py",
      "genesis_dependency_validator.py",
      "genesis_final_system_validation.py",
      "genesis_gui_launcher.py",
      "genesis_installer_builder.py",
      "genesis_integrity_auditor.py",
      "genesis_launcher.py",
      "genesis_trade_engine.py",
      "hardened_event_bus.py",
      "institutional_signal_validator.py",
      "kill_switch_compliance.py",
      "launch_dashboard.py",
      "module_recovery_engine.py",
      "mt5_adapter.py",
      "mt5_bridge_test.py",
      "mt5_connection_bridge.py",
      "mt5_connector_stub.py",
      "mt5_sync_adapter.py",
      "pattern_meta_strategy_engine.py",
      "phase51_eventbus_compliance_fingerprint_sync.py",
      "phase61_compliance_validation_engine.py",
      "phase_50_execution_loop_telemetry.py",
      "phase_92a_complete_dashboard.py",
      "phase_92a_live_dashboard.py",
      "phase_93_telemetry_enforcer.py",
      "self_healing_strategy_engine.py",
      "signal_bias_dashboard.py",
      "signal_historical_telemetry_linker.py",
      "signal_loop_reinforcement_engine.py",
      "signal_loop_reinforcement_engine_step8.py",
      "signal_validator.py",
      "strategy_mutation_logic_engine.py",
      "strategy_recalibration_engine.py",
      "strategy_recommender_engine.py",
      "telemetry_dashboard.py",
      "validate_dashboard_engine.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_backtest_engine.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_indicator_scanner.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_indicator_scanner_fixed.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_signal_refinement_engine.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer_fixed.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_mutation_logic_engine.py",
      "QUARANTINE_DUPLICATES\\indicator_scanner_fixed_corrupted.py",
      "QUARANTINE_DUPLICATES\\signal_refinement_engine_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backtest_explorer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\launch_phase18_production.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\live_backtest_comparison_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase13_event_subscriber.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_final_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_signal_pipeline_stress_tester.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase47_live_feed_sync_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase47_portfolio_optimizer_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase53_54_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase59_60_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase61_62_test_suite.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase62_audit_resilience_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\resolve_phase13_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_auto_repair_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\simple_smart_monitor_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_architect_compliant_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_comprehensive_smart_monitor_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_deadlock_debugger.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_smart_monitor_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_adaptiveexecutionresolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_advancedpatternminer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_architect_compliant_broker_discovery.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_BacktestEngine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_brokerdiscoveryengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dsrstrategymutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionenvelopeengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionenvelopeharmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionflowtest.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionloopresponder.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ExecutionPrioritizationEngine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionrisksentinel.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_executionselector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_envelope_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_envelope_engine_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_feedback_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_prioritization_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_execution_selector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_feedback_injection_phase12.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livealertbridge.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livefeedbackadapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_livetradefeedbackinjector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_market_data_feed_manager.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metasignalharmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_meta_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_ml_retraining_loop_phase57.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_MultiAccountSplitter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multiagentcoordinationengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_account_splitter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_account_splitter_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_multi_agent_coordination_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutationsignaladapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_order_audit_logger.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternminer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternsignalharmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_learning_engine_phase58.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_miner_realdata.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_mining_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase18_reactive_execution.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase18_reactive_execution_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase19_adaptive_signal_flow.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase20signalpipelinestresstester.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase22_signal_refinement.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase23_strategy_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase31_execution_prioritization.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase34_broker_discovery_final.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_broker_discovery.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_broker_discovery_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase35_execution_prioritization.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase42_context_synthesizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase42_macro_sync.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase44_priority_score_mutation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase45_strategy_self_healing.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase47portfoliooptimizerintegration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase47_portfolio_optimizer_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase55_56_ml_control_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase74_75.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase80_83_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase80_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase81.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase82.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase82_83_comprehensive.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase83.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_portfolio_optimizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_post_trade_feedback_collector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_priority_score_patch_phase37.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactivesignalautopilot.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactive_signal_autopilot.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_riskengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalpatternmapper.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalqualityamplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_execution_router.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_loop_reinforcement_step8.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_quality_amplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionliveloop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionmonitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartexecutionreactor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartfeedbacksync.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartsignalexecutionlinker.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_execution_liveloop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_execution_monitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_monitor_safe.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_signal_execution_linker.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategicsignalorchestrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategyfeedbackjournal.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategymutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsignalqualityamplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsmartexecutionmonitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsmartmonitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradeauditor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradejournalengine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_TradeMemoryFeedbackEngine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_tradepriorityresolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_memory_feedback_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_priority_resolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_trade_recommendation_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_unknown.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_ers.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase13.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase23.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase35_completion.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_49.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_phase_50.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_recovery.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\activate_phase_91c_lockdown.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\active_trades.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adaptive_execution_resolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\adaptive_filter_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_auto_repair_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_pattern_miner.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_activation_v600.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_repair_enforcer_v7.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_v600_hardlock.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_mode_v610_activator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\architect_surveillance_daemon.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\auto_execution_sync_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_engine_fixed_restored.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\bulk_violation_eliminator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\contextual_execution_router.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dsr_strategy_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_bulk_repair.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ers_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\example_prompt_with_hook.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execute_phase_92a_patch.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_envelope_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_feedback_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_loop_responder.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_playbook_generator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_prioritization_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_risk_sentinel.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_selector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_new.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_new_restored.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\execution_supervisor_recovered.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_reconstructor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fixed_monitor_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fix_alpha_decay_subscribers.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\fix_eventbus_integration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hardlock_recovery_full_patch.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\indicator_scanner_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\liquidity_sweep_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_alert_bridge.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_feedback_adapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_risk_governor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_trade_analyzer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\live_trade_feedback_injector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_event_sync_engine_92c.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\market_data_feed_manager.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\meta_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_execution_signal_loop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_pattern_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_retraining_loop_phase57.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_account_splitter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_fixed_restored.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\multi_agent_coordination_engine_recovered.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_decision_visualizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\omega_duplicate_resolution_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\order_audit_logger.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_classifier_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_feedback_loop_integrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_learning_engine_phase58.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_miner.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_signal_harmonizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_49_performance_loop_hardening.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_50_optimization.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_strategy_intelligence_activation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_88_live_trial_activation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_90_feedback_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_real_mt5_integration_corrected.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_real_mt5_integration_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_repair_clean.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_92a_system_repair_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_autofix.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_autofix.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_98_system_build_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_99_launch_and_link.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\portfolio_optimizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\post_trade_feedback_collector.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\post_trade_feedback_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reactive_signal_autopilot.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\RECOVERED_execution_supervisor_ARCHITECT_COMPLIANT.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\risk_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_execution_router.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_quality_amplifier.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_liveloop.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_monitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_execution_reactor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_feedback_sync.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_signal_execution_linker.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategic_signal_orchestrator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_recovered.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_feedback_journal.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_mutator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_recalibration_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\targeted_mt5_analysis.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_auditor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_journal.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_journal_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_memory_feedback_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_priority_resolver.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_recommendation_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\trade_visualizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ultimate_system_rebuild_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\universal_mt5_discovery_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\universal_mt5_discovery_engine_92b.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advancedsignaloptimizationengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advanced_signal_optimization_engine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_brokerrulesynctelemetrywidget.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboardengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_validation.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_dashboard_widgets.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_executiondispatcher.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_executionflowcontroller.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_execution_dashboard.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_execution_dispatcher_phase39.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase17_telemetry_dashboard.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase32_execution_flow_controller.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase35_telemetry_panel.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalbiasdashboard.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalfusionmatrix.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalloopreinforcementengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalvalidator.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_fusion_matrix.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_loop_reinforcement_engine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategicsignalrefinementengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_StrategyMutationLogicEngine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategyrecommenderengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategysentimentfusionengine.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategy_mutation_phase13.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_streamlitfrontend.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_telemetrycollector.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_validate_phase32_execution_flow_controller.py"
    ],
    "SIGNAL_CHANNEL": [
      "build_tracker_logger.py",
      "emergency_architect_compliance_enforcer.py",
      "genesis_architect_agent.py",
      "phase_91_telemetry_wiring_enforcer.py",
      "signal_confidence_rating_engine.py",
      "signal_engine.py",
      "signal_fusion_matrix.py",
      "simple_event_bus.py",
      "strategy_sentiment_fusion_engine.py",
      "telemetry_validation_engine_phase67.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_emergency_json_repair.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_kill_switch_integrity_monitor.py",
      "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_phase92a_system_repair_engine.py",
      "ui_components\\telemetry_logs.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\demo_kill_switch.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_kill_switch_integrity_monitor.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutation_refinement_phase14.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_aggregator_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_confidence_overlay.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase43_sentiment_fusion_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_confidence_phase15.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_pattern_mapper_realdata.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\ultra_minimal_test.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_backtest_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\comprehensive_violation_eliminator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\hardlock_recovery_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\kill_switch_integrity_monitor_v2.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_sync_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\master_recovery_directive.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_model_bootstrap.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_signal_adapter.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_aggregator_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_confidence_overlay.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase92a_system_repair_engine_fixed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_enforcer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\repair_engine_advanced_patches.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_context_enricher.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_feed.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_mapper.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_visualizer.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase34_dashboard_integration.py"
    ],
    "RISK_CHANNEL": [
      "build_status_updater.py",
      "genesis_production_dashboard.py",
      "launch_genesis.py",
      "phase34_telemetry_dashboard_panel.py",
      "phase_65_compliance_healing.py",
      "validate_build_status_reconstruction.py",
      "validate_system_compliance.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\backtest_visualizer.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\module_template_with_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_institutional_system.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\activate_architect_mode.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\broker_discovery_panel.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\deep_patch_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_eventbus_deduplication.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\emergency_eventbus_migration.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_validator.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\lightweight_validation_hook.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\my_script_with_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\performance_status_check.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_87_final_activation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_resumption_engine.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\system_monitor_visualizer.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_phase34_dashboard_integration_clean.py"
    ],
    "TELEMETRY_CHANNEL": [
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase_92_93_validation.py",
      "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_module_hashes.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\macro_sync_guard.py",
      "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\module_status.py",
      "EMERGENCY_COMPLIANCE_QUARANTINE\\SYNTAX_ERRORS\\SYNTAX_event_bus_manager.py"
    ]
  }
}
from hardened_event_bus import EventBus, Event

import json


# <!-- @GENESIS_MODULE_END: count_modules -->


# <!-- @GENESIS_MODULE_START: count_modules -->



# Initialize EventBus connection
event_bus = EventBus.get_instance()
telemetry = TelemetryManager.get_instance()

try:
    with open('system_tree.json', 'r') as f:
        data = json.load(f)
    
    total = 0
    for category, modules in data.get('connected_modules', {}).items():
        count = len(modules) if isinstance(modules, list) else 0
        print(f'{category}: {count} modules')
        total += count
    
    print(f'TOTAL CONNECTED: {total} modules')
    orphans = data.get('genesis_system_metadata', {}).get('orphan_modules', 0)
    print(f'ORPHAN MODULES: {orphans}')
    
    scanned = data.get('genesis_system_metadata', {}).get('total_files_scanned', 0)
    print(f'TOTAL FILES SCANNED: {scanned}')
    
except Exception as e:
    print(f'ERROR: {e}')



def emit_event(event_type: str, data: dict) -> None:
    """Emit event to the EventBus"""
    event = Event(event_type=event_type, source=__name__, data=data)
    event_bus.emit(event)
    telemetry.log_event(TelemetryEvent(category="module_event", name=event_type, properties=data))

# <!-- @GENESIS_MODULE_START: debug_smart_monitor -->

from datetime import datetime\nfrom event_bus import EventBus
"""
Minimal Smart Monitor Test - Debug Version
Identifies exactly where the hang occurs
"""

import time
import datetime
from smart_execution_monitor import SmartExecutionMonitor
from event_bus import emit_event

def debug_test():
    print("Step 1: Creating monitor...")
    monitor = SmartExecutionMonitor()
    print("Step 2: Monitor created successfully")
    
    print("Step 3: Emitting test event...")
    emit_event("LiveTradeExecuted", {
        "trade_id": "TEST_001",
        "symbol": "EURUSD",
        "pnl": -100.0
    }, "DebugTest")
    print("Step 4: Event emitted")
    
    print("Step 5: Waiting 2 seconds...")
    time.sleep(2)
    print("Step 6: Test completed successfully!")
    
    return True

if __name__ == "__main__":
    print("Starting debug test...")
    success = debug_test()
    print(f"Debug test result: {success}")


# <!-- @GENESIS_MODULE_END: debug_smart_monitor -->
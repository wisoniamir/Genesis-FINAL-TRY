# üê≥ GENESIS Trading Platform - Docker Compose
# Architect Mode v7.0 - Full Stack Dashboard

version: '3.8'

services:
  # Backend API Service
  genesis-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: genesis-api
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=api/app.py
      - ARCHITECT_MODE=true
      - ZERO_TOLERANCE=true
    volumes:
      - ./core:/app/core
      - ./modules:/app/modules
      - ./compliance:/app/compliance
      - ./config:/app/config
      - ./logs:/app/logs
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Dashboard Service  
  genesis-dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: genesis-dashboard
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
      - NODE_ENV=production
    depends_on:
      - genesis-api
    networks:
      - genesis-network
    restart: unless-stopped

  # Redis for Real-time Data
  redis:
    image: redis:7-alpine
    container_name: genesis-redis
    ports:
      - "6379:6379"
    networks:
      - genesis-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    container_name: genesis-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - genesis-api
      - genesis-dashboard
    networks:
      - genesis-network
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl

  # Backend Service
  genesis-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genesis-backend
    volumes:
      - ./genesis_core:/genesis/genesis_core
      - ./interface/dashboard:/genesis/interface/dashboard
      - ./config:/genesis/config
      - ./telemetry:/genesis/telemetry
      - ./logs:/genesis/logs
      - ./mt5_connector:/genesis/mt5_connector
    environment:
      - DISPLAY=$DISPLAY
    ports:
      - "8000:8000"
    networks:
      - genesis-network

  # GUI Service
  genesis-gui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genesis-gui
    volumes:
      - ./genesis_core:/genesis/genesis_core
      - ./interface/dashboard:/genesis/interface/dashboard
      - ./config:/genesis/config
      - ./telemetry:/genesis/telemetry
      - ./logs:/genesis/logs
      - ./mt5_connector:/genesis/mt5_connector
      - /tmp/.X11-unix:/tmp/.X11-unix
    environment:
      - DISPLAY=$DISPLAY
    depends_on:
      - genesis-backend
    networks:
      - genesis-network

networks:
  genesis-network:
    driver: bridge

volumes:
  redis-data:
    driver: local

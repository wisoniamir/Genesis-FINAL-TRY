{
  "institutional_modules": [
    {
      "module_name": "advanced_signal_optimization_engine",
      "module_path": "advanced_signal_optimization_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "genesis_dependency_validator",
      "module_path": "genesis_dependency_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "validate_dependency_hash",
        "calculate_package_hash",
        "auto_repair",
        "inject_dependency_validation",
        "validate_critical_dependencies",
        "__init__",
        "handle_heartbeat",
        "handle_compliance_check"
      ],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "institutional_signal_validator",
      "module_path": "institutional_signal_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "integrate_strategy_mutation_engine",
      "module_path": "integrate_strategy_mutation_engine.py",
      "category": "CORE.CORE",
      "functions": [
        "update_system_tree",
        "update_module_registry",
        "update_event_bus",
        "update_build_status",
        "main"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "pattern_meta_strategy_engine",
      "module_path": "pattern_meta_strategy_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "phase_96_signal_wiring_focused_validator",
      "module_path": "phase_96_signal_wiring_focused_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "main",
        "__init__",
        "validate_critical_signal_wiring",
        "_load_event_bus",
        "_load_system_tree",
        "_validate_active_signal_routes",
        "_check_telemetry_handler_compliance",
        "_validate_core_module_handlers",
        "_has_basic_signal_handling",
        "_resolve_file_path",
        "_generate_actionable_fixes",
        "_generate_summary",
        "_save_focused_report",
        "_update_build_status",
        "_generate_error_report"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "run_strategy_mutation_logic_engine",
      "module_path": "run_strategy_mutation_logic_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "self_healing_strategy_engine",
      "module_path": "self_healing_strategy_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_bias_dashboard",
      "module_path": "signal_bias_dashboard.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_confidence_rating_engine",
      "module_path": "signal_confidence_rating_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_engine",
      "module_path": "signal_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_fusion_matrix",
      "module_path": "signal_fusion_matrix.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_historical_telemetry_linker",
      "module_path": "signal_historical_telemetry_linker.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_loop_reinforcement_engine",
      "module_path": "signal_loop_reinforcement_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_loop_reinforcement_engine_step8",
      "module_path": "signal_loop_reinforcement_engine_step8.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_validator",
      "module_path": "signal_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_mutation_logic_engine",
      "module_path": "strategy_mutation_logic_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_recalibration_engine",
      "module_path": "strategy_recalibration_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_recommender_engine",
      "module_path": "strategy_recommender_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_sentiment_fusion_engine",
      "module_path": "strategy_sentiment_fusion_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "validate_phase41_strategy_mutation",
      "module_path": "validate_phase41_strategy_mutation.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "validate_signalengine",
      "module_path": "validate_signalengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "validate_signal_fusion_matrix",
      "module_path": "validate_signal_fusion_matrix.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "DUPLICATE_signal_refinement_engine",
      "module_path": "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_signal_refinement_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "DUPLICATE_strategy_adaptive_context_synthesizer",
      "module_path": "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "DUPLICATE_strategy_adaptive_context_synthesizer_fixed",
      "module_path": "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_adaptive_context_synthesizer_fixed.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "DUPLICATE_strategy_mutation_logic_engine",
      "module_path": "QUARANTINE_ARCHITECT_VIOLATIONS\\DUPLICATE_strategy_mutation_logic_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": false
    },
    {
      "module_name": "signal_refinement_engine_v2",
      "module_path": "QUARANTINE_DUPLICATES\\signal_refinement_engine_v2.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase20_signal_pipeline_stress_tester",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\phase20_signal_pipeline_stress_tester.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "step7_architect_compliant_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_architect_compliant_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "step7_comprehensive_smart_monitor_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_comprehensive_smart_monitor_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "step7_smart_monitor_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\step7_smart_monitor_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_advancedpatternminer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_advancedpatternminer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_confusion_matrix_display",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_confusion_matrix_display.py",
      "category": "CORE.EXECUTION",
      "functions": [
        "test_confusion_matrix_display_validation",
        "test_confusion_matrix_display_custom_labels",
        "test_confusion_matrix_display_plotting",
        "test_confusion_matrix_display",
        "test_confusion_matrix_contrast",
        "test_confusion_matrix_pipeline",
        "test_confusion_matrix_with_unknown_labels",
        "test_colormap_max",
        "test_im_kw_adjust_vmin_vmax",
        "test_confusion_matrix_text_kw"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "test_dsrstrategymutator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_dsrstrategymutator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_fontconfig_pattern",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_fontconfig_pattern.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "test_fontconfig_pattern",
        "test_fontconfig_str",
        "test_fontconfig_unknown_constant"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "test_hessian_update_strategy",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_hessian_update_strategy.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "test_matmul_equals_dot",
        "__init__",
        "fun",
        "grad",
        "hess",
        "test_hessian_initialization",
        "test_initialize_catch_illegal",
        "test_rosenbrock_with_no_exception",
        "test_SR1_skip_update",
        "test_BFGS_skip_update"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "test_metasignalharmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_metasignalharmonizer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_meta_signal_harmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_meta_signal_harmonizer.py",
      "category": "CORE.CORE",
      "functions": [
        "run_harmonizer_tests",
        "setUpClass",
        "_setup_test_subscribers",
        "test_01_aligned_signals_unified_output",
        "test_02_conflicting_signals_conflict_detection",
        "test_03_mid_confidence_audit_trail",
        "test_04_signal_weighting_accuracy",
        "test_05_telemetry_validation",
        "test_06_performance_benchmarking",
        "test_07_data_storage_validation",
        "_emit_signal_confidence_rated",
        "_emit_pattern_signal_detected",
        "_emit_live_execution_feedback",
        "_emit_trade_journal_entry",
        "tearDownClass",
        "log_state",
        "capture_unified_signal",
        "capture_audit_trail",
        "capture_conflict",
        "capture_harmony_metric",
        "capture_telemetry"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_mutationsignaladapter",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_mutationsignaladapter.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_patternengine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_patternminer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternminer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_patternsignalharmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_patternsignalharmonizer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_pattern_aggregator_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_aggregator_engine.py",
      "category": "CORE.CORE",
      "functions": [
        "__init__",
        "_get_event_bus",
        "emit_telemetry",
        "setUp",
        "test_multi_timeframe_aggregation",
        "test_statistical_confidence_processing",
        "test_pattern_count_per_symbol",
        "test_processing_latency_optimization",
        "test_eventbus_integration",
        "test_telemetry_emission",
        "test_error_handling",
        "test_real_mt5_data_processing",
        "_aggregate_patterns",
        "log_state"
      ],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_pattern_confidence_overlay",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_confidence_overlay.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_pattern_learning_engine_phase58",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_learning_engine_phase58.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_pattern_miner_realdata",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_miner_realdata.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_pattern_mining_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_mining_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_pattern_signal_harmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_pattern_signal_harmonizer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_phase19_adaptive_signal_flow",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase19_adaptive_signal_flow.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_phase20signalpipelinestresstester",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase20signalpipelinestresstester.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_phase22_signal_refinement",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase22_signal_refinement.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_phase23_strategy_mutator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase23_strategy_mutator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_phase43_sentiment_fusion_basic",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase43_sentiment_fusion_basic.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "test_phase43_sentiment_fusion_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase43_sentiment_fusion_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_phase45_strategy_self_healing",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_phase45_strategy_self_healing.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_reactivesignalautopilot",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactivesignalautopilot.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_reactive_signal_autopilot",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_reactive_signal_autopilot.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signalpatternmapper",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalpatternmapper.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signalqualityamplifier",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signalqualityamplifier.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signaltools",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signaltools.py",
      "category": "CORE.CORE",
      "functions": [
        "fftconvolve_err",
        "gen_oa_shapes",
        "gen_oa_shapes_2d",
        "gen_oa_shapes_eq",
        "test_lfilter_bad_object",
        "test_lfilter_notimplemented_input",
        "test_correlation_lags",
        "test_correlation_lags_invalid_mode",
        "filtfilt_gust_opt",
        "check_filtfilt_gust",
        "test_choose_conv_method",
        "test_choose_conv_dtype_deprecation",
        "test_choose_conv_method_2",
        "test_filtfilt_gust",
        "assert_allclose_cast",
        "test_nonnumeric_dtypes",
        "test_gh_22684",
        "test_basic",
        "test_same",
        "test_same_eq",
        "test_complex",
        "test_zero_rank",
        "test_broadcastable",
        "test_single_element",
        "test_2d_arrays",
        "test_input_swapping",
        "test_invalid_params",
        "test_valid_mode2",
        "test_same_mode",
        "test_invalid_shapes",
        "test_convolve_method",
        "test_convolve_method_large_input",
        "test_mismatched_dims",
        "test_dtype_deprecation",
        "test_2d_arrays",
        "test_valid_mode",
        "test_valid_mode_complx",
        "test_fillvalue",
        "test_fillvalue_errors",
        "test_fillvalue_empty",
        "test_wrap_boundary",
        "test_sym_boundary",
        "test_same_with_boundary",
        "test_boundary_extension_same",
        "test_boundary_extension_full",
        "test_invalid_shapes",
        "test_same_mode",
        "test_valid_mode2",
        "test_consistency_convolve_funcs",
        "test_invalid_dims",
        "test_large_array",
        "test_real",
        "test_real_axes",
        "test_complex",
        "test_complex_axes",
        "test_2d_real_same",
        "test_2d_real_same_axes",
        "test_2d_complex_same",
        "test_2d_complex_same_axes",
        "test_real_same_mode",
        "test_real_same_mode_axes",
        "test_valid_mode_real",
        "test_valid_mode_real_axes",
        "test_valid_mode_complex",
        "test_valid_mode_complex_axes",
        "test_valid_mode_ignore_nonaxes",
        "test_empty",
        "test_zero_rank",
        "test_single_element",
        "test_random_data",
        "test_random_data_axes",
        "test_random_data_multidim_axes",
        "test_many_sizes",
        "test_fft_nan",
        "test_real_manylens",
        "test_1d_noaxes",
        "test_1d_axes",
        "test_2d_noaxes",
        "test_2d_axes",
        "test_empty",
        "test_zero_rank",
        "test_single_element",
        "test_invalid_shapes",
        "test_invalid_shapes_axes",
        "test_mismatched_dims",
        "test_invalid_flags",
        "test_longdtype_input",
        "test_basic",
        "test_types",
        "test_invalid_dtypes",
        "test_none",
        "test_odd_strides",
        "test_medfilt2d_parallel",
        "test_basic",
        "test_basic",
        "test_rfft",
        "test_input_domain",
        "test_dc",
        "test_mutable_window",
        "test_output_float32",
        "test_output_match_dtype",
        "test_resample_methods",
        "test_poly_vs_filtfilt",
        "test_correlate1d",
        "test_gh_15620",
        "test_basic",
        "test_complex",
        "test_basic",
        "generate",
        "convert_dtype",
        "test_rank_1_IIR",
        "test_rank_1_FIR",
        "test_rank_1_IIR_init_cond",
        "test_rank_1_FIR_init_cond",
        "test_rank_2_IIR_axis_0",
        "test_rank_2_IIR_axis_1",
        "test_rank_2_IIR_axis_0_init_cond",
        "test_rank_2_IIR_axis_1_init_cond",
        "test_rank_3_IIR",
        "test_rank_3_IIR_init_cond",
        "test_rank_3_FIR",
        "test_rank_3_FIR_init_cond",
        "test_zi_pseudobroadcast",
        "test_scalar_a",
        "test_zi_some_singleton_dims",
        "base_bad_size_zi",
        "test_bad_size_zi",
        "test_empty_zi",
        "test_lfiltic_bad_zi",
        "test_short_x_FIR",
        "test_short_x_IIR",
        "test_do_not_modify_a_b_IIR",
        "test_do_not_modify_a_b_FIR",
        "test_scalar_input",
        "test_dtype_deprecation",
        "type",
        "_setup_rank1",
        "equal_tolerance",
        "equal_tolerance_fft",
        "test_method",
        "test_rank1_valid",
        "test_rank1_same",
        "test_rank1_full",
        "_setup_rank3",
        "test_rank3_valid",
        "test_rank3_same",
        "test_rank3_all",
        "test_invalid_shapes",
        "test_invalid_params",
        "test_mismatched_dims",
        "test_numpy_fastpath",
        "test_dtype_deprecation",
        "decimal",
        "_setup_rank1",
        "test_rank1_valid",
        "test_rank1_same",
        "test_rank1_full",
        "test_swap_full",
        "test_swap_same",
        "test_rank3",
        "test_rank0",
        "test_consistency_correlate_funcs",
        "test_invalid_shapes",
        "test_complex_input",
        "test_basic",
        "test_scale_invariance",
        "test_types",
        "filtfilt",
        "test_basic",
        "test_sine",
        "test_axis",
        "test_acoeff",
        "test_gust_simple",
        "test_gust_scalars",
        "test_equivalence",
        "filtfilt_gust_opt_func",
        "test_bad_args",
        "test_basic_IIR",
        "test_basic_FIR",
        "test_shape",
        "test_phaseshift_FIR",
        "test_zero_phase_FIR",
        "test_phaseshift_IIR",
        "test_zero_phase_IIR",
        "_test_phaseshift",
        "test_auto_n",
        "test_long_float32",
        "test_float16_upcast",
        "test_complex_iir_dlti",
        "test_complex_fir_dlti",
        "test_bad_args",
        "test_hilbert_theoretical",
        "test_hilbert_axisN",
        "test_hilbert_types",
        "test_bad_args",
        "test_hilbert2_types",
        "assert_close",
        "test_envelope_invalid_parameters",
        "test_envelope_verify_parameters",
        "test_envelope_real_signals",
        "test_envelope_complex_signals",
        "test_envelope_verify_axis_parameter",
        "test_envelope_verify_axis_parameter_complex",
        "test_compare_envelope_hilbert",
        "assert_rp_almost_equal",
        "test_compute_factors",
        "test_group_poles",
        "test_residue_general",
        "test_residue_leading_zeros",
        "test_resiude_degenerate",
        "test_residuez_general",
        "test_residuez_trailing_zeros",
        "test_residuez_degenerate",
        "test_inverse_unique_roots_different_rtypes",
        "test_inverse_repeated_roots_different_rtypes",
        "test_inverse_bad_rtype",
        "test_invresz_one_coefficient_bug",
        "test_invres",
        "test_invresz",
        "test_inverse_scalar_arguments",
        "test_single_1dperiod",
        "test_single_2dperiod",
        "test_equal_1dperiod",
        "test_equal_2dperiod",
        "test_spaced_1dperiod",
        "test_spaced_2dperiod",
        "test_partial_1dperiod",
        "test_partial_2dperiod",
        "test_opposite_1dperiod",
        "test_opposite_2dperiod",
        "test_2d_events_ValueError",
        "test_2d_period_ValueError",
        "test_zero_period_ValueError",
        "test_negative_period_ValueError",
        "test_rank1",
        "test_rank2",
        "test_rank3",
        "test_initial_conditions",
        "test_initial_conditions_3d_axis1",
        "test_bad_zi_shape",
        "test_sosfilt_zi",
        "test_dtype_deprecation",
        "test_basic",
        "test_n_dimensional_signal",
        "test_n_dimensional_divisor",
        "test_basic",
        "test_copy",
        "test_axis",
        "test_bp",
        "test_detrend_array_bp",
        "test_real_no_repeat",
        "test_real_repeat",
        "test_complex_no_repeat",
        "test_complex_repeat",
        "test_gh_4915",
        "test_complex_roots_extra",
        "test_single_unique_root",
        "apply",
        "lf0",
        "lf1",
        "lf0",
        "lf1"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "test_signal_confidence_phase15",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_confidence_phase15.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signal_execution_router",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_execution_router.py",
      "category": "CORE.CORE",
      "functions": [
        "__init__",
        "_get_event_bus",
        "emit_telemetry",
        "setUp",
        "tearDown",
        "test_initialization",
        "test_trade_recommendation_validation",
        "test_risk_limit_checking",
        "test_macro_conflict_detection",
        "test_manual_override_handling",
        "test_compliance_validation",
        "test_mt5_order_routing",
        "test_execution_decision_making",
        "test_risk_exposure_tracking",
        "test_position_size_validation",
        "test_correlation_analysis",
        "test_drawdown_monitoring",
        "test_order_format_validation",
        "test_eventbus_integration",
        "test_telemetry_emission",
        "test_error_handling",
        "test_thread_safety",
        "test_performance_metrics",
        "test_real_time_processing",
        "test_risk_state_consistency",
        "test_execution_monitoring_alerts",
        "log_state",
        "process_recommendations",
        "process_callback"
      ],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signal_generation",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_generation.py",
      "category": "CORE.CORE",
      "functions": [
        "test_signal_generation"
      ],
      "mt5_ready": true,
      "eventbus_ready": false
    },
    {
      "module_name": "test_signal_loop_reinforcement_step8",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_loop_reinforcement_step8.py",
      "category": "CORE.CORE",
      "functions": [
        "test_step8_signal_reinforcement",
        "test_signal_tracking",
        "test_edge_decay_detection",
        "test_reinforcement_boost",
        "test_win_rate_calculations",
        "on_signal_feedback_score",
        "on_decay_detected_event",
        "on_reinforcement_learning_log",
        "validate_event_formats",
        "generate_test_report"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signal_pattern_mapper_realdata",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_pattern_mapper_realdata.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_signal_quality_amplifier",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_signal_quality_amplifier.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_smartsignalexecutionlinker",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smartsignalexecutionlinker.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_smart_signal_execution_linker",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_smart_signal_execution_linker.py",
      "category": "CORE.CORE",
      "functions": [
        "run_phase25_tests",
        "setUp",
        "test_signal_confidence_filtering",
        "test_high_confidence_signal_processing",
        "test_execution_envelope_matching",
        "test_kill_switch_blocking",
        "test_ftmo_constraints_validation",
        "test_sl_tp_ratio_validation",
        "test_linking_latency_measurement",
        "test_telemetry_payload_creation",
        "test_queue_management",
        "test_performance_metrics_tracking",
        "log_state"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "test_strategicsignalorchestrator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategicsignalorchestrator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_strategic_signal_orchestrator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator.py",
      "category": "CORE.CORE",
      "functions": [
        "run_strategic_signal_orchestrator_tests",
        "setup_test_environment",
        "test_strategic_signal_orchestrator_registration",
        "test_strategic_signal_orchestrator_initialization",
        "test_signal_orchestration_processing",
        "test_kill_switch_integration",
        "test_volatility_based_routing",
        "test_telemetry_emission",
        "test_orchestration_performance",
        "log_state"
      ],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_strategic_signal_orchestrator_v2",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategic_signal_orchestrator_v2.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_strategyfeedbackjournal",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategyfeedbackjournal.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_strategymutator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_strategymutator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_testsignalqualityamplifier",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_testsignalqualityamplifier.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "test_validators",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\test_validators.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "fail",
        "sorted_errors",
        "setUp",
        "test_attrs",
        "test_init",
        "test_iter_errors_successful",
        "test_iter_errors_one_error",
        "test_iter_errors_multiple_errors",
        "test_if_a_version_is_provided_it_is_registered",
        "test_repr",
        "test_long_repr",
        "test_repr_no_version",
        "test_dashes_are_stripped_from_validator_names",
        "test_if_a_version_is_not_provided_it_is_not_registered",
        "test_validates_registers_meta_schema_id",
        "test_validates_registers_meta_schema_draft6_id",
        "test_create_default_types",
        "test_check_schema_with_different_metaschema",
        "test_check_schema_with_different_metaschema_defaults_to_self",
        "test_extend",
        "test_extend_idof",
        "test_extend_applicable_validators",
        "message_for",
        "test_single_type_failure",
        "test_single_type_list_failure",
        "test_multiple_type_failure",
        "test_object_with_named_type_failure",
        "test_minimum",
        "test_maximum",
        "test_dependencies_single_element",
        "test_object_without_title_type_failure_draft3",
        "test_dependencies_list_draft3",
        "test_dependencies_list_draft7",
        "test_additionalItems_single_failure",
        "test_additionalItems_multiple_failures",
        "test_additionalProperties_single_failure",
        "test_additionalProperties_multiple_failures",
        "test_const",
        "test_contains_draft_6",
        "test_invalid_format_default_message",
        "test_additionalProperties_false_patternProperties",
        "test_False_schema",
        "test_multipleOf",
        "test_minItems",
        "test_maxItems",
        "test_minItems_1",
        "test_maxItems_0",
        "test_minLength",
        "test_maxLength",
        "test_minLength_1",
        "test_maxLength_0",
        "test_minProperties",
        "test_maxProperties",
        "test_minProperties_1",
        "test_maxProperties_0",
        "test_prefixItems_with_items",
        "test_prefixItems_with_multiple_extra_items",
        "test_pattern",
        "test_does_not_contain",
        "test_contains_too_few",
        "test_contains_too_few_both_constrained",
        "test_contains_too_many",
        "test_contains_too_many_both_constrained",
        "test_exclusiveMinimum",
        "test_exclusiveMaximum",
        "test_required",
        "test_dependentRequired",
        "test_oneOf_matches_none",
        "test_oneOf_matches_too_many",
        "test_unevaluated_items",
        "test_unevaluated_items_on_invalid_type",
        "test_unevaluated_properties_invalid_against_subschema",
        "test_unevaluated_properties_disallowed",
        "test_unevaluated_properties_on_invalid_type",
        "test_single_item",
        "test_heterogeneous_additionalItems_with_Items",
        "test_heterogeneous_items_prefixItems",
        "test_heterogeneous_unevaluatedItems_prefixItems",
        "test_heterogeneous_properties_additionalProperties",
        "test_heterogeneous_properties_unevaluatedProperties",
        "test_anyOf",
        "test_type",
        "test_single_nesting",
        "test_multiple_nesting",
        "test_recursive",
        "test_additionalProperties",
        "test_patternProperties",
        "test_additionalItems",
        "test_additionalItems_with_items",
        "test_propertyNames",
        "test_if_then",
        "test_if_else",
        "test_boolean_schema_False",
        "test_ref",
        "test_prefixItems",
        "test_prefixItems_with_items",
        "test_contains_too_many",
        "test_contains_too_few",
        "test_contains_none",
        "test_ref_sibling",
        "test_invalid_properties",
        "test_minItems_invalid_string",
        "test_enum_allows_empty_arrays",
        "test_enum_allows_non_unique_items",
        "test_schema_with_invalid_regex",
        "test_schema_with_invalid_regex_with_disabled_format_validation",
        "test_it_implements_the_validator_protocol",
        "test_valid_instances_are_valid",
        "test_invalid_instances_are_not_valid",
        "test_non_existent_properties_are_ignored",
        "test_evolve",
        "test_evolve_with_subclass",
        "test_is_type_is_true_for_valid_type",
        "test_is_type_is_false_for_invalid_type",
        "test_is_type_evades_bool_inheriting_from_int",
        "test_it_can_validate_with_decimals",
        "test_it_returns_true_for_formats_it_does_not_know_about",
        "test_it_does_not_validate_formats_by_default",
        "test_it_validates_formats_if_a_checker_is_provided",
        "test_non_string_custom_type",
        "test_it_properly_formats_tuples_in_errors",
        "test_check_redefined_sequence",
        "test_it_creates_a_ref_resolver_if_not_provided",
        "test_it_upconverts_from_deprecated_RefResolvers",
        "test_it_upconverts_from_yet_older_deprecated_legacy_RefResolvers",
        "test_True_is_not_a_schema",
        "test_False_is_not_a_schema",
        "test_True_is_not_a_schema_even_if_you_forget_to_check",
        "test_False_is_not_a_schema_even_if_you_forget_to_check",
        "test_any_type_is_valid_for_type_any",
        "test_any_type_is_redefinable",
        "test_is_type_is_true_for_any_type",
        "test_is_type_does_not_evade_bool_if_it_is_being_tested",
        "test_ref_resolvers_may_have_boolean_schemas_stored",
        "test_draft_3",
        "test_draft_4",
        "test_draft_6",
        "test_draft_7",
        "test_draft_201909",
        "test_draft_202012",
        "test_True",
        "test_False",
        "test_custom_validator",
        "test_custom_validator_draft6",
        "test_validator_for_jsonschema_default",
        "test_validator_for_custom_default",
        "test_warns_if_meta_schema_specified_was_not_found",
        "test_does_not_warn_if_meta_schema_is_unspecified",
        "test_validator_for_custom_default_with_schema",
        "assertUses",
        "test_draft3_validator_is_chosen",
        "test_draft4_validator_is_chosen",
        "test_draft6_validator_is_chosen",
        "test_draft7_validator_is_chosen",
        "test_draft202012_validator_is_chosen",
        "test_draft202012_validator_is_the_default",
        "test_validation_error_message",
        "test_schema_error_message",
        "test_it_uses_best_match",
        "test_validation_across_a_second_thread",
        "test_registry_with_retrieve",
        "test_custom_registries_do_not_autoretrieve_remote_resources",
        "setUp",
        "test_it_does_not_retrieve_schema_urls_from_the_network",
        "test_it_resolves_local_refs",
        "test_it_resolves_local_refs_with_id",
        "test_it_retrieves_stored_refs",
        "test_it_retrieves_unstored_refs_via_requests",
        "test_it_retrieves_unstored_refs_via_urlopen",
        "test_it_retrieves_local_refs_via_urlopen",
        "test_it_can_construct_a_base_uri_from_a_schema",
        "test_it_can_construct_a_base_uri_from_a_schema_without_id",
        "test_custom_uri_scheme_handlers",
        "test_cache_remote_on",
        "test_cache_remote_off",
        "test_if_you_give_it_junk_you_get_a_resolution_error",
        "test_helpful_error_message_on_failed_pop_scope",
        "test_pointer_within_schema_with_different_id",
        "test_newly_created_validator_with_ref_resolver",
        "test_refresolver_with_pointer_in_schema_with_no_id",
        "key",
        "get",
        "json",
        "id_of",
        "check",
        "validate",
        "retrieve",
        "fake_urlopen",
        "handler",
        "handler",
        "handler",
        "handler",
        "handle",
        "resolving"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "validate_institutional_system",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_institutional_system.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "validate_meta_signal_harmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\NON_ESSENTIAL\\validate_meta_signal_harmonizer.py",
      "category": "CORE.CORE",
      "functions": [
        "main"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "advanced_pattern_miner",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\advanced_pattern_miner.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "basevalidators",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\basevalidators.py",
      "category": "CORE.CORE",
      "functions": [
        "fullmatch",
        "to_scalar_or_list",
        "copy_to_readonly_numpy_array",
        "is_numpy_convertable",
        "is_homogeneous_array",
        "is_simple_array",
        "is_array",
        "type_str",
        "is_typed_array_spec",
        "is_none_or_typed_array_spec",
        "__init__",
        "description",
        "raise_invalid_val",
        "raise_invalid_elements",
        "validate_coerce",
        "present",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "__deepcopy__",
        "build_regex_replacement",
        "perform_replacemenet",
        "description",
        "in_values",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "to_str_or_unicode_or_none",
        "description",
        "validate_coerce",
        "__init__",
        "numbers_allowed",
        "description",
        "validate_coerce",
        "find_invalid_els",
        "vc_scalar",
        "perform_validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "named_colorscales",
        "description",
        "validate_coerce",
        "present",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "description",
        "vc_scalar",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce",
        "__init__",
        "description",
        "build_validator",
        "validate_element_with_indexed_name",
        "validate_coerce",
        "present",
        "__init__",
        "validate_coerce",
        "__init__",
        "description",
        "__init__",
        "description",
        "validate_coerce",
        "pil_image_to_uri",
        "__init__",
        "compute_graph_obj_module_str",
        "data_class",
        "description",
        "validate_coerce",
        "present",
        "__init__",
        "validate_coerce",
        "__init__",
        "description",
        "data_class",
        "validate_coerce",
        "present",
        "__init__",
        "description",
        "get_trace_class",
        "validate_coerce",
        "__init__",
        "description",
        "validate_coerce"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "confusion_matrix",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\confusion_matrix.py",
      "category": "CORE.EXECUTION",
      "functions": [
        "__init__",
        "plot",
        "from_estimator",
        "from_predictions"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "dsr_strategy_mutator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\dsr_strategy_mutator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "final_system_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\final_system_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "liquidity_sweep_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\liquidity_sweep_validator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "meta_signal_harmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\meta_signal_harmonizer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ml_execution_signal_loop",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_execution_signal_loop.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ml_pattern_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\ml_pattern_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "mutation_signal_adapter",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\mutation_signal_adapter.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "optimization_summary",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\optimization_summary.py",
      "category": "CORE.TELEMETRY",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "patterns",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\patterns.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "_match_path",
        "filter_paths",
        "match_any_paths"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "pattern_aggregator_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_aggregator_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_classifier_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_classifier_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_confidence_overlay",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_confidence_overlay.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_engine",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_feedback_loop_integrator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_feedback_loop_integrator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_learning_engine_phase58",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_learning_engine_phase58.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_miner",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_miner.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "pattern_signal_harmonizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\pattern_signal_harmonizer.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "phase_50_optimization",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_50_optimization.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "phase_86_strategy_intelligence_activation",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_86_strategy_intelligence_activation.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "phase_95_completion_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_completion_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "mark_phase_95_complete"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_95_eventbus_focused_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_focused_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "main",
        "__init__",
        "validate_critical_issues",
        "_load_event_bus",
        "_load_system_tree",
        "_validate_critical_routes",
        "_check_missing_eventbus_bindings",
        "_validate_duplicate_topics",
        "_has_eventbus_integration",
        "_generate_actionable_patches",
        "_generate_summary",
        "_save_focused_report",
        "_update_build_status",
        "_trigger_focused_guardian_alert",
        "_generate_error_report"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_95_eventbus_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_95_eventbus_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "main",
        "__init__",
        "validate_eventbus_integrity",
        "_load_event_bus",
        "_load_system_tree",
        "_validate_emitters_exist",
        "_validate_consumers_bound",
        "_check_orphaned_events",
        "_check_duplicate_route_keys",
        "_scan_hardcoded_violations",
        "_file_contains_emit",
        "_file_contains_subscribe",
        "_generate_patches",
        "_save_eventbus_report",
        "_update_build_status",
        "_update_build_tracker",
        "_check_exit_conditions",
        "_trigger_guardian_alert",
        "_generate_error_report"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_96_completion_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_completion_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "mark_phase_96_complete"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_96_signal_wiring_autofix",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_autofix.py",
      "category": "CORE.CORE",
      "functions": [
        "main",
        "__init__",
        "apply_signal_wiring_fixes",
        "_load_event_bus",
        "_load_system_tree",
        "_ensure_telemetry_compliance",
        "_add_missing_signal_handlers",
        "_fix_orphaned_signal_routes",
        "_enhance_core_module_signal_handling",
        "_has_comprehensive_signal_handling",
        "_generate_signal_handling_template",
        "_add_signal_handling_template",
        "_resolve_file_path",
        "_save_updated_files",
        "_update_build_status",
        "_log_fixes_to_build_tracker",
        "_generate_error_report"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "phase_96_signal_wiring_enforcer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_96_signal_wiring_enforcer.py",
      "category": "CORE.CORE",
      "functions": [
        "main",
        "__init__",
        "enforce_signal_wiring_hardening",
        "_load_event_bus",
        "_load_system_tree",
        "_validate_signal_subscribers",
        "_check_orphaned_signals",
        "_validate_handler_implementations",
        "_file_has_emit_calls",
        "_find_handler_methods",
        "_suggest_handler_name",
        "_resolve_file_path",
        "_generate_signal_wiring_patches",
        "_apply_automated_fixes",
        "_generate_handler_template",
        "_update_build_tracker",
        "_update_build_status",
        "_check_exit_conditions",
        "_generate_error_report"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "phase_97_1_completion_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_1_completion_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "validate_phase_97_1_completion"
      ],
      "mt5_ready": true,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_97_5_architect_validator_full",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_architect_validator_full.py",
      "category": "CORE.CORE",
      "functions": [
        "run_full_prompt_architect_repair_pipeline",
        "emergency_repair_mode",
        "__init__",
        "log_validation_step",
        "check_critical_files",
        "validate_module_imports",
        "check_architecture_integrity",
        "perform_deep_repair",
        "save_validation_report",
        "auto_patch_from_prompt_architect",
        "enforce_guardian_continuity",
        "detect_prompt_architect_errors",
        "verify_all_fingerprints",
        "flush_log_memory"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_97_5_step_5_prompt_architect_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_97_5_step_5_prompt_architect_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "run_prompt_audit",
        "detect_prompt_architect_errors",
        "execute_step_5"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "phase_98_system_build_validator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\phase_98_system_build_validator.py",
      "category": "CORE.CORE",
      "functions": [
        "main",
        "__init__",
        "_emit_startup_telemetry",
        "validate_core_files",
        "_validate_single_file",
        "_validate_mock_data_empty",
        "_validate_build_status",
        "_validate_system_tree",
        "run_architect_surveillance",
        "_check_eventbus_connectivity",
        "generate_validation_report",
        "execute_phase_98_validation"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "reactive_signal_autopilot",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\reactive_signal_autopilot.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "signaltools",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signaltools.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "__dir__",
        "__getattr__"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "signal_context_enricher",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_context_enricher.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_execution_router",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_execution_router.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_feed",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_feed.py",
      "category": "CORE.CORE",
      "functions": [
        "__init__",
        "_get_event_bus",
        "emit_telemetry",
        "__init__",
        "load_signals",
        "render"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_feed_generator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_feed_generator.py",
      "category": "CORE.CORE",
      "functions": [
        "generate_live_signal",
        "update_signal_feed",
        "update_mt5_metrics"
      ],
      "mt5_ready": true,
      "eventbus_ready": false
    },
    {
      "module_name": "signal_pattern_mapper",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_mapper.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_pattern_visualizer",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_pattern_visualizer.py",
      "category": "CORE.CORE",
      "functions": [
        "__init__",
        "_get_event_bus",
        "emit_telemetry",
        "__init__",
        "load_signal_data",
        "load_pattern_data",
        "create_signal_df",
        "log_state"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "signal_quality_amplifier",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\signal_quality_amplifier.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "smart_signal_execution_linker",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\smart_signal_execution_linker.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategic_signal_orchestrator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategic_signal_orchestrator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_adaptive_context_synthesizer_fixed",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_fixed.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_adaptive_context_synthesizer_recovered",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_adaptive_context_synthesizer_recovered.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_feedback_journal",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_feedback_journal.py",
      "category": "CORE.CORE",
      "functions": [
        "__init__",
        "_register_event_handlers",
        "_register_eventbus_routes",
        "handle_strategy_score",
        "handle_signal_feedback",
        "_generate_health_report",
        "_write_to_journal",
        "_emit_mutation_log",
        "_emit_health_report",
        "_update_global_metrics",
        "_recently_reported",
        "_emit_telemetry",
        "_emit_error",
        "log_state",
        "create_strategy_dict"
      ],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_mutator",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_mutator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "strategy_recalibration_test",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\strategy_recalibration_test.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "validators",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\validators.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "__getattr__",
        "validates",
        "_warn_for_remote_retrieve",
        "create",
        "extend",
        "_match_keyword",
        "_match_subschema_keywords",
        "_search_schema",
        "validate",
        "validator_for",
        "_validates",
        "__init__",
        "from_schema",
        "push_scope",
        "pop_scope",
        "resolution_scope",
        "base_uri",
        "in_scope",
        "resolving",
        "_find_in_referrer",
        "_get_subschemas_cache",
        "_find_in_subschemas",
        "resolve",
        "resolve_from_url",
        "resolve_fragment",
        "resolve_remote",
        "matcher",
        "__init_subclass__",
        "__attrs_post_init__",
        "check_schema",
        "resolver",
        "evolve",
        "iter_errors",
        "descend",
        "validate",
        "is_type",
        "_validate_reference",
        "is_valid",
        "evolve",
        "find"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "validator_cache",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\validator_cache.py",
      "category": "UNKNOWN",
      "functions": [
        "get_validator"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "validator_creation",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\validator_creation.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_fillpattern",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fillpattern.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "__init__"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_fontconfig_pattern",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_fontconfig_pattern.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "_make_fontconfig_parser",
        "parse_fontconfig_pattern",
        "generate_fontconfig_pattern",
        "comma_separated"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_hessian_update_strategy",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_hessian_update_strategy.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "initialize",
        "update",
        "dot",
        "get_matrix",
        "__matmul__",
        "__init__",
        "initialize",
        "_auto_scale",
        "_update_implementation",
        "update",
        "dot",
        "get_matrix",
        "__init__",
        "_update_inverse_hessian",
        "_update_hessian",
        "_update_implementation",
        "__init__",
        "_update_implementation"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_pattern",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_pattern.py",
      "category": "CORE.SIGNAL",
      "functions": [
        "__init__"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_signaltools",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_signaltools.py",
      "category": "CORE.CORE",
      "functions": [
        "_valfrommode",
        "_bvalfromboundary",
        "_inputs_swap_needed",
        "_reject_objects",
        "correlate",
        "correlation_lags",
        "_centered",
        "_init_freq_conv_axes",
        "_freq_domain_conv",
        "_apply_conv_mode",
        "fftconvolve",
        "_calc_oa_lens",
        "oaconvolve",
        "_numeric_arrays",
        "_conv_ops",
        "_fftconv_faster",
        "_reverse_and_conj",
        "_np_conv_ok",
        "_timeit_fast",
        "choose_conv_method",
        "convolve",
        "order_filter",
        "medfilt",
        "wiener",
        "convolve2d",
        "correlate2d",
        "medfilt2d",
        "lfilter",
        "lfiltic",
        "deconvolve",
        "hilbert",
        "hilbert2",
        "envelope",
        "_cmplx_sort",
        "unique_roots",
        "invres",
        "_compute_factors",
        "_compute_residues",
        "residue",
        "residuez",
        "_group_poles",
        "invresz",
        "resample",
        "resample_poly",
        "vectorstrength",
        "detrend",
        "lfilter_zi",
        "sosfilt_zi",
        "_filtfilt_gust",
        "filtfilt",
        "_validate_pad",
        "_validate_x",
        "sosfilt",
        "sosfiltfilt",
        "decimate"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_validators",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_validators.py",
      "category": "CORE.CORE",
      "functions": [
        "_check_arg_length",
        "_check_for_default_values",
        "validate_args",
        "_check_for_invalid_keys",
        "validate_kwargs",
        "validate_args_and_kwargs",
        "validate_bool_kwarg",
        "validate_fillna_kwargs",
        "validate_percentile",
        "validate_ascending",
        "validate_ascending",
        "validate_ascending",
        "validate_endpoints",
        "validate_inclusive",
        "validate_insert_loc",
        "check_dtype_backend"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "_vegafusion_data",
      "module_path": "TRIAGE_ORPHAN_QUARANTINE\\UNKNOWN\\_vegafusion_data.py",
      "category": "CORE.CORE",
      "functions": [
        "vegafusion_data_transformer",
        "vegafusion_data_transformer",
        "vegafusion_data_transformer",
        "vegafusion_data_transformer",
        "get_inline_table_names",
        "get_inline_tables",
        "compile_to_vegafusion_chart_state",
        "compile_with_vegafusion",
        "handle_row_limit_exceeded",
        "using_vegafusion",
        "is_supported_by_vf",
        "is_supported_by_vf"
      ],
      "mt5_ready": false,
      "eventbus_ready": false
    },
    {
      "module_name": "ORPHAN_test_advancedsignaloptimizationengine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advancedsignaloptimizationengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_advanced_signal_optimization_engine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_advanced_signal_optimization_engine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_signalbiasdashboard",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalbiasdashboard.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_signalfusionmatrix",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalfusionmatrix.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_signalloopreinforcementengine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalloopreinforcementengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_signalvalidator",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signalvalidator.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_signal_engine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_engine.py",
      "category": "CORE.CORE",
      "functions": [
        "test_signal_engine_compliance",
        "test_signal_detection"
      ],
      "mt5_ready": true,
      "eventbus_ready": false
    },
    {
      "module_name": "ORPHAN_test_signal_fusion_matrix",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_fusion_matrix.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_signal_loop_reinforcement_engine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_signal_loop_reinforcement_engine.py",
      "category": "CORE.CORE",
      "functions": [
        "setUp",
        "test_initialization",
        "test_handle_execution_log",
        "test_handle_trade_journal_entry",
        "test_handle_backtest_results",
        "test_confidence_scoring_integration",
        "tearDown",
        "log_state"
      ],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_strategicsignalrefinementengine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategicsignalrefinementengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_StrategyMutationLogicEngine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_StrategyMutationLogicEngine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_strategyrecommenderengine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategyrecommenderengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_strategysentimentfusionengine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategysentimentfusionengine.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": true,
      "eventbus_ready": true
    },
    {
      "module_name": "ORPHAN_test_strategy_mutation_logic_engine",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategy_mutation_logic_engine.py",
      "category": "CORE.CORE",
      "functions": [
        "test_adaptive_rr_update",
        "test_macro_based_mutation",
        "test_performance_reversion",
        "test_feedback_sync_integrity",
        "test_indicator_sensitivity_mutation",
        "test_telemetry_hooks_phase41",
        "test_strategy_updated_emission",
        "run_all_tests"
      ],
      "mt5_ready": true,
      "eventbus_ready": false
    },
    {
      "module_name": "ORPHAN_test_strategy_mutation_phase13",
      "module_path": "EMERGENCY_COMPLIANCE_QUARANTINE\\VIOLATIONS\\ORPHAN_test_strategy_mutation_phase13.py",
      "category": "CORE.CORE",
      "functions": [],
      "mt5_ready": false,
      "eventbus_ready": true
    }
  ],
  "total_institutional": 151
}
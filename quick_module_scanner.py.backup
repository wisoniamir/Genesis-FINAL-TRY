#!/usr/bin/env python3
"""Quick module scanner to identify upgrade needs"""

import os
import re
from pathlib import Path

def quick_scan():
    workspace = Path("c:\\Users\\patra\\Genesis FINAL TRY")
    python_files = list(workspace.rglob("*.py"))
    
    results = {
        "total_modules": len(python_files),
        "needs_eventbus": 0,
        "needs_telemetry": 0,
        "needs_ftmo": 0,
        "needs_risk": 0,
        "needs_kill_switch": 0,
        "fully_compliant": 0
    }
    
    eventbus_pattern = r'from\s+(event_bus|core\.hardened_event_bus)\s+import'
    telemetry_pattern = r'emit_telemetry\('
    ftmo_pattern = r'(ftmo|FTMO|drawdown|daily_loss)'
    risk_pattern = r'(risk_management|position_sizing|stop_loss)'
    kill_pattern = r'(kill_switch|emergency_stop)'
    
    for py_file in python_files:
        try:
            with open(py_file, 'r', encoding='utf-8', errors='ignore') as f:
                content = f.read()
            
            has_eventbus = bool(re.search(eventbus_pattern, content, re.IGNORECASE))
            has_telemetry = bool(re.search(telemetry_pattern, content, re.IGNORECASE))
            has_ftmo = bool(re.search(ftmo_pattern, content, re.IGNORECASE))
            has_risk = bool(re.search(risk_pattern, content, re.IGNORECASE))
            has_kill = bool(re.search(kill_pattern, content, re.IGNORECASE))
            
            if not has_eventbus:
                results["needs_eventbus"] += 1
            if not has_telemetry:
                results["needs_telemetry"] += 1
            if not has_ftmo:
                results["needs_ftmo"] += 1
            if not has_risk:
                results["needs_risk"] += 1
            if not has_kill:
                results["needs_kill_switch"] += 1
            
            if all([has_eventbus, has_telemetry, has_ftmo, has_risk, has_kill]):
                results["fully_compliant"] += 1
                
        except Exception as e:
            print(f"Error scanning {py_file}: {e}")
    
    return results

if __name__ == "__main__":
    results = quick_scan()
    print("🔍 GENESIS Module Compliance Quick Scan")
    print("=" * 50)
    print(f"📊 Total Python Modules: {results['total_modules']}")
    print(f"🔗 Need EventBus Integration: {results['needs_eventbus']}")
    print(f"📊 Need Telemetry Hooks: {results['needs_telemetry']}")
    print(f"💰 Need FTMO Compliance: {results['needs_ftmo']}")
    print(f"⚠️ Need Risk Management: {results['needs_risk']}")
    print(f"🚨 Need Kill Switch: {results['needs_kill_switch']}")
    print(f"✅ Fully Compliant: {results['fully_compliant']}")
    print(f"📈 Compliance Rate: {(results['fully_compliant'] / results['total_modules'] * 100):.1f}%")

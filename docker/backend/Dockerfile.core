# ╔═══════════════════════════════════════════════════════════════════════════════════════════════╗
# ║                    🐳 GENESIS INSTITUTIONAL DOCKER PLATFORM                                  ║
# ║                    ARCHITECT MODE v7.0 - FULL ENTERPRISE ARCHITECTURE                       ║
# ║                    🚨 ZERO TOLERANCE - NO SIMPLIFIED VERSIONS                               ║
# ╚═══════════════════════════════════════════════════════════════════════════════════════════════╝

# Core Backend Service - Strategy Engine
FROM python:3.11-slim-bullseye

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# SYSTEM DEPENDENCIES & SECURITY HARDENING
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    curl \
    wget \
    git \
    vim \
    htop \
    procps \
    net-tools \
    iputils-ping \
    tcpdump \
    strace \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r genesis && useradd -r -g genesis genesis

# Create application directories
RUN mkdir -p /app/core \
             /app/modules \
             /app/strategy \
             /app/execution \
             /app/compliance \
             /app/telemetry \
             /app/config \
             /app/data \
             /app/logs \
             /app/cache \
             /app/tmp

# Set ownership
RUN chown -R genesis:genesis /app

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# PYTHON ENVIRONMENT SETUP
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Upgrade pip and install build tools
RUN pip install --no-cache-dir --upgrade \
    pip \
    setuptools \
    wheel \
    cython

# Copy requirements first for better caching
COPY requirements/core.txt /app/requirements/core.txt
COPY requirements/strategy.txt /app/requirements/strategy.txt
COPY requirements/telemetry.txt /app/requirements/telemetry.txt
COPY requirements/security.txt /app/requirements/security.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r /app/requirements/core.txt && \
    pip install --no-cache-dir -r /app/requirements/strategy.txt && \
    pip install --no-cache-dir -r /app/requirements/telemetry.txt && \
    pip install --no-cache-dir -r /app/requirements/security.txt

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# MT5 INTEGRATION DEPENDENCIES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install MetaTrader 5 Python package
RUN pip install --no-cache-dir MetaTrader5==5.0.45

# Install additional trading libraries
RUN pip install --no-cache-dir \
    ta-lib \
    pandas-ta \
    yfinance \
    alpha-vantage \
    ccxt \
    python-binance

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# TECHNICAL ANALYSIS & ML LIBRARIES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install machine learning libraries
RUN pip install --no-cache-dir \
    scikit-learn==1.3.2 \
    tensorflow==2.15.0 \
    torch==2.1.1 \
    xgboost==2.0.2 \
    lightgbm==4.1.0 \
    catboost==1.2.2

# Install statistical analysis libraries
RUN pip install --no-cache-dir \
    scipy==1.11.4 \
    statsmodels==0.14.0 \
    arch==6.2.0 \
    pymc==5.9.0

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# REAL-TIME PROCESSING & EVENT SYSTEMS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install async and real-time processing
RUN pip install --no-cache-dir \
    asyncio \
    aiohttp==3.9.1 \
    aiofiles==23.2.1 \
    websockets==12.0 \
    uvloop==0.19.0

# Install message brokers and event systems
RUN pip install --no-cache-dir \
    redis==5.0.1 \
    celery==5.3.4 \
    kombu==5.3.4 \
    pika==1.3.2 \
    kafka-python==2.0.2

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# DATABASE & STORAGE SYSTEMS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install database connectors
RUN pip install --no-cache-dir \
    psycopg2-binary==2.9.9 \
    sqlalchemy==2.0.23 \
    alembic==1.13.1 \
    pymongo==4.6.0 \
    influxdb-client==1.39.0

# Install caching and serialization
RUN pip install --no-cache-dir \
    pickle5 \
    dill==0.3.7 \
    joblib==1.3.2 \
    cloudpickle==3.0.0

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# MONITORING & OBSERVABILITY
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install monitoring and metrics
RUN pip install --no-cache-dir \
    prometheus-client==0.19.0 \
    grafana-api==1.0.3 \
    elastic-apm==6.20.0 \
    structlog==23.2.0

# Install performance profiling
RUN pip install --no-cache-dir \
    py-spy==0.3.14 \
    memory-profiler==0.61.0 \
    line-profiler==4.1.1 \
    psutil==5.9.6

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# SECURITY & CRYPTOGRAPHY
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install security libraries
RUN pip install --no-cache-dir \
    cryptography==41.0.7 \
    pycryptodome==3.19.0 \
    passlib==1.7.4 \
    bcrypt==4.1.2 \
    jwt==1.3.1 \
    python-jose==3.3.0

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# DEVELOPMENT & TESTING TOOLS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Install testing frameworks
RUN pip install --no-cache-dir \
    pytest==7.4.3 \
    pytest-asyncio==0.21.1 \
    pytest-cov==4.1.0 \
    pytest-xdist==3.5.0 \
    pytest-mock==3.12.0

# Install code quality tools
RUN pip install --no-cache-dir \
    black==23.11.0 \
    isort==5.12.0 \
    flake8==6.1.0 \
    mypy==1.7.1 \
    bandit==1.7.5

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# APPLICATION CODE DEPLOYMENT
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Switch to non-root user
USER genesis

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=genesis:genesis ./core /app/core
COPY --chown=genesis:genesis ./modules /app/modules
COPY --chown=genesis:genesis ./compliance /app/compliance
COPY --chown=genesis:genesis ./telemetry /app/telemetry
COPY --chown=genesis:genesis ./config /app/config

# Copy startup scripts
COPY --chown=genesis:genesis ./docker/scripts/entrypoint.sh /app/entrypoint.sh
COPY --chown=genesis:genesis ./docker/scripts/healthcheck.py /app/healthcheck.py
COPY --chown=genesis:genesis ./docker/scripts/wait-for-it.sh /app/wait-for-it.sh

# Make scripts executable
USER root
RUN chmod +x /app/entrypoint.sh /app/wait-for-it.sh
USER genesis

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ENVIRONMENT CONFIGURATION
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Set environment variables
ENV PYTHONPATH=/app:/app/core:/app/modules
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV TZ=UTC

# Architect Mode Environment Variables
ENV ARCHITECT_MODE=v7.0
ENV ZERO_TOLERANCE=true
ENV TELEMETRY_ENABLED=true
ENV EVENT_BUS_ENABLED=true
ENV COMPLIANCE_ENFORCED=true
ENV REAL_DATA_ONLY=true
ENV MOCK_DATA_FORBIDDEN=true

# Service-specific environment
ENV SERVICE_NAME=strategy_engine
ENV SERVICE_VERSION=1.0.0
ENV COMPLIANCE_SCORE=10
ENV HEARTBEAT_INTERVAL=15

# Logging configuration
ENV LOG_LEVEL=INFO
ENV LOG_FORMAT=json
ENV LOG_ROTATION=daily
ENV LOG_RETENTION=30

# Performance tuning
ENV MAX_WORKERS=4
ENV WORKER_CONNECTIONS=1000
ENV KEEPALIVE=2
ENV MAX_REQUESTS=10000
ENV MAX_REQUESTS_JITTER=1000

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# HEALTH CHECK & MONITORING
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Health check configuration
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python /app/healthcheck.py || exit 1

# Expose ports
EXPOSE 8000 8080 9090

# Volume mounts
VOLUME ["/app/data", "/app/logs", "/app/config", "/app/cache"]

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# STARTUP CONFIGURATION
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# Default command
CMD ["python", "-m", "modules.strategy.strategy_engine"]

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# METADATA & LABELS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

LABEL org.opencontainers.image.title="GENESIS Strategy Engine"
LABEL org.opencontainers.image.description="Institutional-grade strategy engine with full EventBus integration"
LABEL org.opencontainers.image.version="7.0.0"
LABEL org.opencontainers.image.vendor="GENESIS Trading Systems"
LABEL org.opencontainers.image.authors="GENESIS Development Team"
LABEL org.opencontainers.image.licenses="Proprietary"
LABEL architect.mode="v7.0"
LABEL architect.compliance="ULTIMATE_ENFORCEMENT"
LABEL architect.zero_tolerance="true"
LABEL service.type="strategy_engine"
LABEL service.compliance_score="10"
LABEL service.eventbus_required="true"
LABEL service.telemetry_required="true"
LABEL service.real_data_only="true"
